{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 52d58542dab9b89cdc1e","webpack:///./src/index.js","webpack:///./src/caching/index.js","webpack:///./src/culture/index.js","webpack:///./src/mingle/index.js","webpack:///./src/picklist/index.js","webpack:///./test/mocks/mockSDataCultureClass.js","webpack:///./index.js"],"names":["GeneralMessages","MissingRequiredFunctionalityError","NoInputNothingSetWarning","NamespaceAndNameParameterError","CannotRemoveNoItemForLanguageWarning","CachingServiceMessages","constructorError","setCacheStorageError","setCacheStorageWarning","getItemError","setItemError","removeItemError","removeMissingItemWarning","UnitOfTime","YEAR","MONTH","DAY","HOUR","MINUTE","SECOND","MILLISECOND","CachingService","storage","lifecycle","units","setCacheStorage","seed","lifespan","lifespanUnits","getItem","setItem","removeItem","_cacheStorage","Error","console","warn","namespace","name","context","map","convertArgumentsToBitMap","uID","addAndGrabNamespaceKey","dataData","data","JSON","parse","item","writeData","key","foundItem","itemToAdd","create","timeStamp","expires","expiresStamp","stringify","namespaceObj","objData","keys","i","length","id","splice","getNamespaceKeys","now","Date","UTC","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","setYear","date","objectName","listOfkeys","keyArr","filter","x","uniqueLocalID","push","CultureService","cacheService","cache","activeTag","allTag","nameSpace","neutralTag","regionTag","query","params","getFromCache","tag","onSuccess","createQueryForCodes","me","Test","makeRequest","read","async","success","failure","onFail","o","scope","callback","resource","$resources","cultureList","response","lists","allLanguages","getResult","setAndGetFromCache","neutralLanguages","regionLanguage","activeLanguages","tagUsed","skipGet","MingleService","options","accessToken","application","location","window","mingleConfig","redirectAction","redirect","url","href","bind","responseType","state","authorizationUrl","mingleSettings","pu","oa","redirectURI","mingleRedirectUrl","clientId","ci","encodeURI","isOnline","requiresMingleRefresh","hash","redirectToMingle","toast","refreshText","refreshTitle","substring","result","split","reduce","values","parts","access_token","expires_in","setTimeout","add","message","title","toastTime","showProgressBar","refreshAccessToken","error","PickListService","service","_storage","_service","_uri","_storageNameSpace","_storagePropertyDataTypeNameSpace","_storageFormDataTypeNameSpace","header","onError","config","_notImplemented","headerId","createItemByHeaderKey","headerName","headerKey","isId","itemArr","createItemsByHeaderKey","getFirstByKey","language","_getBrowserLanguage","useCache","cachedResult","_buildOutOptions","where","_isNameOrID","handlers","log","passedIn","nameArr","getAllByKey","idArr","pickList","deleteByKey","code","deleteItemByHeaderKey","entityName","propertyName","cachedToken","select","resourceKind","filterByLanguage","include","parent","_storageDataTypeNameSpace","formName","pickListName","lang","obj","setResourceKind","setQueryArg","join","undefined","storageMode","results","optionName","includeItems","optionsObj","pickListServiceOptions","toLowerCase","strLangCode","userLangs","potentialLanguage","strVal","j","includeFallbacks","languageFromCookie","_getLanguageFromCookie","userLang","_getFromLanguageFromNavigator","languagePlusFallBacks","_breakDownALanguageCodeIntoFallBackParts","navigator","userLanguage","browserLanguage","cookieLangaugeKey","document","cookie","getCookie","cookies","forEach","trim","startsWith","replace","functionName","MockSDataCulture","queryResult","$httpStatus","$descriptor","request","DisplayText","CultureCode","expectSuccess"],"mappings":"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","file":"icrm-js-services.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ICRMServicesSDK\"] = factory();\n\telse\n\t\troot[\"ICRMServicesSDK\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 6);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 52d58542dab9b89cdc1e","/**\n * @module\n * @description\n * Common API\n */\nexport * from './caching';\nexport * from './culture';\nexport * from './mingle';\nexport * from './picklist';\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","const GeneralMessages = {\n  MissingRequiredFunctionalityError: 'The store provided was not compatible with the generic storage service. the store needs to have the following methods methods: getItem, setItem, removeItem.',\n  NoInputNothingSetWarning: 'Nothing was set, input was null.',\n  NamespaceAndNameParameterError: 'namespaceOrKey is required to be a string value.',\n  CannotRemoveNoItemForLanguageWarning: 'Item missing for the language',\n};\nexport const CachingServiceMessages = {\n  constructorError: GeneralMessages.MissingRequiredFunctionalityError,\n  setCacheStorageError: GeneralMessages.MissingRequiredFunctionalityError,\n  setCacheStorageWarning: GeneralMessages.NoInputNothingSetWarning,\n  getItemError: GeneralMessages.NamespaceAndNameParameterError,\n  setItemError: GeneralMessages.NamespaceAndNameParameterError,\n  removeItemError: GeneralMessages.NamespaceAndNameParameterError,\n  removeMissingItemWarning: GeneralMessages.CannotRemoveNoItemForLanguageWarning,\n};\n\nexport const UnitOfTime = {\n  YEAR: 0,\n  MONTH: 1,\n  DAY: 2,\n  HOUR: 3,\n  MINUTE: 4,\n  SECOND: 5,\n  MILLISECOND: 6,\n};\n\n/**\n * Caching Service class to act as a wrapper for different web/browser data stores.\n * @class CachingService\n */\nexport class CachingService {\n  /**\n   * Initialize Sage.CachingService, a simple wrapper for different web/browser data stores.\n   * @param {Object} storage  Will normally be either localStorage, or sessionStorage, but does not need to be.\n   *      Though it must have the following functions:\n   *                  getItem()\n   *                  setItem()\n   *                  removeItem()\n   * @param {Number} lifecycle a number indicating how long to keep the cache around. default value is 5.\n   * @param {UnitOfTime} units describe the provided lifecycle value, and itself is a value from the list:\n   *                [years, months, days, hours, minutes, seconds, milliseconds]\n   */\n  constructor(storage, lifecycle, units) {\n    this.setCacheStorage(storage);\n    this.seed = 1;\n    this.lifespan = lifecycle || 5;\n    this.lifespanUnits = units || UnitOfTime.DAY;\n  }\n\n  /**\n   * @function set the data store used by this class.\n   *\n   * @param {Object} storage  Will normally be either localStorage, or sessionStorage, but does not need to be.\n   *      Though it must have the following functions:\n   *                  getItem()\n   *                  setItem()\n   *                  removeItem()\n   */\n  setCacheStorage(storage) {\n    if (storage) {\n      if (typeof (storage.getItem) === 'function' &&\n        typeof (storage.setItem) === 'function' &&\n        typeof (storage.removeItem) === 'function') {\n        this._cacheStorage = storage;\n      } else {\n        throw new Error(CachingServiceMessages.setCacheStorageError);\n      }\n    } else {\n      console.warn(CachingServiceMessages.setCacheStorageWarning); //eslint-disable-line\n    }\n  }\n\n  /**\n   * @function retrieve the data store used by this class.\n   */\n  getCacheStorage() {\n    return this._cacheStorage;\n  }\n\n  /**\n   * @function retrieve an item from the data store.\n   *\n    * @param {String} namespace reference to the map in storage that pairs the object name with the storage id of that object.\n   *                            if an name  and context is not provided, then the namespace will be the reference to the object in storage.\n   * @param {String} name the name of the object being retrieved. This name is mapped to an id which is used to retrieve the data.\n   * @param {String} context a key based off of the current state. It is a reference to a sub object in storage.\n   */\n  getItem(namespace, name, context) {\n    const map = this.convertArgumentsToBitMap(namespace, name, context);\n    switch (map) {\n      case 7: // have a value for namespace, name, context\n        {\n          const uID = this.addAndGrabNamespaceKey(namespace, name);\n          const dataData = this._cacheStorage.getItem(uID);\n          const data = dataData ? JSON.parse(dataData) || dataData : null;\n          return data && data.context && data.context[context] ? data.context[context] : null;\n        }\n      case 6: // have a value for namespace, name\n        {\n          const uID = this.addAndGrabNamespaceKey(namespace, name);\n          const dataData = this._cacheStorage.getItem(uID);\n          const data = dataData ? JSON.parse(dataData) || dataData : null;\n          return data && data.data ? data.data : null;\n        }\n      case 4: // have a value for namespace\n        {\n          return this._cacheStorage.getItem(namespace);\n        }\n      default:\n        throw new Error(CachingServiceMessages.removeItemError);\n    }\n  }\n\n  /**\n   * @function save an item from the data store.\n   *\n   * @param {String} namespace reference to the map in storage that pairs the object name with the storage id of that object.\n   *                            if an name  and context is not provided, then the namespace will be the reference to the object in storage.\n   * @param {String} name the name of the object being retrieved. This name is mapped to an id which is used to retrieve the data.\n   * @param {String} context a key based off of the current state. It is a reference to a sub object in storage.\n   * @param {Object} item the item to be saved to the data store.\n   */\n  setItem(namespace, name, context, item) {\n    const map = this.convertArgumentsToBitMap(namespace, name, context);\n    let uID = namespace;\n    switch (map) {\n      case 7: // have a value for namespace, name, context\n        {\n          uID = this.addAndGrabNamespaceKey(namespace, name);\n          break;\n        }\n      case 6: // have a value for namespace, name\n        {\n          uID = this.addAndGrabNamespaceKey(namespace, name);\n          context = null;\n          break;\n        }\n      case 4: // have a value for namespace\n        {\n          context = null;\n          break;\n        }\n      default:\n        throw new Error(CachingServiceMessages.removeItemError);\n    }\n    this.writeData(uID, item, context);\n  }\n  /* helper function for getItem*/\n  writeData(key, item, context) {\n    const foundItem = this._cacheStorage.getItem(key);\n    let itemToAdd = context ? { context: {} } : { create: this.timeStamp(), expires: this.expiresStamp() };\n    if (context) {\n      itemToAdd.context[`${context}@`] = this.timeStamp();\n      itemToAdd.context[`${context}!`] = this.expiresStamp();\n    }\n    if (foundItem) {\n      itemToAdd = JSON.parse(foundItem);\n    }\n    if (context) {\n      itemToAdd.context[context] = item;\n    } else {\n      itemToAdd.data = item;\n    }\n    this._cacheStorage.setItem(key, JSON.stringify(itemToAdd));\n  }\n  /**\n   * @function remove an item from the data store.\n   *\n    * @param {String} namespace reference to the map in storage that pairs the object name with the storage id of that object.\n   *                            if an name  and context is not provided, then the namespace will be the reference to the object in storage.\n   * @param {String} name the name of the object being retrieved. This name is mapped to an id which is used to retrieve the data.\n   * @param {String} context a key based off of the current state. It is a reference to a sub object in storage.\n   */\n  removeItem(namespace, name, context) {\n    const map = this.convertArgumentsToBitMap(namespace, name, context);\n    switch (map) {\n      case 7: // have a value for namespace, name, context\n        {\n          const namespaceObj = this._cacheStorage.getItem(namespace);\n          if (namespaceObj) {\n            const objData = JSON.parse(namespaceObj);\n            if (objData.expires && objData.expires < this.timeStamp()) {\n              this._cacheStorage.removeItem(name);\n            } else {\n              if (objData.context) {\n                delete objData.context[context];\n              }\n              this._cacheStorage.setItem(name, JSON.stringify(objData));\n            }\n          }\n          break;\n        }\n      case 6: // have a value for namespace, name\n        {\n          const namespaceObj = this._cacheStorage.getItem(namespace);\n          if (namespaceObj) {\n            const objData = JSON.parse(namespaceObj);\n            if (objData && objData.keys) {\n              for (let i = 0; i < objData.keys.length; i++) {\n                const item = objData.keys[i];\n                if (item && item.name === name) {\n                  if (this._cacheStorage.getItem(item.id) != null) {\n                    this._cacheStorage.removeItem(item.id);\n                  }\n                  objData.keys.splice(i, 1);\n                }\n              }\n              this._cacheStorage.setItem(namespace, JSON.stringify(objData));\n            }\n          }\n          break;\n        }\n      case 4: // have a value for namespace\n        {\n          const keys = this.getNamespaceKeys(namespace);\n          if (keys) {\n            for (let i = 0; i < keys.length; i++) {\n              const item = keys[i];\n              if (item && item.id && this._cacheStorage.getItem(item.id)) {\n                this._cacheStorage.removeItem(item.id);\n              }\n            }\n          }\n          this._cacheStorage.removeItem(namespace);\n          break;\n        }\n      default:\n        throw new Error(CachingServiceMessages.removeItemError);\n    }\n  }\n  /* utility method used for a specific argument pattern used to direct funcitonlity based on arguments provided */\n  convertArgumentsToBitMap(namespace, name, context) { //eslint-disable-line\n    let map = (typeof (namespace) === 'string' ? 1 : 0);\n    map = map << 1;\n    map = map | (typeof (name) === 'string' ? 1 : 0);\n    map = map << 1;\n    map = map | (typeof (context) === 'string' ? 1 : 0);\n    if (map <= 3) { // no namespace = error\n      throw new Error(CachingServiceMessages.removeItemError);\n    }\n    if (map === 5) { // a context value, but no name = error\n      throw new Error(CachingServiceMessages.removeItemError);\n    }\n    return map;\n  }\n  /* utility function for getting a UTC timestamp*/\n  timeStamp() { //eslint-disable-line\n    const now = new Date();\n    return Date.UTC(now.getUTCFullYear(), now.getUTCMonth(), now.getUTCDate(),\n      now.getUTCHours(), now.getUTCMinutes(), now.getUTCSeconds(), now.getUTCMilliseconds());\n  }\n  /* utility function for getting a UTC timestamp*/\n  expiresStamp() { //eslint-disable-line\n    const expires = new Date(this.timeStamp());\n    switch (this.lifespanUnits) {\n      case UnitOfTime.YEAR:\n        return expires.setYear(expires.getUTCFullYear() + this.lifespan);\n      case UnitOfTime.MONTH:\n        return expires.setYear(expires.getUTCMonth() + this.lifespan);\n      case UnitOfTime.DAY:\n        return expires.setYear(expires.getUTCDate() + this.lifespan);\n      case UnitOfTime.HOUR:\n        return expires.setYear(expires.getUTCHours() + this.lifespan);\n      case UnitOfTime.MINUTE:\n        return expires.setYear(expires.getUTCMinutes() + this.lifespan);\n      case UnitOfTime.SECOND:\n        return expires.setYear(expires.getUTCSeconds() + this.lifespan);\n      case UnitOfTime.MILLISECOND:\n        return expires.setYear(expires.getUTCMilliseconds() + this.lifespan);\n      default:\n        return expires;\n    }\n  }\n  /* a helper method that controls the id generation logic*/\n  uniqueLocalID() {\n    let date = Date.now();\n    // If created at same millisecond as previous\n    if (date <= this.seed) {\n      date = ++this.seed;\n    } else {\n      this.seed = date;\n    }\n    return date;\n  }\n  /* this helper defines the common task of getting the map of names to id for a provided namespace*/\n  getNamespaceKeys(namespace) {\n    const namespaceObj = this._cacheStorage.getItem(namespace);\n    return JSON.parse((namespaceObj || '{}')).keys || null;\n  }\n  /* a helper that attempts to get the mapped id of an object in a certain namespace.\n      If the id does not exist, one is created for the object name and returned*/\n  addAndGrabNamespaceKey(namespace, objectName) {\n    let listOfkeys = this.getNamespaceKeys(namespace);\n    let uID = null;\n    if (listOfkeys) {\n      const keyArr = listOfkeys.filter((x) => { return x.name === objectName; });\n      if (keyArr && keyArr[0] && keyArr[0].id) {\n        uID = keyArr[0].id;\n      }\n    } else {\n      listOfkeys = [];\n    }\n    if (uID === null) {\n      uID = this.uniqueLocalID();\n      listOfkeys.push({ name: objectName, id: uID });\n      this._cacheStorage.setItem(namespace, JSON.stringify({ keys: listOfkeys }));\n    }\n    return uID;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/caching/index.js","import { MockSDataCulture } from '../../test/mocks/mockSDataCultureClass';\n\nexport class CultureService {\n  constructor(cacheService = null) {\n    this.cache = cacheService;\n    this.activeTag = 'ActiveCodes';\n    this.allTag = 'AllCodes';\n    this.nameSpace = 'CultureCodes';\n    this.neutralTag = 'NeutralCodes';\n    this.regionTag = 'RegionCodes';\n  }\n  getAllCodes(query, params) {\n    this.getFromCache(this.allTag, query, params);\n  }\n  getNeutralCodes(query, params) {\n    this.getFromCache(this.neutralTag, query, params);\n  }\n  getRegionCodes(query, params) {\n    this.getFromCache(this.regionTag, query, params);\n  }\n  getActiveCodes(query, params) { // expects the path, ~/App_Data/LanguageList.xml, to exist on the Request's path. See Sage.SalesLogic.Web.EnabledLanguageList.cs\n    this.getFromCache(this.activeTag, query, params);\n  }\n  getFromCache(tag, query, params) {\n    const data = this.cache.getItem(this.nameSpace, tag) || null;\n    if (!(params || {}).onSuccess) {\n      throw new Error('A callback function of onSuccess is expected by the method. Without it no data can be accessed.');\n    }\n    if (!data) {\n      this.createQueryForCodes(query, tag, params);\n    } else {\n      this.onSuccess(data, tag, this, params.onSuccess);\n    }\n  }\n  createQueryForCodes(query, tag, params) {\n    const me = this; // incase scope is redefined by param\n    if (query === null || typeof query === 'undefined' || (params || {}).Test) {\n      console.warn('no request is being made, pulling from mock data'); //eslint-disable-line\n      me.onSuccess(new MockSDataCulture().makeRequest(), tag, me, (params || {}).onSuccess);\n    } else {\n      if (!query.read) {\n        throw new Error('The method needs to retrieve data, but the query object is missing the expected \\'read\\' function.');\n      }\n      query.read({\n        async: true, // <-setting to false causes warning in SlxClient so force it to be true.\n        success: (data) => {\n          me.onSuccess(data, tag, me, (params || {}).onSuccess);\n        },\n        failure: (params || {}).onFail || function onFail(o) { console.warn('%o', o); }, //eslint-disable-line\n        scope: (params || {}).scope || me,\n      });\n    }\n  }\n  onSuccess(data, tag, scope, callback) { /* marked as a method that should be static, but is a helper method only used in createQueryForCodes method. *///eslint-disable-line\n    const resource = data.$resources ? data.$resources[0] : data;\n    let cultureList = [];\n    if (resource.response) {\n      const lists = resource.response;\n      if (lists.allLanguages) {\n        const getResult = this.setAndGetFromCache(scope.cache, scope.nameSpace, scope.allTag, lists.allLanguages, scope.allTag === tag);\n        cultureList = getResult === null ? cultureList : getResult;\n      }\n      if (lists.neutralLanguages) {\n        const getResult = this.setAndGetFromCache(scope.cache, scope.nameSpace, scope.neutralTag, lists.neutralLanguages, scope.neutralTag === tag);\n        cultureList = getResult === null ? cultureList : getResult;\n      }\n      if (lists.regionLanguage) {\n        const getResult = this.setAndGetFromCache(scope.cache, scope.nameSpace, scope.regionTag, lists.regionLanguage, scope.regionTag === tag);\n        cultureList = getResult === null ? cultureList : getResult;\n      }\n      if (lists.activeLanguages) {\n        const getResult = this.setAndGetFromCache(scope.cache, scope.nameSpace, scope.activeTag, lists.activeLanguages, scope.activeTag === tag);\n        cultureList = getResult === null ? cultureList : getResult;\n      }\n    } else {\n      cultureList = resource;\n    }\n    if (callback) {\n      callback(typeof (cultureList) === 'string' ? JSON.parse(cultureList) : cultureList);\n    }\n  }\n  setAndGetFromCache(cache, nameSpace, tagUsed, data, skipGet) {  /* marked as a method that should be static, but is a helper method only used in onsucess method. *///eslint-disable-line\n    cache.setItem(nameSpace, tagUsed, null, data);\n    return skipGet ? cache.getItem(nameSpace, tagUsed) || [] : null;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/culture/index.js","/**\n * Mingle Service class to handle single sign on and other Ming.le functions\n * @class MingleService\n */\nexport class MingleService {\n  /**\n   * Instantiates the MingleService object\n   * @param {Object} options Takes in a configuration object with the following structure:\n   * {\n   *    accessToken: string;\n   *    application: Object; // Based on mobile's version of an application\n   *    location: Object; // Based on the window.location\n   *    mingleConfig: {\n   *      mingleSettings: {\n   *        ci: string;\n   *        pu: string;\n   *        oa: string;\n   *      },\n   *      mingleRedirectUrl: string;\n   *    };\n   *    redirectAction: function(url: string) => void;\n   *    responseType: string; // Defaulted to 'token'\n   * }\n   */\n  constructor(options = {}) {\n    this.accessToken = options.accessToken || '';\n    this.application = options.application || {};\n    this.location = options.location || window.location;\n    this.mingleConfig = options.mingleConfig || {};\n    this.redirectAction = options.redirectAction || function redirect(url) {\n      this.location.href = url;\n    }.bind(this);\n    this.responseType = options.responseType || 'token';\n  }\n  /**\n   * @function Populates the access token based on the passed parameters\n   * @param {Object} state The current state to be bound to the url request\n   */\n  redirectToMingle(state) {\n    const authorizationUrl = this.mingleConfig.mingleSettings.pu + this.mingleConfig.mingleSettings.oa;\n    const redirectURI = this.mingleConfig.mingleRedirectUrl;\n    const clientId = this.mingleConfig.mingleSettings.ci;\n    const url =\n           `${authorizationUrl}?` +\n           `client_id=${encodeURI(clientId)}&` +\n           `redirect_uri=${encodeURI(redirectURI)}&` +\n           `response_type=${encodeURI(this.responseType)}&` +\n           `state=${encodeURI(state)}&` +\n           'include_granted_scopes=false';\n    this.redirectAction(url);\n  }\n  /**\n   * @function Refreshes the access token for Ming.le\n   */\n  refreshAccessToken() {\n    if (!this.application.isOnline()) {\n      this.application.requiresMingleRefresh = true;\n      return;\n    }\n\n    const hash = 'mingleRefresh'; // location.hash.substring(2);\n    let state = '';\n    if (hash) {\n      state = `/redirectTo/${hash}`;\n    }\n    this.redirectToMingle(state);\n  }\n  /**\n   * @function Populates the access token based on the passed parameters\n   * @param {Object} toast The toast service used by the application, expects a function 'add'\n   *  that is passed the following object:\n   *    {\n   *      message: string;\n   *      title: string;\n   *      toastTime: number;\n   *      showProgressBar: boolean;\n   *    }\n   * @param {string} refreshText The message to be displayed by the toast service\n   * @param {string} refreshTitle The title of the toast to display when refreshing the token\n   */\n  populateAccessToken(toast, refreshText = 'Refreshing Ming.le token...', refreshTitle = 'Ming.le') {\n    const hash = this.location.hash.substring(1);\n    let result;\n    if (hash) {\n      result = hash.split('&').reduce((values, item) => {\n        const parts = item.split('=');\n        values[parts[0]] = parts[1];\n        return values;\n      }, {});\n\n      if (result.access_token) {\n        this.accessToken = result.access_token;\n        if (result.expires_in) {\n          // result.expires_in = '420'; // Refresh Test\n          setTimeout(() => {\n            toast.add({ message: refreshText, title: refreshTitle, toastTime: 300 * 1000, showProgressBar: true });\n            setTimeout(() => { this.refreshAccessToken(this.mingleConfig); }, 300 * 1000);\n            // Show message to user before 5 minutes of refresh (300 seconds)\n          }, (result.expires_in - 300) * 1000);\n        }\n      }\n    }\n\n    if (result) {\n      if (result.access_token || result.error) {\n        return result;\n      }\n    }\n\n    this.redirectToMingle(hash);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/mingle/index.js","/**\n * Picklist Service class\n */\nexport class PickListService {\n  /**\n   * Initialize Sage.PickListService\n   * @param {Object} storage\n   * @param {Object} service\n   */\n  constructor(storage = {}, service = null) {\n    this._storage = storage;\n    this._service = service;\n    this._uri = {};\n    this._storageNameSpace = 'PickListData';\n    this._storagePropertyDataTypeNameSpace = 'PickListData_PropertyDataType';\n    this._storageFormDataTypeNameSpace = 'PickListData_FormDataType';\n  }\n  /** CRUD **/\n  /** Create **/\n  /**\n   * @function create a picklist header record.\n   * @param {PickListObject} header\n   * @param {Function} callback defines how to react to a repsonse that is successful.\n   * @param {Function} onError defines how to react to a repsonse that is an error.\n   * @param {Object} config provides access to variables needed inside the response.\n   */\n  createHeader(header, callback, onError, config) {\n    this._notImplemented('createHeader', { header, callback, onError, config });\n  }\n  /**\n   * @function create a picklist item record.\n   * @param {String} headerId refers to a picklist header by its id.\n   * @param {PickListItemObject} item\n   * @param {Function} callback defines how to react to a repsonse that is successful.\n   * @param {Function} onError defines how to react to a repsonse that is an error.\n   * @param {Object} config provides access to variables needed inside the response.\n   */\n  createItemByHeaderID(headerId, item, callback, onError, config) {\n    this.createItemByHeaderKey(headerId, true, item, callback, onError, config);\n  }\n  /**\n   * @function create a picklist item record.\n   * @param {String} headerName refers to a picklist header by its name.\n   * @param {PickListItemObject} item\n   * @param {Function} callback defines how to react to a repsonse that is successful.\n   * @param {Function} onError defines how to react to a repsonse that is an error.\n   * @param {Object} config provides access to variables needed inside the response.\n   */\n  createItemByHeaderName(headerName, item, callback, onError, config) {\n    this.createItemByHeaderKey(headerName, false, item, callback, onError, config);\n  }\n  /**\n   * @function create a picklist item record.\n   * @param {String} headerKey refers to a picklist by either the Id or Name value.\n   * @param {Boolean} isId true ? the headerKey is an Id : the headerKey is a Name\n   * @param {PickListItemObject} item\n   * @param {Function} callback defines how to react to a repsonse that is successful.\n   * @param {Function} onError defines how to react to a repsonse that is an error.\n   * @param {Object} config provides access to variables needed inside the response.\n   */\n  createItemByHeaderKey(headerKey, isId, item, callback, onError, config) {\n    this._notImplemented('createItemByHeaderKey', { headerKey, isId, item, callback, onError, config });\n  }\n  /**\n   * @function create a picklist item record.\n   * @param {String} headerId refers to a picklist header by its id.\n   * @param {PickListItemObject[]} itemArr\n   * @param {Function} callback defines how to react to a repsonse that is successful.\n   * @param {Function} onError defines how to react to a repsonse that is an error.\n   * @param {Object} config provides access to variables needed inside the response.\n   */\n  createItemsByHeaderID(headerId, itemArr, callback, onError, config) {\n    this.createItemsByHeaderKey(headerId, true, itemArr, callback, onError, config);\n  }\n  /**\n   * @function create a picklist item record.\n   * @param {String} headerName refers to a picklist header by its name.\n   * @param {PickListItemObject[]} itemArr\n   * @param {Function} callback defines how to react to a repsonse that is successful.\n   * @param {Function} onError defines how to react to a repsonse that is an error.\n   * @param {Object} config provides access to variables needed inside the response.\n   */\n  createItemsByHeaderName(headerName, itemArr, callback, onError, config) {\n    this.createItemsByHeaderKey(headerName, false, itemArr, callback, onError, config);\n  }\n  /**\n   * @function create a picklist item record.\n   * @param {String} headerKey refers to a picklist by either the Id or Name value.\n   * @param {Boolean} isId true ? the headerKey is an Id : the headerKey is a Name\n   * @param {PickListItemObject[]} itemArr\n   * @param {Function} callback defines how to react to a repsonse that is successful.\n   * @param {Function} onError defines how to react to a repsonse that is an error.\n   * @param {Object} config provides access to variables needed inside the response.\n   */\n  createItemsByHeaderKey(headerKey, isId, itemArr, callback, onError, config) {\n    this._notImplemented('createItemsByHeaderKey', { headerKey, isId, itemArr, callback, onError, config });\n  }\n\n  /** Request **/\n  /** header and items **/\n  /**\n   * @function get one picklist(this first found) record with items.\n   * @param {String} name refers to the name property of a picklist header.\n   * @param {Function} callback defines how to react to a repsonse that is successful.\n   * @param {Function} onError defines how to react to a repsonse that is an error.\n   * @param {Object} config provides access to variables needed inside the response.\n   */\n  getFirstByName(name, callback, onError, config) {\n    return this.getFirstByKey(name, false, callback, onError, config);\n  }\n  /**\n   * @function get one picklist(this first found) record with items.\n   * @param {String} id refers to the id property of a picklist header.\n   * @param {Function} callback defines how to react to a repsonse that is successful.\n   * @param {Function} onError defines how to react to a repsonse that is an error.\n   * @param {Object} config provides access to variables needed inside the response.\n   */\n  getFirstById(id, callback, onError, config) {\n    return this.getFirstByKey(id, false, callback, onError, config);\n  }\n  /**\n   * @function get one picklist(this first found) record with items.\n   * @param {String} key refers to a picklist by either the Id or Name value.\n   * @param {Boolean} isId if true, then the key is an Id, else the key is a Name.\n   * @param {Function} callback defines how to react to a repsonse that is successful.\n   * @param {Function} onError defines how to react to a repsonse that is an error.\n   * @param {Object} config provides access to variables needed inside the response.\n   */\n  getFirstByKey(key, isId, callback, onError, config = {}) {\n    config.language = config.language || this._getBrowserLanguage(false);\n    const useCache = typeof (config.useCache) === 'boolean' && config.useCache;\n    const cachedResult = useCache ? this._storage.getItem(this._storageNameSpace, key, config.context || null) : null;\n    if (cachedResult) {\n      callback(cachedResult);\n    } else {\n      const options = this._buildOutOptions(config, true);\n      options.where = this._isNameOrID(isId, key);\n      return {\n        options,\n        handlers: {\n          async: typeof config.async === 'boolean' ? config.async : true, // adding back for slxClient's column formatters, they need the call to not be async to work.\n          success: (result) => {\n            if (result && result.$resources && result.$resources.length > 0) {\n              result = result.$resources[0];\n            }\n            this._storage.setItem(this._storageNameSpace, key, config.context || null, result);\n            if (typeof (callback) === 'function') {\n              callback(result);\n            } else {\n              console.log('picklistservice getByName success: %o', arguments); //eslint-disable-line\n            }\n          },\n          failure: (response) => {\n            if (typeof (onError) === 'function') {\n              onError(response);\n            } else {\n              console.log('picklistservice getByName failure: %o', arguments); //eslint-disable-line\n            }\n          },\n          config: { passedIn: config },\n        },\n      };\n    }\n  }\n  /**\n   * @function get a list of picklists record with items.\n   * @param {String[]} nameArr refers to the name property of a picklist header.\n   * @param {Boolean} useCache if true, then cache the response of the request, else don't cache the response.\n   * @param {Function} callback defines how to react to a repsonse that is successful.\n   * @param {Function} onError defines how to react to a repsonse that is an error.\n   * @param {Object} config provides access to variables needed inside the response.\n   */\n  getAllByName(nameArr, callback, onError, config) {\n    this.getAllByKey(nameArr, false, callback, onError, config);\n  }\n  /**\n   * @function get a list of picklists record with items.\n   * @param {String[]} idArr refers to the id property of a picklist header.\n   * @param {Boolean} useCache if true, then cache the response of the request, else don't cache the response.\n   * @param {Function} callback defines how to react to a repsonse that is successful.\n   * @param {Function} onError defines how to react to a repsonse that is an error.\n   * @param {Object} config provides access to variables needed inside the response.\n   */\n  getAllById(idArr, callback, onError, config) {\n    this.getAllByKey(idArr, true, callback, onError, config);\n  }\n  /**\n   * @function get a list of picklists record with items.\n   * @param {String} keyArr refers to a picklist by either the Id or Name value.\n   * @param {Boolean} isId if true, then the key is an Id, else the key is a Name.\n   * @param {Boolean} useCache if true, then cache the response of the request, else don't cache the response.\n   * @param {Function} callback defines how to react to a repsonse that is successful.\n   * @param {Function} onError defines how to react to a repsonse that is an error.\n   * @param {Object} config provides access to variables needed inside the response.\n   */\n  getAllByKey(keyArr, isId, callback, onError, config) {\n    this._notImplemented('getAllByKey', { keyArr, isId, callback, onError, config });\n  }\n\n  /** Update **/\n  /**\n   * @function update a picklist record.\n   * @param {PickListObject} pickList\n   * @param {Function} callback defines how to react to a repsonse that is successful.\n   * @param {Function} onError defines how to react to a repsonse that is an error.\n   * @param {Object} config provides access to variables needed inside the response.\n   */\n  update(pickList, callback, onError, config) {\n    this._notImplemented('update', { pickList, callback, onError, config });\n  }\n\n  /** Delete **/\n  /** header and items **/\n  /**\n   * @function remove a picklist header and its items record.\n   * @param {String} name refers to the name property of a picklist header.\n   * @param {Function} callback defines how to react to a repsonse that is successful.\n   * @param {Function} onError defines how to react to a repsonse that is an error.\n   * @param {Object} config provides access to variables needed inside the response.\n   */\n  deleteByName(name, callback, onError, config) {\n    this.deleteByKey(name, false, callback, onError, config);\n  }\n  /**\n   * @function remove a picklist header and its items record.\n   * @param {String} name refers to the id property of a picklist header.\n   * @param {Function} callback defines how to react to a repsonse that is successful.\n   * @param {Function} onError defines how to react to a repsonse that is an error.\n   * @param {Object} config provides access to variables needed inside the response.\n   */\n  deleteById(id, callback, onError, config) {\n    this.deleteByKey(id, true, callback, onError, config);\n  }\n  /**\n   * @function remove a picklist header and its items record.\n   * @param {String} key refers to a picklist by either the Id or Name value.\n   * @param {Boolean} isId if true, then the key is an Id, else the key is a Name.\n   * @param {Function} callback defines how to react to a repsonse that is successful.\n   * @param {Function} onError defines how to react to a repsonse that is an error.\n   * @param {Object} config provides access to variables needed inside the response.\n   */\n  deleteByKey(key, isId, callback, onError, config) {\n    this._notImplemented('deleteByKey', { key, isId, callback, onError, config });\n  }\n\n  /** No just header delete, because that would produce \"orphaned\" picklist items **/\n\n  /** just items **/\n  /**\n   * @function remove a picklist item record.\n   * @param {String} name refers to the name property of a picklist header.\n   * @param {String} code refers to the code property of a picklist item.\n   * @param {String} language refers to the language property of a picklist item.\n   * @param {Function} callback defines how to react to a repsonse that is successful.\n   * @param {Function} onError defines how to react to a repsonse that is an error.\n   * @param {Object} config provides access to variables needed inside the response.\n   */\n  deleteItemByHeaderName(name, code, language, callback, onError, config) {\n    this.deleteItemByHeaderKey(name, false, code, language, callback, onError, config);\n  }\n  /**\n   * @function remove a picklist item record.\n   * @param {String} id refers to the id property of a picklist header.\n   * @param {String} code refers to the code property of a picklist item.\n   * @param {String} language refers to the language property of a picklist item.\n   * @param {Function} callback defines how to react to a repsonse that is successful.\n   * @param {Function} onError defines how to react to a repsonse that is an error.\n   * @param {Object} config provides access to variables needed inside the response.\n   */\n  deleteItemByHeaderId(id, code, language, callback, onError, config) {\n    this.deleteItemByHeaderKey(id, true, code, language, callback, onError, config);\n  }\n  /**\n   * @function remove a picklist item record.\n   * @param {String} key refers to the id or name property of a picklist header.\n   * @param {Boolean} isId if true, then the key is an Id, else the key is a Name.\n   * @param {String} code refers to the code property of a picklist item.\n   * @param {String} language refers to the language property of a picklist item.\n   * @param {Function} callback defines how to react to a repsonse that is successful.\n   * @param {Function} onError defines how to react to a repsonse that is an error.\n   * @param {Object} config provides access to variables needed inside the response.\n   */\n  deleteItemByHeaderKey(key, isId, code, language, callback, onError, config) {\n    this._notImplemented('deleteItemByHeaderKey', { key, isId, code, language, callback, onError, config });\n  }\n  /**\n   * @function remove a picklist item record.\n   * @param {String} key refers to the id property of a picklist item.\n   * @param {Function} callback defines how to react to a repsonse that is successful.\n   * @param {Function} onError defines how to react to a repsonse that is an error.\n   * @param {Object} config provides access to variables needed inside the response.\n   */\n  deleteItemById(id, callback, onError, config) {\n    this._notImplemented('deleteItemById', { id, callback, onError, config });\n  }\n\n  /** Getting PickList DataTypeData information */\n  getPickListDataTypeDataFromEntityProperty(entityName, propertyName, callback, onError, config) {\n    config.language = config.language || this._getBrowserLanguage(false);\n    const cachedToken = `${entityName}_${propertyName}_${config.language}`;\n    const cachedResult = this._storage.getItem(this._storagePropertyDataTypeNameSpace, cachedToken);\n    if (cachedResult) {\n      callback(cachedResult);\n    } else {\n      return {\n        options: {\n          select: ['DataTypeData'],\n          resourceKind: `entities('${entityName}')/properties`,\n          service: 'metadata',\n          language: config.language || this._getBrowserLanguage(false),\n          filterByLanguage: config.filterByLanguage || false,\n          include: ['DataTypeData'],\n          where: `propertyName eq '${propertyName}'`,\n        },\n        handlers: {\n          success: (result) => {\n            if (result && result.$resources && result.$resources.length > 0) {\n              result = result.$resources[0];\n            }\n            this.parent._storage.setItem(this.parent._storageDataTypeNameSpace, cachedToken, result);\n            if (typeof (callback) === 'function') {\n              callback(result);\n            } else {\n              console.log('picklistservice getPickListDataTypeDataFromEntityProperty success: %o', arguments); //eslint-disable-line\n            }\n          },\n          failure: (response) => {\n            if (typeof (onError) === 'function') {\n              onError(response);\n            } else {\n              console.log('picklistservice getPickListDataTypeDataFromEntityProperty failure: %o', arguments); //eslint-disable-line\n            }\n          },\n          config: { parent: this, passedIn: config },\n        },\n      };\n    }\n  }\n  getPickListDataTypeDataFromForm(formName, pickListName = null, callback, onError, config) {\n    config.language = config.language || this._getBrowserLanguage(false);\n    const cachedToken = pickListName ? `${formName}_${pickListName}_${config.language}` : `${formName}_${config.language}`;\n    const cachedResult = this._storage.getItem(this._storageFormDataTypeNameSpace, cachedToken);\n    if (cachedResult) {\n      callback(cachedResult);\n    } else {\n      return {\n        options: {\n          resourceKind: `forms('${formName}')`,\n          service: 'metadata',\n          language: config.language || this._getBrowserLanguage(false),\n        },\n        handlers: {\n          success: (result) => {\n            if (result && result.$resources && result.$resources.length > 0) {\n              result = result.$resources[0];\n            }\n            this.parent._storage.setItem(this.parent._storageFormDataTypeNameSpace, cachedToken, result);\n            if (typeof (callback) === 'function') {\n              callback(result);\n            } else {\n              console.log('picklistservice getPickListDataTypeDataFromForm success: %o', arguments); //eslint-disable-line\n            }\n          },\n          failure: (response) => {\n            if (typeof (onError) === 'function') {\n              onError(response);\n            } else {\n              console.log('picklistservice getPickListDataTypeDataFromForm failure: %o', arguments); //eslint-disable-line\n            }\n          },\n          config: { parent: this, passedIn: config },\n        },\n      };\n    }\n  }\n  /** Caching **/\n  /**\n   * @function removes a cached item.\n   * @param {String} name reference to an item that has been cached.\n   *\n   * --Uses the storage value provided in the constructor.\n   */\n  clearCache(name, lang) {\n    const item = this._storage.getItem(this._storageNameSpace, name);\n    if (item) {\n      this._storage.removeItem(this._storageNameSpace, name);\n    }\n  }\n\n  /** MISC **/\n  /**\n   * @function clones the this class.\n   */\n  deepClone() {\n    return JSON.parse(JSON.stringify(this));\n  }\n  /**\n   * @function build up a request\n   * @param {Object} obj needs to contain the functions:\n   *                      setResourceKind()\n   *                      setQueryArg()\n   *\n   * @param {Object} options can contain\n   *                      {\n   *                          where: String?\n   *                          select: String?\n   *                          include: Boolean?\n   *                          language: String?\n   *                          filterByLanguage: Boolean?\n   *                          storageMode: {CODE, ID, TEXT}\n   *                      }\n   */\n  setUpRequest(obj, options) { /* though this could be a static function, that does not seem right since it is not much use outside this config*/ //eslint-disable-line \n    if (obj && options) {\n      if (typeof (obj.setResourceKind) === 'function' && typeof (obj.setQueryArg) === 'function') {\n        obj.setResourceKind(options.resourceKind);\n\n        if (options.where && options.where.length > 0) {\n          obj.setQueryArg('where', options.where);\n        }\n        if (options.select && options.select.length > 0) {\n          obj.setQueryArg('select', options.select.join(','));\n        }\n        if (options.include && options.include.length > 0) {\n          obj.setQueryArg('include', options.include.join(','));\n        }\n        if (options.language) {\n          obj.setQueryArg('language', options.language);\n        }\n        if (options.filter) { // for testing\n          obj.setQueryArg('filter', options.filter);\n        }\n        if (options.filterByLanguage !== undefined) {\n          obj.setQueryArg('filterByLanguage', options.filterByLanguage);\n        }\n        if (options.storageMode) {\n          obj.setQueryArg('storageMode', options.storageMode);\n        }\n      } else {\n        console.warn('argument is the wrong type: %o', obj); //eslint-disable-line\n      }\n    } else {\n      console.warn('arguments cannot be null'); //eslint-disable-line\n    }\n    return obj;\n  }\n\n  /* ** private functions **/\n  _buildHash(results) {\n    this._notImplemented('_buildHash', { results });\n  }\n  _returnOption(optionName, callback, onError, config) {\n    this._notImplemented('_returnOption', { optionName, callback, onError, config });\n  }\n  _isNameOrID(isId, key) { /* though this could be a static function, that does not seem right since it is not much use outside this config*/ //eslint-disable-line\n    if (typeof (isId) === 'boolean' && typeof (key) === 'string') {\n      return isId ? `id eq '${key}'` : `name eq '${key}'`;\n    }\n    throw new Error('isId needs to be a boolean; key needs to be a string');\n  }\n  _buildOutOptions(config = {}, includeItems = true) {\n    const optionsObj = {\n      select: [\n        'Id',\n        'name',\n        'allowMultiples',\n        'valueMustExist',\n        'required',\n        'alphaSorted',\n        'noneEditable',\n        'defaultLanguage',\n        'defaultCode',\n        // Include modifyDate to ensure that local storage data stays current.\n        'modifyDate',\n      ],\n      resourceKind: 'picklists',\n      service: this._service,\n      language: config.language || this._getBrowserLanguage(false),\n    };\n    if (includeItems) {\n      optionsObj.include = ['items'];\n      optionsObj.select.push('items/text');\n      optionsObj.select.push('items/code');\n      optionsObj.select.push('items/number');\n      optionsObj.select.push('items/filter');\n      optionsObj.select.push('items/languageCode');\n    }\n    if (config.pickListServiceOptions) {\n      if (config.pickListServiceOptions.filter !== null && typeof (config.pickListServiceOptions.filter) === 'string') {\n        optionsObj.filter = config.pickListServiceOptions.filter;\n      }\n      if (config.pickListServiceOptions.storageMode !== null && typeof (config.pickListServiceOptions.storageMode) === 'string') {\n        optionsObj.storageMode = config.pickListServiceOptions.storageMode;\n      }\n      if (config.pickListServiceOptions.filterByLanguage !== null) {\n        if (typeof (config.pickListServiceOptions.filterByLanguage) === 'boolean') {\n          optionsObj.filterByLanguage = config.pickListServiceOptions.filterByLanguage;\n        } else if (typeof (config.pickListServiceOptions.filterByLanguage) === 'string') {\n          optionsObj.filterByLanguage = config.pickListServiceOptions.filterByLanguage.toLowerCase() === 'true'; // default behavior is false, so assume user will only set if true\n        }\n      }\n    }\n    return optionsObj;\n  }\n  _breakDownALanguageCodeIntoFallBackParts(strLangCode = '') { /* though this could be a static function, it is a private helper function that works strictly within the config of _getBrowserLanguage*/ //eslint-disable-line\n    const userLangs = strLangCode.split('-');\n    const potentialLanguage = [];\n    for (let i = 0; i < userLangs.length; i++) {\n      let strVal = '';\n      for (let j = 0; j <= i; j++) {\n        strVal = strVal + (strVal.length > 0 ? '_' : '') + userLangs[j];\n      }\n      potentialLanguage.push(strVal);\n    }\n    return potentialLanguage;\n  }\n  _getBrowserLanguage(includeFallbacks = false) {\n    const languageFromCookie = this._getLanguageFromCookie();\n    let userLang = languageFromCookie || this._getFromLanguageFromNavigator();\n    if (!userLang) {\n      console.warn('no browser language found, will assume en-us for the rest.'); /* give warning because something went wrong... or in test enviroment */ //eslint-disable-line\n      userLang = 'en-us';\n    }\n    if (includeFallbacks) {\n      const languagePlusFallBacks = this._breakDownALanguageCodeIntoFallBackParts(userLang);\n      return languagePlusFallBacks;\n    }\n    return userLang;\n  }\n  _getFromLanguageFromNavigator() { /* does not need to reference this, it is a helper for _getBrowserLanguage */ //eslint-disable-line\n    if (typeof navigator !== 'undefined') {\n      return navigator.userLanguage || navigator.browserLanguage || navigator.language;\n    }\n    console.warn('no navigator object found. hardcoding language to en-us'); /* give warning because something went wrong... or in test enviroment */ //eslint-disable-line\n    return null;\n  }\n  _getLanguageFromCookie() {\n    let languageFromCookie = null;\n    const cookieLangaugeKey = 'SLXLanguageSetting';\n    if (typeof window !== 'undefined' && window.document && window.document.cookie) {\n      if ((typeof window.document.cookie.getCookie) === 'function') {\n        languageFromCookie = window.document.cookie.getCookie(cookieLangaugeKey);\n      } else {\n        const cookies = window.document.cookie.split(';');\n        cookies.forEach((cookie) => {\n          cookie = cookie.trim();\n          if (cookie.startsWith(cookieLangaugeKey)) {\n            cookie = cookie.replace(`${cookieLangaugeKey}`, '').trim(); // remove the key part of the cookie and any spaces\n            cookie = cookie.replace('=', '').trim(); // because there may or may not be a space between the key and '=', then remove now.\n            languageFromCookie = cookie;\n          }\n        }, this);\n      }\n    } else {\n      console.warn('no window/window.document/window.document.cookie object found');/* give warning because something went wrong... or in test enviroment */ //eslint-disable-line\n    }\n    return languageFromCookie;\n  }\n  _notImplemented(functionName, params) {/* a function to give the unimplemented functions a call to hush lint errors*/ //eslint-disable-line\n    throw new Error('%s with parameters %o is not implemented', functionName, params);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/picklist/index.js","export class MockSDataCulture {\n  constructor() {\n    this.queryResult = {\n      $httpStatus: 200,\n      $descriptor: '',\n      request: {},\n      response: {\n        neutralLanguages: [\n          { DisplayText: 'æ—¥æœ¬èªž [ja]', CultureCode: 'ja' },\n          { DisplayText: 'ä¸­æ–‡(ç¹é«”) èˆŠç‰ˆ [zh-cht]', CultureCode: 'zh-cht' },\n          { DisplayText: 'ä¸­æ–‡(ç¹é«”) [zh-hant]', CultureCode: 'zh-hant' },\n          { DisplayText: 'ä¸­æ–‡(ç®€ä½“) æ—§ç‰ˆ [zh-chs]', CultureCode: 'zh-chs' },\n          { DisplayText: 'ä¸­æ–‡(ç®€ä½“) [zh-hans]', CultureCode: 'zh-hans' },\n          { DisplayText: 'ä¸­æ–‡ [zh]', CultureCode: 'zh' },\n          { DisplayText: 'í•œêµ­ì–´ [ko]', CultureCode: 'ko' },\n          { DisplayText: 'ê†ˆêŒ ê±ê‚· [ii]', CultureCode: 'ii' },\n          { DisplayText: 'áŠ áˆ›áˆ­áŠ› [am]', CultureCode: 'am' },\n          { DisplayText: 'áƒá“„á’ƒá‘Žá‘á‘¦ [iu-cans]', CultureCode: 'iu-cans' },\n          { DisplayText: 'ážáŸ’áž˜áŸ‚ážš [km]', CultureCode: 'km' },\n          { DisplayText: 'àº¥àº²àº§ [lo]', CultureCode: 'lo' },\n          { DisplayText: 'à½–à½¼à½‘à¼‹à½¡à½²à½‚ [bo]', CultureCode: 'bo' },\n          { DisplayText: 'á ®á ¤á ¨á ­á ­á ¤á ¯ á ¬á ¡á ¯á ¡ [mn-mong]', CultureCode: 'mn-mong' },\n          { DisplayText: 'à¹„à¸—à¸¢ [th]', CultureCode: 'th' },\n          { DisplayText: 'à·ƒà·’à¶‚à·„à¶½ [si]', CultureCode: 'si' }, { DisplayText: 'à´®à´²à´¯à´¾à´³à´‚ [ml]', CultureCode: 'ml' }, { DisplayText: 'à²•à²¨à³à²¨à²¡ [kn]', CultureCode: 'kn' }, { DisplayText: 'à°¤à±†à°²à±à°—à± [te]', CultureCode: 'te' }, { DisplayText: 'à®¤à®®à®¿à®´à¯ [ta]', CultureCode: 'ta' }, { DisplayText: 'à¬“à­œà¬¿à¬† [or]', CultureCode: 'or' }, { DisplayText: 'àª—à«àªœàª°àª¾àª¤à«€ [gu]', CultureCode: 'gu' },\n          { DisplayText: 'à¨ªà©°à¨œà¨¾à¨¬à©€ [pa]', CultureCode: 'pa' }, { DisplayText: 'à¦¬à¦¾à¦‚à¦²à¦¾ [bn]', CultureCode: 'bn' }, { DisplayText: 'à¦…à¦¸à¦®à§€à§Ÿà¦¾ [as]', CultureCode: 'as' }, { DisplayText: 'à¤¹à¤¿à¤‚à¤¦à¥€ [hi]', CultureCode: 'hi' }, { DisplayText: 'à¤¸à¤‚à¤¸à¥à¤•à¥ƒà¤¤ [sa]', CultureCode: 'sa' }, { DisplayText: 'à¤®à¤°à¤¾à¤ à¥€ [mr]', CultureCode: 'mr' }, { DisplayText: 'à¤¨à¥‡à¤ªà¤¾à¤²à¥€ [ne]', CultureCode: 'ne' }, { DisplayText: 'à¤•à¥‹à¤‚à¤•à¤£à¥€ [kok]', CultureCode: 'kok' }, { DisplayText: 'Þ‹Þ¨ÞˆÞ¬Þ€Þ¨Þ„Þ¦ÞÞ° [dv]', CultureCode: 'dv' }, { DisplayText: 'Ü£Ü˜ÜªÜÜÜ [syr]', CultureCode: 'syr' }, { DisplayText: 'Ø¦Û‡ÙŠØºÛ‡Ø±Ú†Û• [ug]', CultureCode: 'ug' }, { DisplayText: 'ÙØ§Ø±Ø³Ù‰ [fa]', CultureCode: 'fa' },\n          { DisplayText: 'Ø¯Ø±Ù‰ [prs]', CultureCode: 'prs' }, { DisplayText: 'Ù¾ÚšØªÙˆ [ps]', CultureCode: 'ps' },\n          { DisplayText: 'Ø§Ù„Ø¹Ø±Ø¨ÙŠØ© [ar]', CultureCode: 'ar' }, { DisplayText: 'Ø§ÙØ±Ø¯Ùˆ [ur]', CultureCode: 'ur' },\n          { DisplayText: '×¢×‘×¨×™×ª [he]', CultureCode: 'he' }, { DisplayText: 'áƒ¥áƒáƒ áƒ—áƒ£áƒšáƒ˜ [ka]', CultureCode: 'ka' }, { DisplayText: 'Õ€Õ¡ÕµÕ¥Ö€Õ¥Õ¶ [hy]', CultureCode: 'hy' }, { DisplayText: 'ÑƒÐºÑ€Ð°Ñ—Ð½ÑÑŒÐºÐ° [uk]', CultureCode: 'uk' }, { DisplayText: 'ÐŽÐ·Ð±ÐµÐº [uz-cyrl]', CultureCode: 'uz-cyrl' }, { DisplayText: 'Ð¢Ð¾Ò·Ð¸ÐºÓ£ [tg-cyrl]', CultureCode: 'tg-cyrl' }, { DisplayText: 'Ð¢Ð¾Ò·Ð¸ÐºÓ£ [tg]', CultureCode: 'tg' }, { DisplayText: 'Ð¢Ð°Ñ‚Ð°Ñ€ [tt]', CultureCode: 'tt' }, { DisplayText: 'ÑÑ€Ð¿ÑÐºÐ¸ [sr-cyrl]', CultureCode: 'sr-cyrl' }, { DisplayText: 'ÑÐ°Ñ…Ð° [sah]', CultureCode: 'sah' }, { DisplayText: 'Ñ€ÑƒÑÑÐºÐ¸Ð¹ [ru]', CultureCode: 'ru' }, { DisplayText: 'ÐœÐ¾Ð½Ð³Ð¾Ð»Â Ñ…ÑÐ» [mn-cyrl]', CultureCode: 'mn-cyrl' }, { DisplayText: 'ÐœÐ¾Ð½Ð³Ð¾Ð»Â Ñ…ÑÐ» [mn]', CultureCode: 'mn' },\n          { DisplayText: 'Ð¼Ð°ÐºÐµÐ´Ð¾Ð½ÑÐºÐ¸ Ñ˜Ð°Ð·Ð¸Ðº [mk]', CultureCode: 'mk' },\n          { DisplayText: 'ÒšÐ°Ð·Ð°Ò› [kk]', CultureCode: 'kk' }, { DisplayText: 'ÐšÑ‹Ñ€Ð³Ñ‹Ð· [ky]', CultureCode: 'ky' }, { DisplayText: 'Ð±ÑŠÐ»Ð³Ð°Ñ€ÑÐºÐ¸ [bg]', CultureCode: 'bg' }, { DisplayText: 'Ð±Ð¾ÑÐ°Ð½ÑÐºÐ¸ [bs-cyrl]', CultureCode: 'bs-cyrl' }, { DisplayText: 'Ð‘ÐµÐ»Ð°Ñ€ÑƒÑÐºÑ– [be]', CultureCode: 'be' }, { DisplayText: 'Ð‘Ð°ÑˆÒ¡Ð¾Ñ€Ñ‚ [ba]', CultureCode: 'ba' }, { DisplayText: 'ÐÐ·Ó™Ñ€Ð±Ð°Ñ˜Ò¹Ð°Ð½Â Ð´Ð¸Ð»Ð¸ [az-cyrl]', CultureCode: 'az-cyrl' }, { DisplayText: 'Î•Î»Î»Î·Î½Î¹ÎºÎ¬ [el]', CultureCode: 'el' }, { DisplayText: 'Yoruba [yo]', CultureCode: 'yo' }, { DisplayText: 'Wolof [wo]', CultureCode: 'wo' }, { DisplayText: 'U\\'zbek [uz-latn]', CultureCode: 'uz-latn' }, { DisplayText: 'U\\'zbek [uz]', CultureCode: 'uz' }, { DisplayText: 'tÃ¼rkmenÃ§e [tk]', CultureCode: 'tk' }, { DisplayText: 'TÃ¼rkÃ§e [tr]', CultureCode: 'tr' }, { DisplayText: 'TiÃªÌng Viá»‡t [vi]', CultureCode: 'vi' }, { DisplayText: 'Tamazight [tzm-latn]', CultureCode: 'tzm-latn' },\n          { DisplayText: 'Tamazight [tzm]', CultureCode: 'tzm' }, { DisplayText: 'svenska [sv]', CultureCode: 'sv' }, { DisplayText: 'suomi [fi]', CultureCode: 'fi' }, { DisplayText: 'srpski [sr-latn]', CultureCode: 'sr-latn' }, { DisplayText: 'srpski [sr]', CultureCode: 'sr' }, { DisplayText: 'slovenski [sl]', CultureCode: 'sl' }, { DisplayText: 'slovenÄina [sk]', CultureCode: 'sk' }, { DisplayText: 'shqipe [sq]', CultureCode: 'sq' }, { DisplayText: 'Setswana [tn]', CultureCode: 'tn' }, { DisplayText: 'Sesotho sa Leboa [nso]', CultureCode: 'nso' }, { DisplayText: 'sÃ¤mikielÃ¢ [smn]', CultureCode: 'smn' }, { DisplayText: 'sÃ¤Ã¤mÂ´Ç©iÃµll [sms]', CultureCode: 'sms' }, { DisplayText: 'runasimi [quz]', CultureCode: 'quz' }, { DisplayText: 'Rumantsch [rm]', CultureCode: 'rm' }, { DisplayText: 'romÃ¢nÄƒ [ro]', CultureCode: 'ro' }, { DisplayText: 'Reo MÄori [mi]', CultureCode: 'mi' }, { DisplayText: 'PortuguÃªs [pt]', CultureCode: 'pt' }, { DisplayText: 'polski [pl]', CultureCode: 'pl' }, { DisplayText: 'Occitan [oc]', CultureCode: 'oc' }, { DisplayText: 'norsk [no]', CultureCode: 'no' }, { DisplayText: 'norsk (nynorsk) [nn]', CultureCode: 'nn' }, { DisplayText: 'norsk (bokmÃ¥l) [nb]', CultureCode: 'nb' }, { DisplayText: 'Nederlands [nl]', CultureCode: 'nl' }, { DisplayText: 'Mapudungun [arn]', CultureCode: 'arn' }, { DisplayText: 'Malti [mt]', CultureCode: 'mt' }, { DisplayText: 'magyar [hu]', CultureCode: 'hu' },\n          { DisplayText: 'lietuviÅ³ [lt]', CultureCode: 'lt' }, { DisplayText: 'LÃ«tzebuergesch [lb]', CultureCode: 'lb' }, { DisplayText: 'latvieÅ¡u [lv]', CultureCode: 'lv' }, { DisplayText: 'Kiswahili [sw]', CultureCode: 'sw' }, { DisplayText: 'Kinyarwanda [rw]', CultureCode: 'rw' }, { DisplayText: 'K\\'iche [qut]', CultureCode: 'qut' }, { DisplayText: 'Kanien\\'kÃ©ha [moh]', CultureCode: 'moh' }, { DisplayText: 'kalaallisut [kl]', CultureCode: 'kl' }, { DisplayText: 'julevusÃ¡megiella [smj]', CultureCode: 'smj' }, { DisplayText: 'italiano [it]', CultureCode: 'it' }, { DisplayText: 'Ã­slenska [is]', CultureCode: 'is' }, { DisplayText: 'isiZulu [zu]', CultureCode: 'zu' }, { DisplayText: 'isiXhosa [xh]', CultureCode: 'xh' }, { DisplayText: 'Invariant Language (Invariant Country) []', CultureCode: '' }, { DisplayText: 'Inuktitut [iu-latn]', CultureCode: 'iu-latn' }, { DisplayText: 'Inuktitut [iu]', CultureCode: 'iu' }, { DisplayText: 'Igbo [ig]', CultureCode: 'ig' },\n          { DisplayText: 'hrvatski [hr]', CultureCode: 'hr' }, { DisplayText: 'hornjoserbÅ¡Ä‡ina [hsb]', CultureCode: 'hsb' }, { DisplayText: 'Hausa [ha-latn]', CultureCode: 'ha-latn' }, { DisplayText: 'Hausa [ha]', CultureCode: 'ha' }, { DisplayText: 'galego [gl]', CultureCode: 'gl' }, { DisplayText: 'GÃ idhlig [gd]', CultureCode: 'gd' }, { DisplayText: 'Gaeilge [ga]', CultureCode: 'ga' }, { DisplayText: 'Frysk [fy]', CultureCode: 'fy' }, { DisplayText: 'franÃ§ais [fr]', CultureCode: 'fr' }, { DisplayText: 'fÃ¸royskt [fo]', CultureCode: 'fo' }, { DisplayText: 'Filipino [fil]', CultureCode: 'fil' }, { DisplayText: 'euskara [eu]', CultureCode: 'eu' }, { DisplayText: 'espaÃ±ol [es]', CultureCode: 'es' }, { DisplayText: 'English [en]', CultureCode: 'en' }, { DisplayText: 'ElsÃ¤ssisch [gsw]', CultureCode: 'gsw' }, { DisplayText: 'eesti [et]', CultureCode: 'et' }, { DisplayText: 'dolnoserbÅ¡Ä‡ina [dsb]', CultureCode: 'dsb' }, { DisplayText: 'Deutsch [de]', CultureCode: 'de' }, { DisplayText: 'davvisÃ¡megiella [se]', CultureCode: 'se' }, { DisplayText: 'dansk [da]', CultureCode: 'da' }, { DisplayText: 'Cymraeg [cy]', CultureCode: 'cy' }, { DisplayText: 'Corsu [co]', CultureCode: 'co' },\n          { DisplayText: 'ÄeÅ¡tina [cs]', CultureCode: 'cs' }, { DisplayText: 'catalÃ  [ca]', CultureCode: 'ca' }, { DisplayText: 'brezhoneg [br]', CultureCode: 'br' }, { DisplayText: 'bosanski [bs-latn]', CultureCode: 'bs-latn' }, { DisplayText: 'bosanski [bs]', CultureCode: 'bs' },\n          { DisplayText: 'Bahasa Melayu [ms]', CultureCode: 'ms' }, { DisplayText: 'Bahasa Indonesia [id]', CultureCode: 'id' }, { DisplayText: 'AzÉ™rbaycanÂ­Ä±lÄ± [az-latn]', CultureCode: 'az-latn' }, { DisplayText: 'AzÉ™rbaycanÂ­Ä±lÄ± [az]', CultureCode: 'az' }, { DisplayText: 'Afrikaans [af]', CultureCode: 'af' },\n          { DisplayText: 'Ã¥arjelsaemiengiele [sma]', CultureCode: 'sma' },\n        ],\n        allLanguages: [\n          { DisplayText: 'Ã¥arjelsaemiengiele (NÃ¶Ã¶rje) [sma-no]', CultureCode: 'sma-no' }, { DisplayText: 'Ã¥arjelsaemiengiele (Sveerje) [sma-se]', CultureCode: 'sma-se' }, { DisplayText: 'Ã¥arjelsaemiengiele [sma]', CultureCode: 'sma' }, { DisplayText: 'Afrikaans (Suid Afrika) [af-za]', CultureCode: 'af-za' }, { DisplayText: 'Afrikaans [af]', CultureCode: 'af' }, { DisplayText: 'AzÉ™rbaycanÂ­Ä±lÄ± [az]', CultureCode: 'az' }, { DisplayText: 'AzÉ™rbaycanÂ­Ä±lÄ± [az-latn]', CultureCode: 'az-latn' }, { DisplayText: 'Bahasa Indonesia (Indonesia) [id-id]', CultureCode: 'id-id' }, { DisplayText: 'Bahasa Indonesia [id]', CultureCode: 'id' }, { DisplayText: 'Bahasa Melayu (Brunei Darussalam) [ms-bn]', CultureCode: 'ms-bn' }, { DisplayText: 'Bahasa Melayu (Malaysia) [ms-my]', CultureCode: 'ms-my' }, { DisplayText: 'Bahasa Melayu [ms]', CultureCode: 'ms' }, { DisplayText: 'bosanski (Bosna i Hercegovina) [bs-latn-ba]', CultureCode: 'bs-latn-ba' }, { DisplayText: 'bosanski [bs]', CultureCode: 'bs' }, { DisplayText: 'bosanski [bs-latn]', CultureCode: 'bs-latn' }, { DisplayText: 'brezhoneg (FraÃ±s) [br-fr]', CultureCode: 'br-fr' }, { DisplayText: 'brezhoneg [br]', CultureCode: 'br' }, { DisplayText: 'catalÃ  (catalÃ ) [ca-es]', CultureCode: 'ca-es' }, { DisplayText: 'catalÃ  [ca]', CultureCode: 'ca' }, { DisplayText: 'ÄeÅ¡tina (ÄŒeskÃ¡Â republika) [cs-cz]', CultureCode: 'cs-cz' }, { DisplayText: 'ÄeÅ¡tina [cs]', CultureCode: 'cs' }, { DisplayText: 'Corsu (France) [co-fr]', CultureCode: 'co-fr' }, { DisplayText: 'Corsu [co]', CultureCode: 'co' }, { DisplayText: 'Cymraeg (y Deyrnas Unedig) [cy-gb]', CultureCode: 'cy-gb' }, { DisplayText: 'Cymraeg [cy]', CultureCode: 'cy' }, { DisplayText: 'dansk (Danmark) [da-dk]', CultureCode: 'da-dk' }, { DisplayText: 'dansk [da]', CultureCode: 'da' }, { DisplayText: 'davvisÃ¡megiella (Norga) [se-no]', CultureCode: 'se-no' }, { DisplayText: 'davvisÃ¡megiella (RuoÅ§Å§a) [se-se]', CultureCode: 'se-se' }, { DisplayText: 'davvisÃ¡megiella (Suopma) [se-fi]', CultureCode: 'se-fi' }, { DisplayText: 'davvisÃ¡megiella [se]', CultureCode: 'se' }, { DisplayText: 'Deutsch (Deutschland) [de-de]', CultureCode: 'de-de' }, { DisplayText: 'Deutsch (Liechtenstein) [de-li]', CultureCode: 'de-li' }, { DisplayText: 'Deutsch (Luxemburg) [de-lu]', CultureCode: 'de-lu' }, { DisplayText: 'Deutsch (Ã–sterreich) [de-at]', CultureCode: 'de-at' },\n          { DisplayText: 'Deutsch (Schweiz) [de-ch]', CultureCode: 'de-ch' }, { DisplayText: 'Deutsch [de]', CultureCode: 'de' }, { DisplayText: 'dolnoserbÅ¡Ä‡ina (Nimska) [dsb-de]', CultureCode: 'dsb-de' }, { DisplayText: 'dolnoserbÅ¡Ä‡ina [dsb]', CultureCode: 'dsb' }, { DisplayText: 'eesti (Eesti) [et-ee]', CultureCode: 'et-ee' }, { DisplayText: 'eesti [et]', CultureCode: 'et' }, { DisplayText: 'ElsÃ¤ssisch (FrÃ nkrisch) [gsw-fr]', CultureCode: 'gsw-fr' }, { DisplayText: 'ElsÃ¤ssisch [gsw]', CultureCode: 'gsw' }, { DisplayText: 'English (Australia) [en-au]', CultureCode: 'en-au' }, { DisplayText: 'English (Belize) [en-bz]', CultureCode: 'en-bz' }, { DisplayText: 'English (Canada) [en-ca]', CultureCode: 'en-ca' }, { DisplayText: 'English (Caribbean) [en-029]', CultureCode: 'en-029' }, { DisplayText: 'English (India) [en-in]', CultureCode: 'en-in' }, { DisplayText: 'English (Ireland) [en-ie]', CultureCode: 'en-ie' }, { DisplayText: 'English (Jamaica) [en-jm]', CultureCode: 'en-jm' }, { DisplayText: 'English (Malaysia) [en-my]', CultureCode: 'en-my' }, { DisplayText: 'English (New Zealand) [en-nz]', CultureCode: 'en-nz' }, { DisplayText: 'English (Philippines) [en-ph]', CultureCode: 'en-ph' }, { DisplayText: 'English (Singapore) [en-sg]', CultureCode: 'en-sg' }, { DisplayText: 'English (South Africa) [en-za]', CultureCode: 'en-za' }, { DisplayText: 'English (Trinidad y Tobago) [en-tt]', CultureCode: 'en-tt' }, { DisplayText: 'English (United Kingdom) [en-gb]', CultureCode: 'en-gb' }, { DisplayText: 'English (United States) [en-us]', CultureCode: 'en-us' }, { DisplayText: 'English (Zimbabwe) [en-zw]', CultureCode: 'en-zw' }, { DisplayText: 'English [en]', CultureCode: 'en' }, { DisplayText: 'EspaÃ±ol (Argentina) [es-ar]', CultureCode: 'es-ar' }, { DisplayText: 'EspaÃ±ol (Bolivia) [es-bo]', CultureCode: 'es-bo' }, { DisplayText: 'EspaÃ±ol (Chile) [es-cl]', CultureCode: 'es-cl' }, { DisplayText: 'EspaÃ±ol (Colombia) [es-co]', CultureCode: 'es-co' }, { DisplayText: 'EspaÃ±ol (Costa Rica) [es-cr]', CultureCode: 'es-cr' }, { DisplayText: 'EspaÃ±ol (Ecuador) [es-ec]', CultureCode: 'es-ec' }, { DisplayText: 'EspaÃ±ol (El Salvador) [es-sv]', CultureCode: 'es-sv' }, { DisplayText: 'EspaÃ±ol (EspaÃ±a, alfabetizaciÃ³n internacional) [es-es]', CultureCode: 'es-es' }, { DisplayText: 'EspaÃ±ol (Estados Unidos) [es-us]', CultureCode: 'es-us' },\n          { DisplayText: 'EspaÃ±ol (Guatemala) [es-gt]', CultureCode: 'es-gt' }, { DisplayText: 'EspaÃ±ol (Honduras) [es-hn]', CultureCode: 'es-hn' }, { DisplayText: 'EspaÃ±ol (MÃ©xico) [es-mx]', CultureCode: 'es-mx' }, { DisplayText: 'EspaÃ±ol (Nicaragua) [es-ni]', CultureCode: 'es-ni' }, { DisplayText: 'EspaÃ±ol (PanamÃ¡) [es-pa]', CultureCode: 'es-pa' }, { DisplayText: 'EspaÃ±ol (Paraguay) [es-py]', CultureCode: 'es-py' }, { DisplayText: 'EspaÃ±ol (PerÃº) [es-pe]', CultureCode: 'es-pe' }, { DisplayText: 'EspaÃ±ol (Puerto Rico) [es-pr]', CultureCode: 'es-pr' }, { DisplayText: 'EspaÃ±ol (Republica Bolivariana de Venezuela) [es-ve]', CultureCode: 'es-ve' }, { DisplayText: 'EspaÃ±ol (RepÃºblica Dominicana) [es-do]', CultureCode: 'es-do' }, { DisplayText: 'EspaÃ±ol (Uruguay) [es-uy]', CultureCode: 'es-uy' }, { DisplayText: 'espaÃ±ol [es]', CultureCode: 'es' }, { DisplayText: 'euskara (euskara) [eu-es]', CultureCode: 'eu-es' }, { DisplayText: 'euskara [eu]', CultureCode: 'eu' }, { DisplayText: 'Filipino (Pilipinas) [fil-ph]', CultureCode: 'fil-ph' }, { DisplayText: 'Filipino [fil]', CultureCode: 'fil' }, { DisplayText: 'fÃ¸royskt (FÃ¸royar) [fo-fo]', CultureCode: 'fo-fo' }, { DisplayText: 'fÃ¸royskt [fo]', CultureCode: 'fo' }, { DisplayText: 'franÃ§ais (Belgique) [fr-be]', CultureCode: 'fr-be' }, { DisplayText: 'franÃ§ais (Canada) [fr-ca]', CultureCode: 'fr-ca' }, { DisplayText: 'franÃ§ais (France) [fr-fr]', CultureCode: 'fr-fr' }, { DisplayText: 'franÃ§ais (Luxembourg) [fr-lu]', CultureCode: 'fr-lu' }, { DisplayText: 'franÃ§ais (PrincipautÃ© de Monaco) [fr-mc]', CultureCode: 'fr-mc' }, { DisplayText: 'franÃ§ais (Suisse) [fr-ch]', CultureCode: 'fr-ch' }, { DisplayText: 'franÃ§ais [fr]', CultureCode: 'fr' }, { DisplayText: 'Frysk (NederlÃ¢n) [fy-nl]', CultureCode: 'fy-nl' }, { DisplayText: 'Frysk [fy]', CultureCode: 'fy' }, { DisplayText: 'Gaeilge (Ã‰ire) [ga-ie]', CultureCode: 'ga-ie' }, { DisplayText: 'Gaeilge [ga]', CultureCode: 'ga' }, { DisplayText: 'GÃ idhlig (An RÃ¬oghachd Aonaichte) [gd-gb]', CultureCode: 'gd-gb' }, { DisplayText: 'GÃ idhlig [gd]', CultureCode: 'gd' }, { DisplayText: 'galego (galego) [gl-es]', CultureCode: 'gl-es' }, { DisplayText: 'galego [gl]', CultureCode: 'gl' }, { DisplayText: 'Hausa (Nigeria) [ha-latn-ng]', CultureCode: 'ha-latn-ng' }, { DisplayText: 'Hausa [ha]', CultureCode: 'ha' }, { DisplayText: 'Hausa [ha-latn]', CultureCode: 'ha-latn' },\n          { DisplayText: 'hornjoserbÅ¡Ä‡ina (NÄ›mska) [hsb-de]', CultureCode: 'hsb-de' }, { DisplayText: 'hornjoserbÅ¡Ä‡ina [hsb]', CultureCode: 'hsb' }, { DisplayText: 'hrvatski (Bosna i Hercegovina) [hr-ba]', CultureCode: 'hr-ba' }, { DisplayText: 'hrvatski (Hrvatska) [hr-hr]', CultureCode: 'hr-hr' }, { DisplayText: 'hrvatski [hr]', CultureCode: 'hr' }, { DisplayText: 'Igbo (Nigeria) [ig-ng]', CultureCode: 'ig-ng' }, { DisplayText: 'Igbo [ig]', CultureCode: 'ig' }, { DisplayText: 'Inuktitut (Kanatami) [iu-latn-ca]', CultureCode: 'iu-latn-ca' }, { DisplayText: 'Inuktitut [iu]', CultureCode: 'iu' }, { DisplayText: 'Inuktitut [iu-latn]', CultureCode: 'iu-latn' }, { DisplayText: 'Invariant Language (Invariant Country) []', CultureCode: '' }, { DisplayText: 'isiXhosa (uMzantsi Afrika) [xh-za]', CultureCode: 'xh-za' }, { DisplayText: 'isiXhosa [xh]', CultureCode: 'xh' }, { DisplayText: 'isiZulu (iNingizimu Afrika) [zu-za]', CultureCode: 'zu-za' }, { DisplayText: 'isiZulu [zu]', CultureCode: 'zu' }, { DisplayText: 'Ã­slenska (Ãsland) [is-is]', CultureCode: 'is-is' }, { DisplayText: 'Ã­slenska [is]', CultureCode: 'is' }, { DisplayText: 'italiano (Italia) [it-it]', CultureCode: 'it-it' }, { DisplayText: 'italiano (Svizzera) [it-ch]', CultureCode: 'it-ch' }, { DisplayText: 'italiano [it]', CultureCode: 'it' }, { DisplayText: 'julevusÃ¡megiella (Svierik) [smj-se]', CultureCode: 'smj-se' }, { DisplayText: 'julevusÃ¡megiella (Vuodna) [smj-no]', CultureCode: 'smj-no' }, { DisplayText: 'julevusÃ¡megiella [smj]', CultureCode: 'smj' }, { DisplayText: 'kalaallisut (Kalaallit Nunaat) [kl-gl]', CultureCode: 'kl-gl' }, { DisplayText: 'kalaallisut [kl]', CultureCode: 'kl' }, { DisplayText: 'Kanien\\'kÃ©ha [moh]', CultureCode: 'moh' }, { DisplayText: 'Kanien\\'kÃ©ha [moh-ca]', CultureCode: 'moh-ca' }, { DisplayText: 'K\\'iche (Guatemala) [qut-gt]', CultureCode: 'qut-gt' }, { DisplayText: 'K\\'iche [qut]', CultureCode: 'qut' }, { DisplayText: 'Kinyarwanda (Rwanda) [rw-rw]', CultureCode: 'rw-rw' }, { DisplayText: 'Kinyarwanda [rw]', CultureCode: 'rw' }, { DisplayText: 'Kiswahili (Kenya) [sw-ke]', CultureCode: 'sw-ke' }, { DisplayText: 'Kiswahili [sw]', CultureCode: 'sw' }, { DisplayText: 'latvieÅ¡u (Latvija) [lv-lv]', CultureCode: 'lv-lv' }, { DisplayText: 'latvieÅ¡u [lv]', CultureCode: 'lv' }, { DisplayText: 'LÃ«tzebuergesch (Luxembourg) [lb-lu]', CultureCode: 'lb-lu' },\n          { DisplayText: 'LÃ«tzebuergesch [lb]', CultureCode: 'lb' }, { DisplayText: 'lietuviÅ³ (Lietuva) [lt-lt]', CultureCode: 'lt-lt' }, { DisplayText: 'lietuviÅ³ [lt]', CultureCode: 'lt' }, { DisplayText: 'magyar (MagyarorszÃ¡g) [hu-hu]', CultureCode: 'hu-hu' }, { DisplayText: 'magyar [hu]', CultureCode: 'hu' }, { DisplayText: 'Malti (Malta) [mt-mt]', CultureCode: 'mt-mt' }, { DisplayText: 'Malti [mt]', CultureCode: 'mt' }, { DisplayText: 'Mapudungun (Chile) [arn-cl]', CultureCode: 'arn-cl' }, { DisplayText: 'Mapudungun [arn]', CultureCode: 'arn' }, { DisplayText: 'Nederlands (BelgiÃ«) [nl-be]', CultureCode: 'nl-be' }, { DisplayText: 'Nederlands (Nederland) [nl-nl]', CultureCode: 'nl-nl' }, { DisplayText: 'Nederlands [nl]', CultureCode: 'nl' }, { DisplayText: 'norsk (bokmÃ¥l) [nb]', CultureCode: 'nb' }, { DisplayText: 'norsk (nynorsk) [nn]', CultureCode: 'nn' }, { DisplayText: 'norsk [no]', CultureCode: 'no' }, { DisplayText: 'norsk, bokmÃ¥l (Norge) [nb-no]', CultureCode: 'nb-no' }, { DisplayText: 'norsk, nynorsk (Noreg) [nn-no]', CultureCode: 'nn-no' }, { DisplayText: 'Occitan (FranÃ§a) [oc-fr]', CultureCode: 'oc-fr' }, { DisplayText: 'Occitan [oc]', CultureCode: 'oc' }, { DisplayText: 'polski (Polska) [pl-pl]', CultureCode: 'pl-pl' }, { DisplayText: 'polski [pl]', CultureCode: 'pl' }, { DisplayText: 'PortuguÃªs (Brasil) [pt-br]', CultureCode: 'pt-br' }, { DisplayText: 'portuguÃªs (Portugal) [pt-pt]', CultureCode: 'pt-pt' }, { DisplayText: 'PortuguÃªs [pt]', CultureCode: 'pt' }, { DisplayText: 'Reo MÄori (Aotearoa) [mi-nz]', CultureCode: 'mi-nz' }, { DisplayText: 'Reo MÄori [mi]', CultureCode: 'mi' }, { DisplayText: 'romÃ¢nÄƒ (RomÃ¢nia) [ro-ro]', CultureCode: 'ro-ro' }, { DisplayText: 'romÃ¢nÄƒ [ro]', CultureCode: 'ro' }, { DisplayText: 'Rumantsch (Svizra) [rm-ch]', CultureCode: 'rm-ch' }, { DisplayText: 'Rumantsch [rm]', CultureCode: 'rm' }, { DisplayText: 'runasimi (Ecuador) [quz-ec]', CultureCode: 'quz-ec' }, { DisplayText: 'runasimi (Piruw) [quz-pe]', CultureCode: 'quz-pe' }, { DisplayText: 'runasimi (Qullasuyu) [quz-bo]', CultureCode: 'quz-bo' }, { DisplayText: 'runasimi [quz]', CultureCode: 'quz' }, { DisplayText: 'sÃ¤Ã¤mÂ´Ç©iÃµll (LÃ¤Ã¤Â´ddjÃ¢nnam) [sms-fi]', CultureCode: 'sms-fi' }, { DisplayText: 'sÃ¤Ã¤mÂ´Ç©iÃµll [sms]', CultureCode: 'sms' }, { DisplayText: 'sÃ¤mikielÃ¢ (SuomÃ¢) [smn-fi]', CultureCode: 'smn-fi' },\n          { DisplayText: 'sÃ¤mikielÃ¢ [smn]', CultureCode: 'smn' }, { DisplayText: 'Sesotho sa Leboa (Afrika Borwa) [nso-za]', CultureCode: 'nso-za' }, { DisplayText: 'Sesotho sa Leboa [nso]', CultureCode: 'nso' }, { DisplayText: 'Setswana (Aforika Borwa) [tn-za]', CultureCode: 'tn-za' }, { DisplayText: 'Setswana [tn]', CultureCode: 'tn' }, { DisplayText: 'shqipe (ShqipÃ«ria) [sq-al]', CultureCode: 'sq-al' }, { DisplayText: 'shqipe [sq]', CultureCode: 'sq' }, { DisplayText: 'slovenÄina (SlovenskÃ¡ republika) [sk-sk]', CultureCode: 'sk-sk' }, { DisplayText: 'slovenÄina [sk]', CultureCode: 'sk' }, { DisplayText: 'slovenski (Slovenija) [sl-si]', CultureCode: 'sl-si' }, { DisplayText: 'slovenski [sl]', CultureCode: 'sl' }, { DisplayText: 'srpski (Bosna i Hercegovina) [sr-latn-ba]', CultureCode: 'sr-latn-ba' }, { DisplayText: 'srpski (Crna Gora) [sr-latn-me]', CultureCode: 'sr-latn-me' }, { DisplayText: 'srpski (Srbija i Crna Gora (Prethodno)) [sr-latn-cs]', CultureCode: 'sr-latn-cs' }, { DisplayText: 'srpski (Srbija) [sr-latn-rs]', CultureCode: 'sr-latn-rs' }, { DisplayText: 'srpski [sr]', CultureCode: 'sr' }, { DisplayText: 'srpski [sr-latn]', CultureCode: 'sr-latn' }, { DisplayText: 'suomi (Suomi) [fi-fi]', CultureCode: 'fi-fi' }, { DisplayText: 'suomi [fi]', CultureCode: 'fi' }, { DisplayText: 'svenska (Finland) [sv-fi]', CultureCode: 'sv-fi' }, { DisplayText: 'svenska (Sverige) [sv-se]', CultureCode: 'sv-se' }, { DisplayText: 'svenska [sv]', CultureCode: 'sv' }, { DisplayText: 'Tamazight (DjazaÃ¯r) [tzm-latn-dz]', CultureCode: 'tzm-latn-dz' }, { DisplayText: 'Tamazight [tzm]', CultureCode: 'tzm' }, { DisplayText: 'Tamazight [tzm-latn]', CultureCode: 'tzm-latn' }, { DisplayText: 'TiÃªÌng Viá»‡t (Viá»‡t Nam) [vi-vn]', CultureCode: 'vi-vn' }, { DisplayText: 'TiÃªÌng Viá»‡t [vi]', CultureCode: 'vi' }, { DisplayText: 'TÃ¼rkÃ§e [tr]', CultureCode: 'tr' }, { DisplayText: 'tÃ¼rkmenÃ§e (TÃ¼rkmenistan) [tk-tm]', CultureCode: 'tk-tm' }, { DisplayText: 'tÃ¼rkmenÃ§e [tk]', CultureCode: 'tk' }, { DisplayText: 'U\\'zbek (U\\'zbekiston Respublikasi) [uz-latn-uz]', CultureCode: 'uz-latn-uz' }, { DisplayText: 'U\\'zbek [uz]', CultureCode: 'uz' }, { DisplayText: 'U\\'zbek [uz-latn]', CultureCode: 'uz-latn' }, { DisplayText: 'Wolof (SÃ©nÃ©gal) [wo-sn]', CultureCode: 'wo-sn' }, { DisplayText: 'Wolof [wo]', CultureCode: 'wo' }, { DisplayText: 'Yoruba (Nigeria) [yo-ng]', CultureCode: 'yo-ng' },\n          { DisplayText: 'Yoruba [yo]', CultureCode: 'yo' }, { DisplayText: 'Î•Î»Î»Î·Î½Î¹ÎºÎ¬ (Î•Î»Î»Î¬Î´Î±) [el-gr]', CultureCode: 'el-gr' }, { DisplayText: 'Î•Î»Î»Î·Î½Î¹ÎºÎ¬ [el]', CultureCode: 'el' }, { DisplayText: 'ÐÐ·Ó™Ñ€Ð±Ð°Ñ˜Ò¹Ð°Ð½Â Ð´Ð¸Ð»Ð¸ [az-cyrl]', CultureCode: 'az-cyrl' }, { DisplayText: 'Ð‘Ð°ÑˆÒ¡Ð¾Ñ€Ñ‚ (Ð Ð¾ÑÑÐ¸Ñ) [ba-ru]', CultureCode: 'ba-ru' }, { DisplayText: 'Ð‘Ð°ÑˆÒ¡Ð¾Ñ€Ñ‚ [ba]', CultureCode: 'ba' }, { DisplayText: 'Ð‘ÐµÐ»Ð°Ñ€ÑƒÑÐºÑ– (Ð‘ÐµÐ»Ð°Ñ€ÑƒÑÑŒ) [be-by]', CultureCode: 'be-by' }, { DisplayText: 'Ð‘ÐµÐ»Ð°Ñ€ÑƒÑÐºÑ– [be]', CultureCode: 'be' }, { DisplayText: 'Ð±Ð¾ÑÐ°Ð½ÑÐºÐ¸ (Ð‘Ð¾ÑÐ½Ð° Ð¸ Ð¥ÐµÑ€Ñ†ÐµÐ³Ð¾Ð²Ð¸Ð½Ð°) [bs-cyrl-ba]', CultureCode: 'bs-cyrl-ba' }, { DisplayText: 'Ð±Ð¾ÑÐ°Ð½ÑÐºÐ¸ [bs-cyrl]', CultureCode: 'bs-cyrl' }, { DisplayText: 'Ð±ÑŠÐ»Ð³Ð°Ñ€ÑÐºÐ¸ (Ð‘ÑŠÐ»Ð³Ð°Ñ€Ð¸Ñ) [bg-bg]', CultureCode: 'bg-bg' }, { DisplayText: 'Ð±ÑŠÐ»Ð³Ð°Ñ€ÑÐºÐ¸ [bg]', CultureCode: 'bg' }, { DisplayText: 'ÐšÑ‹Ñ€Ð³Ñ‹Ð· (ÐšÑ‹Ñ€Ð³Ñ‹Ð·ÑÑ‚Ð°Ð½) [ky-kg]', CultureCode: 'ky-kg' }, { DisplayText: 'ÐšÑ‹Ñ€Ð³Ñ‹Ð· [ky]', CultureCode: 'ky' }, { DisplayText: 'ÒšÐ°Ð·Ð°Ò› (ÒšÐ°Ð·Ð°Ò›ÑÑ‚Ð°Ð½) [kk-kz]', CultureCode: 'kk-kz' }, { DisplayText: 'ÒšÐ°Ð·Ð°Ò› [kk]', CultureCode: 'kk' }, { DisplayText: 'Ð¼Ð°ÐºÐµÐ´Ð¾Ð½ÑÐºÐ¸ Ñ˜Ð°Ð·Ð¸Ðº (ÐœÐ°ÐºÐµÐ´Ð¾Ð½Ð¸Ñ˜Ð°) [mk-mk]', CultureCode: 'mk-mk' }, { DisplayText: 'Ð¼Ð°ÐºÐµÐ´Ð¾Ð½ÑÐºÐ¸ Ñ˜Ð°Ð·Ð¸Ðº [mk]', CultureCode: 'mk' }, { DisplayText: 'ÐœÐ¾Ð½Ð³Ð¾Ð»Â Ñ…ÑÐ» (ÐœÐ¾Ð½Ð³Ð¾Ð»Â ÑƒÐ»Ñ) [mn-mn]', CultureCode: 'mn-mn' }, { DisplayText: 'ÐœÐ¾Ð½Ð³Ð¾Ð»Â Ñ…ÑÐ» [mn]', CultureCode: 'mn' }, { DisplayText: 'ÐœÐ¾Ð½Ð³Ð¾Ð»Â Ñ…ÑÐ» [mn-cyrl]', CultureCode: 'mn-cyrl' }, { DisplayText: 'Ñ€ÑƒÑÑÐºÐ¸Ð¹ (Ð Ð¾ÑÑÐ¸Ñ) [ru-ru]', CultureCode: 'ru-ru' }, { DisplayText: 'Ñ€ÑƒÑÑÐºÐ¸Ð¹ [ru]', CultureCode: 'ru' }, { DisplayText: 'ÑÐ°Ñ…Ð° (Ð Ð¾ÑÑÐ¸Ñ) [sah-ru]', CultureCode: 'sah-ru' }, { DisplayText: 'ÑÐ°Ñ…Ð° [sah]', CultureCode: 'sah' }, { DisplayText: 'ÑÑ€Ð¿ÑÐºÐ¸ (Ð‘Ð¾ÑÐ½Ð° Ð¸ Ð¥ÐµÑ€Ñ†ÐµÐ³Ð¾Ð²Ð¸Ð½Ð°) [sr-cyrl-ba]', CultureCode: 'sr-cyrl-ba' }, { DisplayText: 'ÑÑ€Ð¿ÑÐºÐ¸ (Ð¡Ñ€Ð±Ð¸Ñ˜Ð° Ð¸ Ð¦Ñ€Ð½Ð° Ð“Ð¾Ñ€Ð° (ÐŸÑ€ÐµÑ‚Ñ…Ð¾Ð´Ð½Ð¾)) [sr-cyrl-cs]', CultureCode: 'sr-cyrl-cs' }, { DisplayText: 'ÑÑ€Ð¿ÑÐºÐ¸ (Ð¡Ñ€Ð±Ð¸Ñ˜Ð°) [sr-cyrl-rs]', CultureCode: 'sr-cyrl-rs' }, { DisplayText: 'ÑÑ€Ð¿ÑÐºÐ¸ (Ð¦Ñ€Ð½Ð° Ð“Ð¾Ñ€Ð°) [sr-cyrl-me]', CultureCode: 'sr-cyrl-me' }, { DisplayText: 'ÑÑ€Ð¿ÑÐºÐ¸ [sr-cyrl]', CultureCode: 'sr-cyrl' }, { DisplayText: 'Ð¢Ð°Ñ‚Ð°Ñ€ (Ð Ð¾ÑÑÐ¸Ñ) [tt-ru]', CultureCode: 'tt-ru' },\n          { DisplayText: 'Ð¢Ð°Ñ‚Ð°Ñ€ [tt]', CultureCode: 'tt' }, { DisplayText: 'Ð¢Ð¾Ò·Ð¸ÐºÓ£ (Ð¢Ð¾Ò·Ð¸ÐºÐ¸ÑÑ‚Ð¾Ð½) [tg-cyrl-tj]', CultureCode: 'tg-cyrl-tj' }, { DisplayText: 'Ð¢Ð¾Ò·Ð¸ÐºÓ£ [tg]', CultureCode: 'tg' }, { DisplayText: 'Ð¢Ð¾Ò·Ð¸ÐºÓ£ [tg-cyrl]', CultureCode: 'tg-cyrl' }, { DisplayText: 'ÐŽÐ·Ð±ÐµÐº (ÐŽÐ·Ð±ÐµÐºÐ¸ÑÑ‚Ð¾Ð½) [uz-cyrl-uz]', CultureCode: 'uz-cyrl-uz' }, { DisplayText: 'ÐŽÐ·Ð±ÐµÐº [uz-cyrl]', CultureCode: 'uz-cyrl' }, { DisplayText: 'ÑƒÐºÑ€Ð°Ñ—Ð½ÑÑŒÐºÐ° (Ð£ÐºÑ€Ð°Ñ—Ð½Ð°) [uk-ua]', CultureCode: 'uk-ua' }, { DisplayText: 'ÑƒÐºÑ€Ð°Ñ—Ð½ÑÑŒÐºÐ° [uk]', CultureCode: 'uk' }, { DisplayText: 'Õ€Õ¡ÕµÕ¥Ö€Õ¥Õ¶ (Õ€Õ¡ÕµÕ¡Õ½Õ¿Õ¡Õ¶) [hy-am]', CultureCode: 'hy-am' }, { DisplayText: 'Õ€Õ¡ÕµÕ¥Ö€Õ¥Õ¶ [hy]', CultureCode: 'hy' }, { DisplayText: 'áƒ¥áƒáƒ áƒ—áƒ£áƒšáƒ˜ (áƒ¡áƒáƒ¥áƒáƒ áƒ—áƒ•áƒ”áƒšáƒ) [ka-ge]', CultureCode: 'ka-ge' }, { DisplayText: 'áƒ¥áƒáƒ áƒ—áƒ£áƒšáƒ˜ [ka]', CultureCode: 'ka' }, { DisplayText: '×¢×‘×¨×™×ª (×™×©×¨××œ) [he-il]', CultureCode: 'he-il' }, { DisplayText: '×¢×‘×¨×™×ª [he]', CultureCode: 'he' }, { DisplayText: 'Ø§ÙØ±Ø¯Ùˆ (Ù¾Ø§Ú©Ø³ØªØ§Ù†) [ur-pk]', CultureCode: 'ur-pk' }, { DisplayText: 'Ø§ÙØ±Ø¯Ùˆ [ur]', CultureCode: 'ur' }, { DisplayText: 'Ø§Ù„Ø¹Ø±Ø¨ÙŠØ© (Ø§Ù„Ø£Ø±Ø¯Ù†) [ar-jo]', CultureCode: 'ar-jo' }, { DisplayText: 'Ø§Ù„Ø¹Ø±Ø¨ÙŠØ© (Ø§Ù„Ø¥Ù…Ø§Ø±Ø§Øª Ø§Ù„Ø¹Ø±Ø¨ÙŠØ© Ø§Ù„Ù…ØªØ­Ø¯Ø©) [ar-ae]', CultureCode: 'ar-ae' }, { DisplayText: 'Ø§Ù„Ø¹Ø±Ø¨ÙŠØ© (Ø§Ù„Ø¨Ø­Ø±ÙŠÙ†) [ar-bh]', CultureCode: 'ar-bh' }, { DisplayText: 'Ø§Ù„Ø¹Ø±Ø¨ÙŠØ© (Ø§Ù„Ø¬Ø²Ø§Ø¦Ø±) [ar-dz]', CultureCode: 'ar-dz' }, { DisplayText: 'Ø§Ù„Ø¹Ø±Ø¨ÙŠØ© (Ø§Ù„Ø¹Ø±Ø§Ù‚) [ar-iq]', CultureCode: 'ar-iq' }, { DisplayText: 'Ø§Ù„Ø¹Ø±Ø¨ÙŠØ© (Ø§Ù„ÙƒÙˆÙŠØª) [ar-kw]', CultureCode: 'ar-kw' }, { DisplayText: 'Ø§Ù„Ø¹Ø±Ø¨ÙŠØ© (Ø§Ù„Ù…Ù…Ù„ÙƒØ© Ø§Ù„Ø¹Ø±Ø¨ÙŠØ© Ø§Ù„Ø³Ø¹ÙˆØ¯ÙŠØ©) [ar-sa]', CultureCode: 'ar-sa' }, { DisplayText: 'Ø§Ù„Ø¹Ø±Ø¨ÙŠØ© (Ø§Ù„Ù…Ù…Ù„ÙƒØ© Ø§Ù„Ù…ØºØ±Ø¨ÙŠØ©) [ar-ma]', CultureCode: 'ar-ma' }, { DisplayText: 'Ø§Ù„Ø¹Ø±Ø¨ÙŠØ© (Ø§Ù„ÙŠÙ…Ù†) [ar-ye]', CultureCode: 'ar-ye' }, { DisplayText: 'Ø§Ù„Ø¹Ø±Ø¨ÙŠØ© (ØªÙˆÙ†Ø³) [ar-tn]', CultureCode: 'ar-tn' }, { DisplayText: 'Ø§Ù„Ø¹Ø±Ø¨ÙŠØ© (Ø³ÙˆØ±ÙŠØ§) [ar-sy]', CultureCode: 'ar-sy' }, { DisplayText: 'Ø§Ù„Ø¹Ø±Ø¨ÙŠØ© (Ø¹Ù…Ø§Ù†) [ar-om]', CultureCode: 'ar-om' }, { DisplayText: 'Ø§Ù„Ø¹Ø±Ø¨ÙŠØ© (Ù‚Ø·Ø±) [ar-qa]', CultureCode: 'ar-qa' }, { DisplayText: 'Ø§Ù„Ø¹Ø±Ø¨ÙŠØ© (Ù„Ø¨Ù†Ø§Ù†) [ar-lb]', CultureCode: 'ar-lb' },\n          { DisplayText: 'Ø§Ù„Ø¹Ø±Ø¨ÙŠØ© (Ù„ÙŠØ¨ÙŠØ§) [ar-ly]', CultureCode: 'ar-ly' }, { DisplayText: 'Ø§Ù„Ø¹Ø±Ø¨ÙŠØ© (Ù…ØµØ±) [ar-eg]', CultureCode: 'ar-eg' }, { DisplayText: 'Ø§Ù„Ø¹Ø±Ø¨ÙŠØ© [ar]', CultureCode: 'ar' }, { DisplayText: 'Ù¾ÚšØªÙˆ (Ø§ÙØºØ§Ù†Ø³ØªØ§Ù†) [ps-af]', CultureCode: 'ps-af' }, { DisplayText: 'Ù¾ÚšØªÙˆ [ps]', CultureCode: 'ps' }, { DisplayText: 'Ø¯Ø±Ù‰ (Ø§ÙØºØ§Ù†Ø³ØªØ§Ù†) [prs-af]', CultureCode: 'prs-af' }, { DisplayText: 'Ø¯Ø±Ù‰ [prs]', CultureCode: 'prs' }, { DisplayText: 'ÙØ§Ø±Ø³Ù‰ (Ø§ÛŒØ±Ø§Ù†) [fa-ir]', CultureCode: 'fa-ir' }, { DisplayText: 'ÙØ§Ø±Ø³Ù‰ [fa]', CultureCode: 'fa' }, { DisplayText: 'Ø¦Û‡ÙŠØºÛ‡Ø±Ú†Û• (Ø¬Û‡Ú­Ø®Û‡Ø§ Ø®Û•Ù„Ù‚ Ø¬Û‡Ù…Ú¾Û‡Ø±Ù‰ÙŠÙ‰ØªÙ‰) [ug-cn]', CultureCode: 'ug-cn' }, { DisplayText: 'Ø¦Û‡ÙŠØºÛ‡Ø±Ú†Û• [ug]', CultureCode: 'ug' }, { DisplayText: 'Ü£Ü˜ÜªÜÜÜ (Ø³ÙˆØ±ÙŠØ§) [syr-sy]', CultureCode: 'syr-sy' }, { DisplayText: 'Ü£Ü˜ÜªÜÜÜ [syr]', CultureCode: 'syr' }, { DisplayText: 'Þ‹Þ¨ÞˆÞ¬Þ€Þ¨Þ„Þ¦ÞÞ° (Þ‹Þ¨ÞˆÞ¬Þ€Þ¨ ÞƒÞ§Þ‡Þ°Þ–Þ¬) [dv-mv]', CultureCode: 'dv-mv' }, { DisplayText: 'Þ‹Þ¨ÞˆÞ¬Þ€Þ¨Þ„Þ¦ÞÞ° [dv]', CultureCode: 'dv' }, { DisplayText: 'à¤•à¥‹à¤‚à¤•à¤£à¥€ (à¤­à¤¾à¤°à¤¤) [kok-in]', CultureCode: 'kok-in' }, { DisplayText: 'à¤•à¥‹à¤‚à¤•à¤£à¥€ [kok]', CultureCode: 'kok' }, { DisplayText: 'à¤¨à¥‡à¤ªà¤¾à¤²à¥€ (à¤¨à¥‡à¤ªà¤¾à¤²) [ne-np]', CultureCode: 'ne-np' }, { DisplayText: 'à¤¨à¥‡à¤ªà¤¾à¤²à¥€ [ne]', CultureCode: 'ne' }, { DisplayText: 'à¤®à¤°à¤¾à¤ à¥€ (à¤­à¤¾à¤°à¤¤) [mr-in]', CultureCode: 'mr-in' }, { DisplayText: 'à¤®à¤°à¤¾à¤ à¥€ [mr]', CultureCode: 'mr' }, { DisplayText: 'à¤¸à¤‚à¤¸à¥à¤•à¥ƒà¤¤ (à¤­à¤¾à¤°à¤¤à¤®à¥) [sa-in]', CultureCode: 'sa-in' }, { DisplayText: 'à¤¸à¤‚à¤¸à¥à¤•à¥ƒà¤¤ [sa]', CultureCode: 'sa' }, { DisplayText: 'à¤¹à¤¿à¤‚à¤¦à¥€ (à¤­à¤¾à¤°à¤¤) [hi-in]', CultureCode: 'hi-in' }, { DisplayText: 'à¤¹à¤¿à¤‚à¤¦à¥€ [hi]', CultureCode: 'hi' }, { DisplayText: 'à¦…à¦¸à¦®à§€à§Ÿà¦¾ (à¦­à¦¾à§°à¦¤) [as-in]', CultureCode: 'as-in' }, { DisplayText: 'à¦…à¦¸à¦®à§€à§Ÿà¦¾ [as]', CultureCode: 'as' }, { DisplayText: 'à¦¬à¦¾à¦‚à¦²à¦¾ (à¦¬à¦¾à¦‚à¦²à¦¾à¦¦à§‡à¦¶) [bn-bd]', CultureCode: 'bn-bd' }, { DisplayText: 'à¦¬à¦¾à¦‚à¦²à¦¾ (à¦­à¦¾à¦°à¦¤) [bn-in]', CultureCode: 'bn-in' }, { DisplayText: 'à¦¬à¦¾à¦‚à¦²à¦¾ [bn]', CultureCode: 'bn' }, { DisplayText: 'à¨ªà©°à¨œà¨¾à¨¬à©€ (à¨­à¨¾à¨°à¨¤) [pa-in]', CultureCode: 'pa-in' }, { DisplayText: 'à¨ªà©°à¨œà¨¾à¨¬à©€ [pa]', CultureCode: 'pa' },\n          { DisplayText: 'àª—à«àªœàª°àª¾àª¤à«€ (àª­àª¾àª°àª¤) [gu-in]', CultureCode: 'gu-in' }, { DisplayText: 'àª—à«àªœàª°àª¾àª¤à«€ [gu]', CultureCode: 'gu' }, { DisplayText: 'à¬“à­œà¬¿à¬† (à¬­à¬¾à¬°à¬¤) [or-in]', CultureCode: 'or-in' }, { DisplayText: 'à¬“à­œà¬¿à¬† [or]', CultureCode: 'or' }, { DisplayText: 'à®¤à®®à®¿à®´à¯ (à®‡à®¨à¯à®¤à®¿à®¯à®¾) [ta-in]', CultureCode: 'ta-in' }, { DisplayText: 'à®¤à®®à®¿à®´à¯ [ta]', CultureCode: 'ta' }, { DisplayText: 'à°¤à±†à°²à±à°—à± (à°­à°¾à°°à°¤Â à°¦à±‡à°¶à°‚) [te-in]', CultureCode: 'te-in' }, { DisplayText: 'à°¤à±†à°²à±à°—à± [te]', CultureCode: 'te' }, { DisplayText: 'à²•à²¨à³à²¨à²¡ (à²­à²¾à²°à²¤) [kn-in]', CultureCode: 'kn-in' }, { DisplayText: 'à²•à²¨à³à²¨à²¡ [kn]', CultureCode: 'kn' }, { DisplayText: 'à´®à´²à´¯à´¾à´³à´‚ (à´­à´¾à´°à´¤à´‚) [ml-in]', CultureCode: 'ml-in' }, { DisplayText: 'à´®à´²à´¯à´¾à´³à´‚ [ml]', CultureCode: 'ml' }, { DisplayText: 'à·ƒà·’à¶‚à·„à¶½ (à·à·Šâ€à¶»à·“ à¶½à¶‚à¶šà·) [si-lk]', CultureCode: 'si-lk' }, { DisplayText: 'à·ƒà·’à¶‚à·„à¶½ [si]', CultureCode: 'si' }, { DisplayText: 'à¹„à¸—à¸¢ (à¹„à¸—à¸¢) [th-th]', CultureCode: 'th-th' }, { DisplayText: 'à¹„à¸—à¸¢ [th]', CultureCode: 'th' }, { DisplayText: 'á ®á ¤á ¨á ­á ­á ¤á ¯ á ¬á ¡á ¯á ¡ (á ªá ¦á ­á ¦á ³á ¡ á ¨á  á ¢á ·á  á ®á ³á  á ¬á ¤ á ³á ¤á ®á ³á  á ³á ¤ á  á ·á  á ³ á £á ¯á £á °) [mn-mong-cn]', CultureCode: 'mn-mong-cn' }, { DisplayText: 'á ®á ¤á ¨á ­á ­á ¤á ¯ á ¬á ¡á ¯á ¡ [mn-mong]', CultureCode: 'mn-mong' }, { DisplayText: 'à½–à½¼à½‘à¼‹à½¡à½²à½‚ (à½€à¾²à½´à½„à¼‹à½§à¾­à¼‹à½˜à½²à¼‹à½‘à½˜à½„à½¦à¼‹à½¦à¾¤à¾±à½²à¼‹à½˜à½à½´à½“à¼‹à½¢à¾’à¾±à½£à¼‹à½à½–à¼) [bo-cn]', CultureCode: 'bo-cn' }, { DisplayText: 'à½–à½¼à½‘à¼‹à½¡à½²à½‚ [bo]', CultureCode: 'bo' }, { DisplayText: 'àº¥àº²àº§ (àºª.àº›.àº›. àº¥àº²àº§) [lo-la]', CultureCode: 'lo-la' }, { DisplayText: 'àº¥àº²àº§ [lo]', CultureCode: 'lo' }, { DisplayText: 'ážáŸ’áž˜áŸ‚ážš (áž€áž˜áŸ’áž–áž»áž‡áž¶) [km-kh]', CultureCode: 'km-kh' }, { DisplayText: 'ážáŸ’áž˜áŸ‚ážš [km]', CultureCode: 'km' }, { DisplayText: 'áƒá“„á’ƒá‘Žá‘á‘¦ (á‘²á“‡á‘•á’¥) [iu-cans-ca]', CultureCode: 'iu-cans-ca' }, { DisplayText: 'áƒá“„á’ƒá‘Žá‘á‘¦ [iu-cans]', CultureCode: 'iu-cans' }, { DisplayText: 'áŠ áˆ›áˆ­áŠ› (áŠ¢á‰µá‹®áŒµá‹«) [am-et]', CultureCode: 'am-et' }, { DisplayText: 'áŠ áˆ›áˆ­áŠ› [am]', CultureCode: 'am' }, { DisplayText: 'ê†ˆêŒ ê±ê‚· (êê‰¸ê“ê‚±ê‡­ê‰¼ê‡©) [ii-cn]', CultureCode: 'ii-cn' },\n          { DisplayText: 'ê†ˆêŒ ê±ê‚· [ii]', CultureCode: 'ii' }, { DisplayText: 'í•œêµ­ì–´ (ëŒ€í•œë¯¼êµ­) [ko-kr]', CultureCode: 'ko-kr' }, { DisplayText: 'í•œêµ­ì–´ [ko]', CultureCode: 'ko' }, { DisplayText: 'ä¸­æ–‡ [zh]', CultureCode: 'zh' }, { DisplayText: 'ä¸­æ–‡(ä¸­åŽäººæ°‘å…±å’Œå›½) [zh-cn]', CultureCode: 'zh-cn' }, { DisplayText: 'ä¸­æ–‡(å°ç£) [zh-tw]', CultureCode: 'zh-tw' }, { DisplayText: 'ä¸­æ–‡(æ–°åŠ å¡) [zh-sg]', CultureCode: 'zh-sg' }, { DisplayText: 'ä¸­æ–‡(æ¾³é–€ç‰¹åˆ¥è¡Œæ”¿å€) [zh-mo]', CultureCode: 'zh-mo' }, { DisplayText: 'ä¸­æ–‡(ç®€ä½“) [zh-hans]', CultureCode: 'zh-hans' }, { DisplayText: 'ä¸­æ–‡(ç®€ä½“) æ—§ç‰ˆ [zh-chs]', CultureCode: 'zh-chs' }, { DisplayText: 'ä¸­æ–‡(ç¹é«”) [zh-hant]', CultureCode: 'zh-hant' }, { DisplayText: 'ä¸­æ–‡(ç¹é«”) èˆŠç‰ˆ [zh-cht]', CultureCode: 'zh-cht' }, { DisplayText: 'ä¸­æ–‡(é¦™æ¸¯ç‰¹åˆ¥è¡Œæ”¿å€) [zh-hk]', CultureCode: 'zh-hk' }, { DisplayText: 'æ—¥æœ¬èªž (æ—¥æœ¬) [ja-jp]', CultureCode: 'ja-jp' }, { DisplayText: 'æ—¥æœ¬èªž [ja]', CultureCode: 'ja' },\n        ],\n        regionLanguage: [\n          { DisplayText: 'Ã¥arjelsaemiengiele (NÃ¶Ã¶rje) [sma-no]', CultureCode: 'sma-no' }, { DisplayText: 'Ã¥arjelsaemiengiele (Sveerje) [sma-se]', CultureCode: 'sma-se' }, { DisplayText: 'Ã¥arjelsaemiengiele [sma]', CultureCode: 'sma' }, { DisplayText: 'Afrikaans (Suid Afrika) [af-za]', CultureCode: 'af-za' }, { DisplayText: 'Afrikaans [af]', CultureCode: 'af' }, { DisplayText: 'AzÉ™rbaycanÂ­Ä±lÄ± [az]', CultureCode: 'az' }, { DisplayText: 'AzÉ™rbaycanÂ­Ä±lÄ± [az-latn]', CultureCode: 'az-latn' }, { DisplayText: 'Bahasa Indonesia (Indonesia) [id-id]', CultureCode: 'id-id' }, { DisplayText: 'Bahasa Indonesia [id]', CultureCode: 'id' }, { DisplayText: 'Bahasa Melayu (Brunei Darussalam) [ms-bn]', CultureCode: 'ms-bn' }, { DisplayText: 'Bahasa Melayu (Malaysia) [ms-my]', CultureCode: 'ms-my' }, { DisplayText: 'Bahasa Melayu [ms]', CultureCode: 'ms' }, { DisplayText: 'bosanski (Bosna i Hercegovina) [bs-latn-ba]', CultureCode: 'bs-latn-ba' }, { DisplayText: 'bosanski [bs]', CultureCode: 'bs' }, { DisplayText: 'bosanski [bs-latn]', CultureCode: 'bs-latn' }, { DisplayText: 'brezhoneg (FraÃ±s) [br-fr]', CultureCode: 'br-fr' }, { DisplayText: 'brezhoneg [br]', CultureCode: 'br' }, { DisplayText: 'catalÃ  (catalÃ ) [ca-es]', CultureCode: 'ca-es' }, { DisplayText: 'catalÃ  [ca]', CultureCode: 'ca' }, { DisplayText: 'ÄeÅ¡tina (ÄŒeskÃ¡Â republika) [cs-cz]', CultureCode: 'cs-cz' },\n          { DisplayText: 'ÄeÅ¡tina [cs]', CultureCode: 'cs' }, { DisplayText: 'Corsu (France) [co-fr]', CultureCode: 'co-fr' }, { DisplayText: 'Corsu [co]', CultureCode: 'co' }, { DisplayText: 'Cymraeg (y Deyrnas Unedig) [cy-gb]', CultureCode: 'cy-gb' }, { DisplayText: 'Cymraeg [cy]', CultureCode: 'cy' }, { DisplayText: 'dansk (Danmark) [da-dk]', CultureCode: 'da-dk' }, { DisplayText: 'dansk [da]', CultureCode: 'da' }, { DisplayText: 'davvisÃ¡megiella (Norga) [se-no]', CultureCode: 'se-no' }, { DisplayText: 'davvisÃ¡megiella (RuoÅ§Å§a) [se-se]', CultureCode: 'se-se' }, { DisplayText: 'davvisÃ¡megiella (Suopma) [se-fi]', CultureCode: 'se-fi' }, { DisplayText: 'davvisÃ¡megiella [se]', CultureCode: 'se' }, { DisplayText: 'Deutsch (Deutschland) [de-de]', CultureCode: 'de-de' }, { DisplayText: 'Deutsch (Liechtenstein) [de-li]', CultureCode: 'de-li' }, { DisplayText: 'Deutsch (Luxemburg) [de-lu]', CultureCode: 'de-lu' }, { DisplayText: 'Deutsch (Ã–sterreich) [de-at]', CultureCode: 'de-at' }, { DisplayText: 'Deutsch (Schweiz) [de-ch]', CultureCode: 'de-ch' }, { DisplayText: 'Deutsch [de]', CultureCode: 'de' }, { DisplayText: 'dolnoserbÅ¡Ä‡ina (Nimska) [dsb-de]', CultureCode: 'dsb-de' }, { DisplayText: 'dolnoserbÅ¡Ä‡ina [dsb]', CultureCode: 'dsb' }, { DisplayText: 'eesti (Eesti) [et-ee]', CultureCode: 'et-ee' }, { DisplayText: 'eesti [et]', CultureCode: 'et' }, { DisplayText: 'ElsÃ¤ssisch (FrÃ nkrisch) [gsw-fr]', CultureCode: 'gsw-fr' }, { DisplayText: 'ElsÃ¤ssisch [gsw]', CultureCode: 'gsw' }, { DisplayText: 'English (Australia) [en-au]', CultureCode: 'en-au' }, { DisplayText: 'English (Belize) [en-bz]', CultureCode: 'en-bz' }, { DisplayText: 'English (Canada) [en-ca]', CultureCode: 'en-ca' }, { DisplayText: 'English (Caribbean) [en-029]', CultureCode: 'en-029' }, { DisplayText: 'English (India) [en-in]', CultureCode: 'en-in' }, { DisplayText: 'English (Ireland) [en-ie]', CultureCode: 'en-ie' }, { DisplayText: 'English (Jamaica) [en-jm]', CultureCode: 'en-jm' }, { DisplayText: 'English (Malaysia) [en-my]', CultureCode: 'en-my' }, { DisplayText: 'English (New Zealand) [en-nz]', CultureCode: 'en-nz' }, { DisplayText: 'English (Philippines) [en-ph]', CultureCode: 'en-ph' }, { DisplayText: 'English (Singapore) [en-sg]', CultureCode: 'en-sg' }, { DisplayText: 'English (South Africa) [en-za]', CultureCode: 'en-za' },\n          { DisplayText: 'English (Trinidad y Tobago) [en-tt]', CultureCode: 'en-tt' }, { DisplayText: 'English (United Kingdom) [en-gb]', CultureCode: 'en-gb' }, { DisplayText: 'English (United States) [en-us]', CultureCode: 'en-us' }, { DisplayText: 'English (Zimbabwe) [en-zw]', CultureCode: 'en-zw' }, { DisplayText: 'English [en]', CultureCode: 'en' }, { DisplayText: 'EspaÃ±ol (Argentina) [es-ar]', CultureCode: 'es-ar' }, { DisplayText: 'EspaÃ±ol (Bolivia) [es-bo]', CultureCode: 'es-bo' }, { DisplayText: 'EspaÃ±ol (Chile) [es-cl]', CultureCode: 'es-cl' }, { DisplayText: 'EspaÃ±ol (Colombia) [es-co]', CultureCode: 'es-co' }, { DisplayText: 'EspaÃ±ol (Costa Rica) [es-cr]', CultureCode: 'es-cr' }, { DisplayText: 'EspaÃ±ol (Ecuador) [es-ec]', CultureCode: 'es-ec' }, { DisplayText: 'EspaÃ±ol (El Salvador) [es-sv]', CultureCode: 'es-sv' }, { DisplayText: 'EspaÃ±ol (EspaÃ±a, alfabetizaciÃ³n internacional) [es-es]', CultureCode: 'es-es' }, { DisplayText: 'EspaÃ±ol (Estados Unidos) [es-us]', CultureCode: 'es-us' }, { DisplayText: 'EspaÃ±ol (Guatemala) [es-gt]', CultureCode: 'es-gt' }, { DisplayText: 'EspaÃ±ol (Honduras) [es-hn]', CultureCode: 'es-hn' }, { DisplayText: 'EspaÃ±ol (MÃ©xico) [es-mx]', CultureCode: 'es-mx' }, { DisplayText: 'EspaÃ±ol (Nicaragua) [es-ni]', CultureCode: 'es-ni' }, { DisplayText: 'EspaÃ±ol (PanamÃ¡) [es-pa]', CultureCode: 'es-pa' }, { DisplayText: 'EspaÃ±ol (Paraguay) [es-py]', CultureCode: 'es-py' }, { DisplayText: 'EspaÃ±ol (PerÃº) [es-pe]', CultureCode: 'es-pe' }, { DisplayText: 'EspaÃ±ol (Puerto Rico) [es-pr]', CultureCode: 'es-pr' }, { DisplayText: 'EspaÃ±ol (Republica Bolivariana de Venezuela) [es-ve]', CultureCode: 'es-ve' }, { DisplayText: 'EspaÃ±ol (RepÃºblica Dominicana) [es-do]', CultureCode: 'es-do' }, { DisplayText: 'EspaÃ±ol (Uruguay) [es-uy]', CultureCode: 'es-uy' }, { DisplayText: 'espaÃ±ol [es]', CultureCode: 'es' }, { DisplayText: 'euskara (euskara) [eu-es]', CultureCode: 'eu-es' }, { DisplayText: 'euskara [eu]', CultureCode: 'eu' }, { DisplayText: 'Filipino (Pilipinas) [fil-ph]', CultureCode: 'fil-ph' }, { DisplayText: 'Filipino [fil]', CultureCode: 'fil' }, { DisplayText: 'fÃ¸royskt (FÃ¸royar) [fo-fo]', CultureCode: 'fo-fo' }, { DisplayText: 'fÃ¸royskt [fo]', CultureCode: 'fo' }, { DisplayText: 'franÃ§ais (Belgique) [fr-be]', CultureCode: 'fr-be' }, { DisplayText: 'franÃ§ais (Canada) [fr-ca]', CultureCode: 'fr-ca' },\n          { DisplayText: 'franÃ§ais (France) [fr-fr]', CultureCode: 'fr-fr' }, { DisplayText: 'franÃ§ais (Luxembourg) [fr-lu]', CultureCode: 'fr-lu' }, { DisplayText: 'franÃ§ais (PrincipautÃ© de Monaco) [fr-mc]', CultureCode: 'fr-mc' }, { DisplayText: 'franÃ§ais (Suisse) [fr-ch]', CultureCode: 'fr-ch' }, { DisplayText: 'franÃ§ais [fr]', CultureCode: 'fr' }, { DisplayText: 'Frysk (NederlÃ¢n) [fy-nl]', CultureCode: 'fy-nl' }, { DisplayText: 'Frysk [fy]', CultureCode: 'fy' }, { DisplayText: 'Gaeilge (Ã‰ire) [ga-ie]', CultureCode: 'ga-ie' }, { DisplayText: 'Gaeilge [ga]', CultureCode: 'ga' }, { DisplayText: 'GÃ idhlig (An RÃ¬oghachd Aonaichte) [gd-gb]', CultureCode: 'gd-gb' }, { DisplayText: 'GÃ idhlig [gd]', CultureCode: 'gd' }, { DisplayText: 'galego (galego) [gl-es]', CultureCode: 'gl-es' }, { DisplayText: 'galego [gl]', CultureCode: 'gl' }, { DisplayText: 'Hausa (Nigeria) [ha-latn-ng]', CultureCode: 'ha-latn-ng' }, { DisplayText: 'Hausa [ha]', CultureCode: 'ha' }, { DisplayText: 'Hausa [ha-latn]', CultureCode: 'ha-latn' }, { DisplayText: 'hornjoserbÅ¡Ä‡ina (NÄ›mska) [hsb-de]', CultureCode: 'hsb-de' }, { DisplayText: 'hornjoserbÅ¡Ä‡ina [hsb]', CultureCode: 'hsb' }, { DisplayText: 'hrvatski (Bosna i Hercegovina) [hr-ba]', CultureCode: 'hr-ba' }, { DisplayText: 'hrvatski (Hrvatska) [hr-hr]', CultureCode: 'hr-hr' }, { DisplayText: 'hrvatski [hr]', CultureCode: 'hr' }, { DisplayText: 'Igbo (Nigeria) [ig-ng]', CultureCode: 'ig-ng' }, { DisplayText: 'Igbo [ig]', CultureCode: 'ig' }, { DisplayText: 'Inuktitut (Kanatami) [iu-latn-ca]', CultureCode: 'iu-latn-ca' }, { DisplayText: 'Inuktitut [iu]', CultureCode: 'iu' }, { DisplayText: 'Inuktitut [iu-latn]', CultureCode: 'iu-latn' }, { DisplayText: 'Invariant Language (Invariant Country) []', CultureCode: '' }, { DisplayText: 'isiXhosa (uMzantsi Afrika) [xh-za]', CultureCode: 'xh-za' }, { DisplayText: 'isiXhosa [xh]', CultureCode: 'xh' }, { DisplayText: 'isiZulu (iNingizimu Afrika) [zu-za]', CultureCode: 'zu-za' }, { DisplayText: 'isiZulu [zu]', CultureCode: 'zu' }, { DisplayText: 'Ã­slenska (Ãsland) [is-is]', CultureCode: 'is-is' }, { DisplayText: 'Ã­slenska [is]', CultureCode: 'is' }, { DisplayText: 'italiano (Italia) [it-it]', CultureCode: 'it-it' }, { DisplayText: 'italiano (Svizzera) [it-ch]', CultureCode: 'it-ch' }, { DisplayText: 'italiano [it]', CultureCode: 'it' },\n          { DisplayText: 'julevusÃ¡megiella (Svierik) [smj-se]', CultureCode: 'smj-se' }, { DisplayText: 'julevusÃ¡megiella (Vuodna) [smj-no]', CultureCode: 'smj-no' }, { DisplayText: 'julevusÃ¡megiella [smj]', CultureCode: 'smj' }, { DisplayText: 'kalaallisut (Kalaallit Nunaat) [kl-gl]', CultureCode: 'kl-gl' }, { DisplayText: 'kalaallisut [kl]', CultureCode: 'kl' }, { DisplayText: 'Kanien\\'kÃ©ha [moh]', CultureCode: 'moh' }, { DisplayText: 'Kanien\\'kÃ©ha [moh-ca]', CultureCode: 'moh-ca' }, { DisplayText: 'K\\'iche (Guatemala) [qut-gt]', CultureCode: 'qut-gt' }, { DisplayText: 'K\\'iche [qut]', CultureCode: 'qut' }, { DisplayText: 'Kinyarwanda (Rwanda) [rw-rw]', CultureCode: 'rw-rw' }, { DisplayText: 'Kinyarwanda [rw]', CultureCode: 'rw' }, { DisplayText: 'Kiswahili (Kenya) [sw-ke]', CultureCode: 'sw-ke' }, { DisplayText: 'Kiswahili [sw]', CultureCode: 'sw' }, { DisplayText: 'latvieÅ¡u (Latvija) [lv-lv]', CultureCode: 'lv-lv' }, { DisplayText: 'latvieÅ¡u [lv]', CultureCode: 'lv' }, { DisplayText: 'LÃ«tzebuergesch (Luxembourg) [lb-lu]', CultureCode: 'lb-lu' }, { DisplayText: 'LÃ«tzebuergesch [lb]', CultureCode: 'lb' }, { DisplayText: 'lietuviÅ³ (Lietuva) [lt-lt]', CultureCode: 'lt-lt' }, { DisplayText: 'lietuviÅ³ [lt]', CultureCode: 'lt' }, { DisplayText: 'magyar (MagyarorszÃ¡g) [hu-hu]', CultureCode: 'hu-hu' }, { DisplayText: 'magyar [hu]', CultureCode: 'hu' }, { DisplayText: 'Malti (Malta) [mt-mt]', CultureCode: 'mt-mt' }, { DisplayText: 'Malti [mt]', CultureCode: 'mt' }, { DisplayText: 'Mapudungun (Chile) [arn-cl]', CultureCode: 'arn-cl' }, { DisplayText: 'Mapudungun [arn]', CultureCode: 'arn' }, { DisplayText: 'Nederlands (BelgiÃ«) [nl-be]', CultureCode: 'nl-be' }, { DisplayText: 'Nederlands (Nederland) [nl-nl]', CultureCode: 'nl-nl' }, { DisplayText: 'Nederlands [nl]', CultureCode: 'nl' }, { DisplayText: 'norsk (bokmÃ¥l) [nb]', CultureCode: 'nb' }, { DisplayText: 'norsk (nynorsk) [nn]', CultureCode: 'nn' }, { DisplayText: 'norsk [no]', CultureCode: 'no' }, { DisplayText: 'norsk, bokmÃ¥l (Norge) [nb-no]', CultureCode: 'nb-no' }, { DisplayText: 'norsk, nynorsk (Noreg) [nn-no]', CultureCode: 'nn-no' }, { DisplayText: 'Occitan (FranÃ§a) [oc-fr]', CultureCode: 'oc-fr' }, { DisplayText: 'Occitan [oc]', CultureCode: 'oc' }, { DisplayText: 'polski (Polska) [pl-pl]', CultureCode: 'pl-pl' }, { DisplayText: 'polski [pl]', CultureCode: 'pl' },\n          { DisplayText: 'PortuguÃªs (Brasil) [pt-br]', CultureCode: 'pt-br' }, { DisplayText: 'portuguÃªs (Portugal) [pt-pt]', CultureCode: 'pt-pt' }, { DisplayText: 'PortuguÃªs [pt]', CultureCode: 'pt' }, { DisplayText: 'Reo MÄori (Aotearoa) [mi-nz]', CultureCode: 'mi-nz' }, { DisplayText: 'Reo MÄori [mi]', CultureCode: 'mi' }, { DisplayText: 'romÃ¢nÄƒ (RomÃ¢nia) [ro-ro]', CultureCode: 'ro-ro' }, { DisplayText: 'romÃ¢nÄƒ [ro]', CultureCode: 'ro' }, { DisplayText: 'Rumantsch (Svizra) [rm-ch]', CultureCode: 'rm-ch' }, { DisplayText: 'Rumantsch [rm]', CultureCode: 'rm' }, { DisplayText: 'runasimi (Ecuador) [quz-ec]', CultureCode: 'quz-ec' }, { DisplayText: 'runasimi (Piruw) [quz-pe]', CultureCode: 'quz-pe' }, { DisplayText: 'runasimi (Qullasuyu) [quz-bo]', CultureCode: 'quz-bo' }, { DisplayText: 'runasimi [quz]', CultureCode: 'quz' }, { DisplayText: 'sÃ¤Ã¤mÂ´Ç©iÃµll (LÃ¤Ã¤Â´ddjÃ¢nnam) [sms-fi]', CultureCode: 'sms-fi' }, { DisplayText: 'sÃ¤Ã¤mÂ´Ç©iÃµll [sms]', CultureCode: 'sms' }, { DisplayText: 'sÃ¤mikielÃ¢ (SuomÃ¢) [smn-fi]', CultureCode: 'smn-fi' }, { DisplayText: 'sÃ¤mikielÃ¢ [smn]', CultureCode: 'smn' }, { DisplayText: 'Sesotho sa Leboa (Afrika Borwa) [nso-za]', CultureCode: 'nso-za' }, { DisplayText: 'Sesotho sa Leboa [nso]', CultureCode: 'nso' }, { DisplayText: 'Setswana (Aforika Borwa) [tn-za]', CultureCode: 'tn-za' }, { DisplayText: 'Setswana [tn]', CultureCode: 'tn' }, { DisplayText: 'shqipe (ShqipÃ«ria) [sq-al]', CultureCode: 'sq-al' }, { DisplayText: 'shqipe [sq]', CultureCode: 'sq' }, { DisplayText: 'slovenÄina (SlovenskÃ¡ republika) [sk-sk]', CultureCode: 'sk-sk' }, { DisplayText: 'slovenÄina [sk]', CultureCode: 'sk' }, { DisplayText: 'slovenski (Slovenija) [sl-si]', CultureCode: 'sl-si' }, { DisplayText: 'slovenski [sl]', CultureCode: 'sl' }, { DisplayText: 'srpski (Bosna i Hercegovina) [sr-latn-ba]', CultureCode: 'sr-latn-ba' }, { DisplayText: 'srpski (Crna Gora) [sr-latn-me]', CultureCode: 'sr-latn-me' }, { DisplayText: 'srpski (Srbija i Crna Gora (Prethodno)) [sr-latn-cs]', CultureCode: 'sr-latn-cs' }, { DisplayText: 'srpski (Srbija) [sr-latn-rs]', CultureCode: 'sr-latn-rs' }, { DisplayText: 'srpski [sr]', CultureCode: 'sr' }, { DisplayText: 'srpski [sr-latn]', CultureCode: 'sr-latn' }, { DisplayText: 'suomi (Suomi) [fi-fi]', CultureCode: 'fi-fi' }, { DisplayText: 'suomi [fi]', CultureCode: 'fi' },\n          { DisplayText: 'svenska (Finland) [sv-fi]', CultureCode: 'sv-fi' }, { DisplayText: 'svenska (Sverige) [sv-se]', CultureCode: 'sv-se' }, { DisplayText: 'svenska [sv]', CultureCode: 'sv' }, { DisplayText: 'Tamazight (DjazaÃ¯r) [tzm-latn-dz]', CultureCode: 'tzm-latn-dz' }, { DisplayText: 'Tamazight [tzm]', CultureCode: 'tzm' }, { DisplayText: 'Tamazight [tzm-latn]', CultureCode: 'tzm-latn' }, { DisplayText: 'TiÃªÌng Viá»‡t (Viá»‡t Nam) [vi-vn]', CultureCode: 'vi-vn' }, { DisplayText: 'TiÃªÌng Viá»‡t [vi]', CultureCode: 'vi' }, { DisplayText: 'TÃ¼rkÃ§e [tr]', CultureCode: 'tr' }, { DisplayText: 'tÃ¼rkmenÃ§e (TÃ¼rkmenistan) [tk-tm]', CultureCode: 'tk-tm' }, { DisplayText: 'tÃ¼rkmenÃ§e [tk]', CultureCode: 'tk' }, { DisplayText: 'U\\'zbek (U\\'zbekiston Respublikasi) [uz-latn-uz]', CultureCode: 'uz-latn-uz' }, { DisplayText: 'U\\'zbek [uz]', CultureCode: 'uz' }, { DisplayText: 'U\\'zbek [uz-latn]', CultureCode: 'uz-latn' }, { DisplayText: 'Wolof (SÃ©nÃ©gal) [wo-sn]', CultureCode: 'wo-sn' }, { DisplayText: 'Wolof [wo]', CultureCode: 'wo' }, { DisplayText: 'Yoruba (Nigeria) [yo-ng]', CultureCode: 'yo-ng' }, { DisplayText: 'Yoruba [yo]', CultureCode: 'yo' }, { DisplayText: 'Î•Î»Î»Î·Î½Î¹ÎºÎ¬ (Î•Î»Î»Î¬Î´Î±) [el-gr]', CultureCode: 'el-gr' }, { DisplayText: 'Î•Î»Î»Î·Î½Î¹ÎºÎ¬ [el]', CultureCode: 'el' }, { DisplayText: 'ÐÐ·Ó™Ñ€Ð±Ð°Ñ˜Ò¹Ð°Ð½Â Ð´Ð¸Ð»Ð¸ [az-cyrl]', CultureCode: 'az-cyrl' }, { DisplayText: 'Ð‘Ð°ÑˆÒ¡Ð¾Ñ€Ñ‚ (Ð Ð¾ÑÑÐ¸Ñ) [ba-ru]', CultureCode: 'ba-ru' }, { DisplayText: 'Ð‘Ð°ÑˆÒ¡Ð¾Ñ€Ñ‚ [ba]', CultureCode: 'ba' }, { DisplayText: 'Ð‘ÐµÐ»Ð°Ñ€ÑƒÑÐºÑ– (Ð‘ÐµÐ»Ð°Ñ€ÑƒÑÑŒ) [be-by]', CultureCode: 'be-by' }, { DisplayText: 'Ð‘ÐµÐ»Ð°Ñ€ÑƒÑÐºÑ– [be]', CultureCode: 'be' }, { DisplayText: 'Ð±Ð¾ÑÐ°Ð½ÑÐºÐ¸ (Ð‘Ð¾ÑÐ½Ð° Ð¸ Ð¥ÐµÑ€Ñ†ÐµÐ³Ð¾Ð²Ð¸Ð½Ð°) [bs-cyrl-ba]', CultureCode: 'bs-cyrl-ba' }, { DisplayText: 'Ð±Ð¾ÑÐ°Ð½ÑÐºÐ¸ [bs-cyrl]', CultureCode: 'bs-cyrl' }, { DisplayText: 'Ð±ÑŠÐ»Ð³Ð°Ñ€ÑÐºÐ¸ (Ð‘ÑŠÐ»Ð³Ð°Ñ€Ð¸Ñ) [bg-bg]', CultureCode: 'bg-bg' }, { DisplayText: 'Ð±ÑŠÐ»Ð³Ð°Ñ€ÑÐºÐ¸ [bg]', CultureCode: 'bg' }, { DisplayText: 'ÐšÑ‹Ñ€Ð³Ñ‹Ð· (ÐšÑ‹Ñ€Ð³Ñ‹Ð·ÑÑ‚Ð°Ð½) [ky-kg]', CultureCode: 'ky-kg' }, { DisplayText: 'ÐšÑ‹Ñ€Ð³Ñ‹Ð· [ky]', CultureCode: 'ky' }, { DisplayText: 'ÒšÐ°Ð·Ð°Ò› (ÒšÐ°Ð·Ð°Ò›ÑÑ‚Ð°Ð½) [kk-kz]', CultureCode: 'kk-kz' }, { DisplayText: 'ÒšÐ°Ð·Ð°Ò› [kk]', CultureCode: 'kk' }, { DisplayText: 'Ð¼Ð°ÐºÐµÐ´Ð¾Ð½ÑÐºÐ¸ Ñ˜Ð°Ð·Ð¸Ðº (ÐœÐ°ÐºÐµÐ´Ð¾Ð½Ð¸Ñ˜Ð°) [mk-mk]', CultureCode: 'mk-mk' },\n          { DisplayText: 'Ð¼Ð°ÐºÐµÐ´Ð¾Ð½ÑÐºÐ¸ Ñ˜Ð°Ð·Ð¸Ðº [mk]', CultureCode: 'mk' }, { DisplayText: 'ÐœÐ¾Ð½Ð³Ð¾Ð»Â Ñ…ÑÐ» (ÐœÐ¾Ð½Ð³Ð¾Ð»Â ÑƒÐ»Ñ) [mn-mn]', CultureCode: 'mn-mn' }, { DisplayText: 'ÐœÐ¾Ð½Ð³Ð¾Ð»Â Ñ…ÑÐ» [mn]', CultureCode: 'mn' }, { DisplayText: 'ÐœÐ¾Ð½Ð³Ð¾Ð»Â Ñ…ÑÐ» [mn-cyrl]', CultureCode: 'mn-cyrl' }, { DisplayText: 'Ñ€ÑƒÑÑÐºÐ¸Ð¹ (Ð Ð¾ÑÑÐ¸Ñ) [ru-ru]', CultureCode: 'ru-ru' }, { DisplayText: 'Ñ€ÑƒÑÑÐºÐ¸Ð¹ [ru]', CultureCode: 'ru' }, { DisplayText: 'ÑÐ°Ñ…Ð° (Ð Ð¾ÑÑÐ¸Ñ) [sah-ru]', CultureCode: 'sah-ru' }, { DisplayText: 'ÑÐ°Ñ…Ð° [sah]', CultureCode: 'sah' }, { DisplayText: 'ÑÑ€Ð¿ÑÐºÐ¸ (Ð‘Ð¾ÑÐ½Ð° Ð¸ Ð¥ÐµÑ€Ñ†ÐµÐ³Ð¾Ð²Ð¸Ð½Ð°) [sr-cyrl-ba]', CultureCode: 'sr-cyrl-ba' }, { DisplayText: 'ÑÑ€Ð¿ÑÐºÐ¸ (Ð¡Ñ€Ð±Ð¸Ñ˜Ð° Ð¸ Ð¦Ñ€Ð½Ð° Ð“Ð¾Ñ€Ð° (ÐŸÑ€ÐµÑ‚Ñ…Ð¾Ð´Ð½Ð¾)) [sr-cyrl-cs]', CultureCode: 'sr-cyrl-cs' }, { DisplayText: 'ÑÑ€Ð¿ÑÐºÐ¸ (Ð¡Ñ€Ð±Ð¸Ñ˜Ð°) [sr-cyrl-rs]', CultureCode: 'sr-cyrl-rs' }, { DisplayText: 'ÑÑ€Ð¿ÑÐºÐ¸ (Ð¦Ñ€Ð½Ð° Ð“Ð¾Ñ€Ð°) [sr-cyrl-me]', CultureCode: 'sr-cyrl-me' }, { DisplayText: 'ÑÑ€Ð¿ÑÐºÐ¸ [sr-cyrl]', CultureCode: 'sr-cyrl' }, { DisplayText: 'Ð¢Ð°Ñ‚Ð°Ñ€ (Ð Ð¾ÑÑÐ¸Ñ) [tt-ru]', CultureCode: 'tt-ru' }, { DisplayText: 'Ð¢Ð°Ñ‚Ð°Ñ€ [tt]', CultureCode: 'tt' }, { DisplayText: 'Ð¢Ð¾Ò·Ð¸ÐºÓ£ (Ð¢Ð¾Ò·Ð¸ÐºÐ¸ÑÑ‚Ð¾Ð½) [tg-cyrl-tj]', CultureCode: 'tg-cyrl-tj' }, { DisplayText: 'Ð¢Ð¾Ò·Ð¸ÐºÓ£ [tg]', CultureCode: 'tg' }, { DisplayText: 'Ð¢Ð¾Ò·Ð¸ÐºÓ£ [tg-cyrl]', CultureCode: 'tg-cyrl' }, { DisplayText: 'ÐŽÐ·Ð±ÐµÐº (ÐŽÐ·Ð±ÐµÐºÐ¸ÑÑ‚Ð¾Ð½) [uz-cyrl-uz]', CultureCode: 'uz-cyrl-uz' }, { DisplayText: 'ÐŽÐ·Ð±ÐµÐº [uz-cyrl]', CultureCode: 'uz-cyrl' }, { DisplayText: 'ÑƒÐºÑ€Ð°Ñ—Ð½ÑÑŒÐºÐ° (Ð£ÐºÑ€Ð°Ñ—Ð½Ð°) [uk-ua]', CultureCode: 'uk-ua' }, { DisplayText: 'ÑƒÐºÑ€Ð°Ñ—Ð½ÑÑŒÐºÐ° [uk]', CultureCode: 'uk' }, { DisplayText: 'Õ€Õ¡ÕµÕ¥Ö€Õ¥Õ¶ (Õ€Õ¡ÕµÕ¡Õ½Õ¿Õ¡Õ¶) [hy-am]', CultureCode: 'hy-am' }, { DisplayText: 'Õ€Õ¡ÕµÕ¥Ö€Õ¥Õ¶ [hy]', CultureCode: 'hy' }, { DisplayText: 'áƒ¥áƒáƒ áƒ—áƒ£áƒšáƒ˜ (áƒ¡áƒáƒ¥áƒáƒ áƒ—áƒ•áƒ”áƒšáƒ) [ka-ge]', CultureCode: 'ka-ge' }, { DisplayText: 'áƒ¥áƒáƒ áƒ—áƒ£áƒšáƒ˜ [ka]', CultureCode: 'ka' }, { DisplayText: '×¢×‘×¨×™×ª (×™×©×¨××œ) [he-il]', CultureCode: 'he-il' }, { DisplayText: '×¢×‘×¨×™×ª [he]', CultureCode: 'he' }, { DisplayText: 'Ø§ÙØ±Ø¯Ùˆ (Ù¾Ø§Ú©Ø³ØªØ§Ù†) [ur-pk]', CultureCode: 'ur-pk' }, { DisplayText: 'Ø§ÙØ±Ø¯Ùˆ [ur]', CultureCode: 'ur' }, { DisplayText: 'Ø§Ù„Ø¹Ø±Ø¨ÙŠØ© (Ø§Ù„Ø£Ø±Ø¯Ù†) [ar-jo]', CultureCode: 'ar-jo' },\n          { DisplayText: 'Ø§Ù„Ø¹Ø±Ø¨ÙŠØ© (Ø§Ù„Ø¥Ù…Ø§Ø±Ø§Øª Ø§Ù„Ø¹Ø±Ø¨ÙŠØ© Ø§Ù„Ù…ØªØ­Ø¯Ø©) [ar-ae]', CultureCode: 'ar-ae' }, { DisplayText: 'Ø§Ù„Ø¹Ø±Ø¨ÙŠØ© (Ø§Ù„Ø¨Ø­Ø±ÙŠÙ†) [ar-bh]', CultureCode: 'ar-bh' }, { DisplayText: 'Ø§Ù„Ø¹Ø±Ø¨ÙŠØ© (Ø§Ù„Ø¬Ø²Ø§Ø¦Ø±) [ar-dz]', CultureCode: 'ar-dz' }, { DisplayText: 'Ø§Ù„Ø¹Ø±Ø¨ÙŠØ© (Ø§Ù„Ø¹Ø±Ø§Ù‚) [ar-iq]', CultureCode: 'ar-iq' }, { DisplayText: 'Ø§Ù„Ø¹Ø±Ø¨ÙŠØ© (Ø§Ù„ÙƒÙˆÙŠØª) [ar-kw]', CultureCode: 'ar-kw' }, { DisplayText: 'Ø§Ù„Ø¹Ø±Ø¨ÙŠØ© (Ø§Ù„Ù…Ù…Ù„ÙƒØ© Ø§Ù„Ø¹Ø±Ø¨ÙŠØ© Ø§Ù„Ø³Ø¹ÙˆØ¯ÙŠØ©) [ar-sa]', CultureCode: 'ar-sa' }, { DisplayText: 'Ø§Ù„Ø¹Ø±Ø¨ÙŠØ© (Ø§Ù„Ù…Ù…Ù„ÙƒØ© Ø§Ù„Ù…ØºØ±Ø¨ÙŠØ©) [ar-ma]', CultureCode: 'ar-ma' }, { DisplayText: 'Ø§Ù„Ø¹Ø±Ø¨ÙŠØ© (Ø§Ù„ÙŠÙ…Ù†) [ar-ye]', CultureCode: 'ar-ye' }, { DisplayText: 'Ø§Ù„Ø¹Ø±Ø¨ÙŠØ© (ØªÙˆÙ†Ø³) [ar-tn]', CultureCode: 'ar-tn' }, { DisplayText: 'Ø§Ù„Ø¹Ø±Ø¨ÙŠØ© (Ø³ÙˆØ±ÙŠØ§) [ar-sy]', CultureCode: 'ar-sy' }, { DisplayText: 'Ø§Ù„Ø¹Ø±Ø¨ÙŠØ© (Ø¹Ù…Ø§Ù†) [ar-om]', CultureCode: 'ar-om' }, { DisplayText: 'Ø§Ù„Ø¹Ø±Ø¨ÙŠØ© (Ù‚Ø·Ø±) [ar-qa]', CultureCode: 'ar-qa' }, { DisplayText: 'Ø§Ù„Ø¹Ø±Ø¨ÙŠØ© (Ù„Ø¨Ù†Ø§Ù†) [ar-lb]', CultureCode: 'ar-lb' }, { DisplayText: 'Ø§Ù„Ø¹Ø±Ø¨ÙŠØ© (Ù„ÙŠØ¨ÙŠØ§) [ar-ly]', CultureCode: 'ar-ly' }, { DisplayText: 'Ø§Ù„Ø¹Ø±Ø¨ÙŠØ© (Ù…ØµØ±) [ar-eg]', CultureCode: 'ar-eg' }, { DisplayText: 'Ø§Ù„Ø¹Ø±Ø¨ÙŠØ© [ar]', CultureCode: 'ar' }, { DisplayText: 'Ù¾ÚšØªÙˆ (Ø§ÙØºØ§Ù†Ø³ØªØ§Ù†) [ps-af]', CultureCode: 'ps-af' }, { DisplayText: 'Ù¾ÚšØªÙˆ [ps]', CultureCode: 'ps' }, { DisplayText: 'Ø¯Ø±Ù‰ (Ø§ÙØºØ§Ù†Ø³ØªØ§Ù†) [prs-af]', CultureCode: 'prs-af' }, { DisplayText: 'Ø¯Ø±Ù‰ [prs]', CultureCode: 'prs' }, { DisplayText: 'ÙØ§Ø±Ø³Ù‰ (Ø§ÛŒØ±Ø§Ù†) [fa-ir]', CultureCode: 'fa-ir' }, { DisplayText: 'ÙØ§Ø±Ø³Ù‰ [fa]', CultureCode: 'fa' }, { DisplayText: 'Ø¦Û‡ÙŠØºÛ‡Ø±Ú†Û• (Ø¬Û‡Ú­Ø®Û‡Ø§ Ø®Û•Ù„Ù‚ Ø¬Û‡Ù…Ú¾Û‡Ø±Ù‰ÙŠÙ‰ØªÙ‰) [ug-cn]', CultureCode: 'ug-cn' }, { DisplayText: 'Ø¦Û‡ÙŠØºÛ‡Ø±Ú†Û• [ug]', CultureCode: 'ug' }, { DisplayText: 'Ü£Ü˜ÜªÜÜÜ (Ø³ÙˆØ±ÙŠØ§) [syr-sy]', CultureCode: 'syr-sy' }, { DisplayText: 'Ü£Ü˜ÜªÜÜÜ [syr]', CultureCode: 'syr' }, { DisplayText: 'Þ‹Þ¨ÞˆÞ¬Þ€Þ¨Þ„Þ¦ÞÞ° (Þ‹Þ¨ÞˆÞ¬Þ€Þ¨ ÞƒÞ§Þ‡Þ°Þ–Þ¬) [dv-mv]', CultureCode: 'dv-mv' }, { DisplayText: 'Þ‹Þ¨ÞˆÞ¬Þ€Þ¨Þ„Þ¦ÞÞ° [dv]', CultureCode: 'dv' }, { DisplayText: 'à¤•à¥‹à¤‚à¤•à¤£à¥€ (à¤­à¤¾à¤°à¤¤) [kok-in]', CultureCode: 'kok-in' }, { DisplayText: 'à¤•à¥‹à¤‚à¤•à¤£à¥€ [kok]', CultureCode: 'kok' },\n          { DisplayText: 'à¤¨à¥‡à¤ªà¤¾à¤²à¥€ (à¤¨à¥‡à¤ªà¤¾à¤²) [ne-np]', CultureCode: 'ne-np' }, { DisplayText: 'à¤¨à¥‡à¤ªà¤¾à¤²à¥€ [ne]', CultureCode: 'ne' }, { DisplayText: 'à¤®à¤°à¤¾à¤ à¥€ (à¤­à¤¾à¤°à¤¤) [mr-in]', CultureCode: 'mr-in' }, { DisplayText: 'à¤®à¤°à¤¾à¤ à¥€ [mr]', CultureCode: 'mr' }, { DisplayText: 'à¤¸à¤‚à¤¸à¥à¤•à¥ƒà¤¤ (à¤­à¤¾à¤°à¤¤à¤®à¥) [sa-in]', CultureCode: 'sa-in' }, { DisplayText: 'à¤¸à¤‚à¤¸à¥à¤•à¥ƒà¤¤ [sa]', CultureCode: 'sa' }, { DisplayText: 'à¤¹à¤¿à¤‚à¤¦à¥€ (à¤­à¤¾à¤°à¤¤) [hi-in]', CultureCode: 'hi-in' }, { DisplayText: 'à¤¹à¤¿à¤‚à¤¦à¥€ [hi]', CultureCode: 'hi' }, { DisplayText: 'à¦…à¦¸à¦®à§€à§Ÿà¦¾ (à¦­à¦¾à§°à¦¤) [as-in]', CultureCode: 'as-in' }, { DisplayText: 'à¦…à¦¸à¦®à§€à§Ÿà¦¾ [as]', CultureCode: 'as' }, { DisplayText: 'à¦¬à¦¾à¦‚à¦²à¦¾ (à¦¬à¦¾à¦‚à¦²à¦¾à¦¦à§‡à¦¶) [bn-bd]', CultureCode: 'bn-bd' }, { DisplayText: 'à¦¬à¦¾à¦‚à¦²à¦¾ (à¦­à¦¾à¦°à¦¤) [bn-in]', CultureCode: 'bn-in' }, { DisplayText: 'à¦¬à¦¾à¦‚à¦²à¦¾ [bn]', CultureCode: 'bn' }, { DisplayText: 'à¨ªà©°à¨œà¨¾à¨¬à©€ (à¨­à¨¾à¨°à¨¤) [pa-in]', CultureCode: 'pa-in' }, { DisplayText: 'à¨ªà©°à¨œà¨¾à¨¬à©€ [pa]', CultureCode: 'pa' }, { DisplayText: 'àª—à«àªœàª°àª¾àª¤à«€ (àª­àª¾àª°àª¤) [gu-in]', CultureCode: 'gu-in' }, { DisplayText: 'àª—à«àªœàª°àª¾àª¤à«€ [gu]', CultureCode: 'gu' }, { DisplayText: 'à¬“à­œà¬¿à¬† (à¬­à¬¾à¬°à¬¤) [or-in]', CultureCode: 'or-in' }, { DisplayText: 'à¬“à­œà¬¿à¬† [or]', CultureCode: 'or' }, { DisplayText: 'à®¤à®®à®¿à®´à¯ (à®‡à®¨à¯à®¤à®¿à®¯à®¾) [ta-in]', CultureCode: 'ta-in' }, { DisplayText: 'à®¤à®®à®¿à®´à¯ [ta]', CultureCode: 'ta' }, { DisplayText: 'à°¤à±†à°²à±à°—à± (à°­à°¾à°°à°¤Â à°¦à±‡à°¶à°‚) [te-in]', CultureCode: 'te-in' }, { DisplayText: 'à°¤à±†à°²à±à°—à± [te]', CultureCode: 'te' }, { DisplayText: 'à²•à²¨à³à²¨à²¡ (à²­à²¾à²°à²¤) [kn-in]', CultureCode: 'kn-in' }, { DisplayText: 'à²•à²¨à³à²¨à²¡ [kn]', CultureCode: 'kn' }, { DisplayText: 'à´®à´²à´¯à´¾à´³à´‚ (à´­à´¾à´°à´¤à´‚) [ml-in]', CultureCode: 'ml-in' }, { DisplayText: 'à´®à´²à´¯à´¾à´³à´‚ [ml]', CultureCode: 'ml' }, { DisplayText: 'à·ƒà·’à¶‚à·„à¶½ (à·à·Šâ€à¶»à·“ à¶½à¶‚à¶šà·) [si-lk]', CultureCode: 'si-lk' }, { DisplayText: 'à·ƒà·’à¶‚à·„à¶½ [si]', CultureCode: 'si' }, { DisplayText: 'à¹„à¸—à¸¢ (à¹„à¸—à¸¢) [th-th]', CultureCode: 'th-th' }, { DisplayText: 'à¹„à¸—à¸¢ [th]', CultureCode: 'th' }, { DisplayText: 'á ®á ¤á ¨á ­á ­á ¤á ¯ á ¬á ¡á ¯á ¡ (á ªá ¦á ­á ¦á ³á ¡ á ¨á  á ¢á ·á  á ®á ³á  á ¬á ¤ á ³á ¤á ®á ³á  á ³á ¤ á  á ·á  á ³ á £á ¯á £á °) [mn-mong-cn]', CultureCode: 'mn-mong-cn' },\n          { DisplayText: 'á ®á ¤á ¨á ­á ­á ¤á ¯ á ¬á ¡á ¯á ¡ [mn-mong]', CultureCode: 'mn-mong' }, { DisplayText: 'à½–à½¼à½‘à¼‹à½¡à½²à½‚ (à½€à¾²à½´à½„à¼‹à½§à¾­à¼‹à½˜à½²à¼‹à½‘à½˜à½„à½¦à¼‹à½¦à¾¤à¾±à½²à¼‹à½˜à½à½´à½“à¼‹à½¢à¾’à¾±à½£à¼‹à½à½–à¼) [bo-cn]', CultureCode: 'bo-cn' }, { DisplayText: 'à½–à½¼à½‘à¼‹à½¡à½²à½‚ [bo]', CultureCode: 'bo' }, { DisplayText: 'àº¥àº²àº§ (àºª.àº›.àº›. àº¥àº²àº§) [lo-la]', CultureCode: 'lo-la' }, { DisplayText: 'àº¥àº²àº§ [lo]', CultureCode: 'lo' }, { DisplayText: 'ážáŸ’áž˜áŸ‚ážš (áž€áž˜áŸ’áž–áž»áž‡áž¶) [km-kh]', CultureCode: 'km-kh' }, { DisplayText: 'ážáŸ’áž˜áŸ‚ážš [km]', CultureCode: 'km' }, { DisplayText: 'áƒá“„á’ƒá‘Žá‘á‘¦ (á‘²á“‡á‘•á’¥) [iu-cans-ca]', CultureCode: 'iu-cans-ca' }, { DisplayText: 'áƒá“„á’ƒá‘Žá‘á‘¦ [iu-cans]', CultureCode: 'iu-cans' }, { DisplayText: 'áŠ áˆ›áˆ­áŠ› (áŠ¢á‰µá‹®áŒµá‹«) [am-et]', CultureCode: 'am-et' }, { DisplayText: 'áŠ áˆ›áˆ­áŠ› [am]', CultureCode: 'am' }, { DisplayText: 'ê†ˆêŒ ê±ê‚· (êê‰¸ê“ê‚±ê‡­ê‰¼ê‡©) [ii-cn]', CultureCode: 'ii-cn' }, { DisplayText: 'ê†ˆêŒ ê±ê‚· [ii]', CultureCode: 'ii' }, { DisplayText: 'í•œêµ­ì–´ (ëŒ€í•œë¯¼êµ­) [ko-kr]', CultureCode: 'ko-kr' }, { DisplayText: 'í•œêµ­ì–´ [ko]', CultureCode: 'ko' }, { DisplayText: 'ä¸­æ–‡ [zh]', CultureCode: 'zh' }, { DisplayText: 'ä¸­æ–‡(ä¸­åŽäººæ°‘å…±å’Œå›½) [zh-cn]', CultureCode: 'zh-cn' }, { DisplayText: 'ä¸­æ–‡(å°ç£) [zh-tw]', CultureCode: 'zh-tw' }, { DisplayText: 'ä¸­æ–‡(æ–°åŠ å¡) [zh-sg]', CultureCode: 'zh-sg' }, { DisplayText: 'ä¸­æ–‡(æ¾³é–€ç‰¹åˆ¥è¡Œæ”¿å€) [zh-mo]', CultureCode: 'zh-mo' }, { DisplayText: 'ä¸­æ–‡(ç®€ä½“) [zh-hans]', CultureCode: 'zh-hans' }, { DisplayText: 'ä¸­æ–‡(ç®€ä½“) æ—§ç‰ˆ [zh-chs]', CultureCode: 'zh-chs' }, { DisplayText: 'ä¸­æ–‡(ç¹é«”) [zh-hant]', CultureCode: 'zh-hant' }, { DisplayText: 'ä¸­æ–‡(ç¹é«”) èˆŠç‰ˆ [zh-cht]', CultureCode: 'zh-cht' }, { DisplayText: 'ä¸­æ–‡(é¦™æ¸¯ç‰¹åˆ¥è¡Œæ”¿å€) [zh-hk]', CultureCode: 'zh-hk' }, { DisplayText: 'æ—¥æœ¬èªž (æ—¥æœ¬) [ja-jp]', CultureCode: 'ja-jp' }, { DisplayText: 'æ—¥æœ¬èªž [ja]', CultureCode: 'ja' },\n        ],\n      },\n    };\n  }\n  read(params) {\n    if (params) {\n      if (params.expectSuccess && params.success) {\n        params.success(this.queryResult);\n        return;\n      } else if (!params.expectSuccess && params.failure) {\n        params.failure('class query failed');\n        return;\n      }\n    }\n    console.error('params needs to exist and have the functions success and failure'); //eslint-disable-line\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./test/mocks/mockSDataCultureClass.js","/**\n * @module\n * @description\n * Services API\n */\nexport * from './src';\n\n\n\n// WEBPACK FOOTER //\n// ./index.js"],"sourceRoot":""}