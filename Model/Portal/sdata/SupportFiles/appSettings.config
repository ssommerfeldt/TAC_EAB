<?xml version="1.0" encoding="utf-8"?>
<appSettings>
  <add key="log4net.Config" value="log4net.Config" />
  <add key="nhibernate-logger" value="Sage.Platform.Log4NetLoggerFactory, Sage.Platform" />
  <add key="vs:EnableBrowserLink" value="false" />
  <!--
    Change the caching provider to the Memcached for distributed caching (specifically for the Virtual File System).
    This is critical for a web farm environment, as the HashtableCacheProvider is for a single process.
  -->
  <!--<add key="sage.platform.application.caching.cacheProvider" value="Sage.Platform.Application.Caching.HashtableCacheProvider, Sage.Platform.Application"/>-->
  <add key="sage.platform.application.caching.cacheProvider" value="Sage.Platform.Caches.Memcached.CacheProvider, Sage.Platform.Caches.Memcached" />
  <!--
    Determines how much logging information is recorded in the Application event log when the
    SalesLogix Error Id is recorded along with exception details.

    0 = General. Best when log file size is a consideration.
    
    Includes: slxErrorId, mitigation, date, utc, message, source, type, stackTrace, targetSite, hashCode, pid, identity.name,
    identity.isAuthenticated, identity.authenticationType, request.looksLikeAjax, request.isLocal, request.method,
    request.url, request.referrer and other exception details for specific exceptions types (e.g. oledbException,
    webException, httpException, etc.).
    
    1 = Detailed.
    
    Includes: All of the above plus request.ipAddress, request.userAgent, request.userLanguages, browser.type,
    browser.name, browser.version, browser.majorVersion, browser.minorVersion, browser.platform, server.machineName,
    server.commandLine, server.versionString, server.is64BitOperatingSystem, host.siteName, host.applicationPhysicalPath,
    host.applicationVirtualPath, host.isDebuggingEnabled, host.isHosted, host.maxConcurrentRequestsPerCPU,
    host.maxConcurrentThreadsPerCPU, host.applicationId, logonUser.name, logonUser.authenticationType,
    logonUser.impersonationLevel, logonUser.isAnyonymous, logonUser.isGuest, and logonUser.isSystem.
    
    2 = Verbose. Best for capturing details to be sent to Sage for analysis along with crash dumps (if applicable).
    
    Includes: All of the above plus process.sessionId, process.fileName, process.fileVersion,
    process.productVersion, process.basePriority, process.priorityClass, times.startTime, times.upTime,
    times.privilegedProcessorTime, times.totalProcessorTime, times.userProcessorTime, memory.maxWorkingSet,
    memory.minWorkingSet, memory.workingSet64, memory.peakWorkingSet64, memory.nonpagedSystemMemorySize64,
    memory.pagedMemorySize64, memory.pagedSystemMemorySize64, memory.peakPagedMemorySize64, memory.peakVirtualMemorySize64,
    memory.privateMemorySize64, memory.virtualMemorySize64, and memory.managedMemorySize.
    -->
  <add key="sage.platform.diagnostics.errorHelper-logLevel" value="1" />
  <add key="sage.scheduling.client.serverUrl" value="http://localhost:1895" />
  <add key="sage.platform.scheduling.tenantId" value="SlxJobService" />
  <add key="sage.platform.diagnostics.developmentContext-developerUserCodes" value="ADMIN" />
  <!--
    Determines if the usage of groups is tracked and stored in the GroupStats table. The default value is true if this setting is undefined.
   -->
  <add key="sage.saleslogix.client.groupbuilder.trackGroupUsage" value="true"/>
  <!--
    Determines the number of seconds to cache the group filter results (e.g. range filter results). Valid values are 0 to 60.
    A value of 0 will effectively disable the cache. The default value is 30.
  -->
  <add key="sage.saleslogix.client.groupbuilder.adapter.basedataminer.cachedResultTimeout" value="30"/>
  <!--
    Determines the number of seconds to cache the group count. Valid values are 0 to 60.
    A value of 0 will effectively disable the cache. The default value is 30.
  -->
  <add key="sage.saleslogix.client.groupbuilder.cachedCountTimeout" value="30"/>
  <!--
    Defines the fail-safe log folder for storing logging information from SLXEventLogAppender that is too large to log to the application event log.
    If this value is undefined and the portal includes an App_Data folder, the fail-safe log folder (i.e. fslog) will be created as a subfolder of
    the App_Data folder. If the App_Data folder is undefined for a portal the fslog folder will be created as a subfolder of the root (e.g. PortalName\fslog).
  -->
  <add key="sage.saleslogix.web.slxeventlogappender.failSafeLogFolder" value="" />
  <!--
    Determines whether or not the ReportCache folder (e.g. storeFolderName) can be purged by the portal when the ReportCache is initialized[1].
    Purging removes invalid Crystal Reports documents and metadata from the ReportCache (i.e. reports that do not have an identical Plugin.Id in the database).
    The default value is "true" if this setting is undefined or empty.
    [1] Note: The ReportCache is initialized once during the lifetime of an application pool instance.
  -->
  <add key="saleslogix.reporting.reportCache.canPurge" value="true"/>
  <!--
    Defines the maximum number of retries the ReportCache will attempt file operations (e.g. create, copy, delete, etc.) if there is a failure.
    The default value is "5" if this setting is undefined or empty. Valid values are 0 to 10.
  -->
  <add key="saleslogix.reporting.reportCache.maxFileRetryCount" value="5"/>
  <!--
    Defines the maximum number of milliseconds between reattempted file operations (e.g. create, copy, delete, etc.) if there is a failure.
    The default value is "750" (i.e. 3/4 second) if this setting is undefined or empty. Valid values are 0 to 2000 (i.e. 2 seconds).
  -->
  <add key="saleslogix.reporting.reportCache.maxFileRetryWait" value="750"/>
  <!--
    Defines the fully qualified path where Crystal Reports documents and report metadata are stored for the ReportCache.
    The default value is one of the following if this setting is undefined or empty; it will be suffixed by \ReportCache\%SystemInfo.SiteCode%:
      A. The PathManager CachePath (e.g. %ALLUSERSPROFILE%\Application Data\SalesLogix\Cache).
      B. The %TEMP% folder if the PathManager CachePath cannot be created.
    Important: The application pool or service account user must have full control of this location.
  -->
  <add key="saleslogix.reporting.reportCache.storeFolderName" value=""/>

  <add key="sage.saleslogix.web.sso.tenantId" value="" />
  <add key="sage.saleslogix.web.ionApiBasicAuthentication.allowHttp" value="false"/>
  <add key="sage.saleslogix.web.ionApiBasicAuthentication.allowedTenants" value=""/>

  <add key="sage.saleslogix.web.cors.enabled" value="false"/>
  <add key="sage.saleslogix.web.cors.allowedOrigins" value=""/>
  <add key="sage.saleslogix.web.cors.allowedHeaders" value="Authorization,X-Requested-With,X-Authorization,X-Authorization-Mode,Content-Type,If-Match"/>
  <add key="sage.saleslogix.web.cors.allowedMethods" value="GET,POST,PUT,DELETE,OPTIONS"/>
</appSettings>