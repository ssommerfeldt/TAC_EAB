<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="chkUseSourceAddressPhn.Caption" xml:space="preserve">
    <value>请使用新客户的地址和电话号码信息。</value>
  </data>
  <data name="cmdCancel.Text" xml:space="preserve">
    <value>取消</value>
  </data>
  <data name="cmdOK.Text" xml:space="preserve">
    <value>确定</value>
  </data>
  <data name="ConfirmMove.Text" xml:space="preserve">
    <value>确定要移动该联系人和所选项目吗?</value>
  </data>
  <data name="lblAddressPhone.Text" xml:space="preserve">
    <value>地址和电话</value>
  </data>
  <data name="lblCantMoveItemsInfo.Text" xml:space="preserve">
    <value>无法移动以下项目。必须将它们重新分配给源客户中的联系人。</value>
  </data>
  <data name="lblHeader.Text" xml:space="preserve">
    <value>此页面用于将联系人从一个客户移动到另一个客户，以及用于移动或重新分配相关记录。</value>
  </data>
  <data name="lblMoveFromLbl.Text" xml:space="preserve">
    <value>从</value>
  </data>
  <data name="lblMoveOptions.Text" xml:space="preserve">
    <value>选项</value>
  </data>
  <data name="lblMoveSourceLbl.Text" xml:space="preserve">
    <value>移动</value>
  </data>
  <data name="lblMoveTicketsReturnsContracts.Text" xml:space="preserve">
    <value>工单、退货、合同和销售订单</value>
  </data>
  <data name="lblMoveToAcctLbl.Text" xml:space="preserve">
    <value>至</value>
  </data>
  <data name="lblReassign.Text" xml:space="preserve">
    <value>重新分配</value>
  </data>
  <data name="lblReassignClosedItems.Text" xml:space="preserve">
    <value>已结或已满足的营销材料申请和销售机会</value>
  </data>
  <data name="lblReassignInfo.Text" xml:space="preserve">
    <value>移动联系人时，以下项目必须随该联系人一起移动或者重新分配给与旧客户关联的联系人。</value>
  </data>
  <data name="lblReassignOpenItems.Text" xml:space="preserve">
    <value>未结或活动的附件、营销材料申请、销售机会和销售订单</value>
  </data>
  <data name="lblReassignToContact.Text" xml:space="preserve">
    <value>重新分配给联系人:</value>
  </data>
  <data name="lblSourceAccount.Text" xml:space="preserve">
    <value>客户:</value>
  </data>
  <data name="lblSourceContact.Text" xml:space="preserve">
    <value>联系人:</value>
  </data>
  <data name="lblTargetAccount.Text" xml:space="preserve">
    <value>客户:</value>
  </data>
  <data name="error_DuplicateTargetAccount.Text" xml:space="preserve">
    <value>请选择与源客户不同的目标客户</value>
  </data>
  <data name="LookupPropertyAccount.Text" xml:space="preserve">
    <value>客户</value>
  </data>
  <data name="LookupPropertyEmail.Text" xml:space="preserve">
    <value>电子邮件</value>
  </data>
  <data name="LookupPropertyFirstName.Text" xml:space="preserve">
    <value>名字</value>
  </data>
  <data name="LookupPropertyLastName.Text" xml:space="preserve">
    <value>姓氏</value>
  </data>
  <data name="LookupPropertyMainPhone.Text" xml:space="preserve">
    <value>主要电话</value>
  </data>
  <data name="LookupPropertyMobile.Text" xml:space="preserve">
    <value>移动电话</value>
  </data>
  <data name="LookupPropertyStatus.Text" xml:space="preserve">
    <value>状态</value>
  </data>
  <data name="LookupPropertySubType.Text" xml:space="preserve">
    <value>子类型</value>
  </data>
  <data name="LookupPropertyType.Text" xml:space="preserve">
    <value>类型</value>
  </data>
  <data name="LookupPropertyWork.Text" xml:space="preserve">
    <value>工作</value>
  </data>
  <data name="rdgOptionsDoNotMoveActivtyInfo.Text" xml:space="preserve">
    <value>请勿移动活动</value>
  </data>
  <data name="rdgOptionsDoNotMoveNotesHistory.Text" xml:space="preserve">
    <value>请勿移动这些项目</value>
  </data>
  <data name="rdgOptionsMoveActivtyInfo.Text" xml:space="preserve">
    <value>将活动信息移到新客户</value>
  </data>
  <data name="rdgOptionsMoveNotesHistory.Text" xml:space="preserve">
    <value>将备注/历史信息移到新客户</value>
  </data>
  <data name="error_NoTargetAccount.Text" xml:space="preserve">
    <value>请选择目标客户，然后再继续。</value>
  </data>
  <data name="lblSingleContact.Text" xml:space="preserve">
    <value>{0} 是当前与 {1} 关联的唯一联系人。</value>
  </data>
  <data name="associationsExist.Text" xml:space="preserve">
    <value>抱歉，您无法移动此联系人，因为已分配此联系人: {1}</value>
  </data>
  <data name="cmdCancel_Close.Text" xml:space="preserve">
    <value>关闭</value>
  </data>
  <data name="lblReassignSupportItems.Text" xml:space="preserve">
    <value>未结工单、退货和合同</value>
  </data>
  <data name="error_ReassignValueDuplicate.Text" xml:space="preserve">
    <value>* 请选择与要移动的源联系人不同的目标联系人。</value>
  </data>
  <data name="error_ReassignValueNotSpecified.Text" xml:space="preserve">
    <value>* 必须在继续之前指定重新分配联系人。</value>
  </data>
  <data name="ContactMove_ContactHasChanged" xml:space="preserve">
    <value>此联系人已发生更改，必须先进行保存，才能将其移动至新客户。</value>
  </data>
  <data name="chkAssignToSameContact.Caption" xml:space="preserve">
    <value>将所有项目指定到同一个联系人。</value>
  </data>
  <data name="lblAssignToSameContact.Text" xml:space="preserve">
    <value>联系人分配</value>
  </data>
</root>