<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="chkUseSourceAddressPhn.Caption" xml:space="preserve">
    <value>使用新客戶的地址與電話號碼資訊。</value>
  </data>
  <data name="cmdCancel.Text" xml:space="preserve">
    <value>取消</value>
  </data>
  <data name="cmdOK.Text" xml:space="preserve">
    <value>確定</value>
  </data>
  <data name="ConfirmMove.Text" xml:space="preserve">
    <value>您確定要移動聯絡人與選取的項目?</value>
  </data>
  <data name="lblAddressPhone.Text" xml:space="preserve">
    <value>地址與電話</value>
  </data>
  <data name="lblCantMoveItemsInfo.Text" xml:space="preserve">
    <value>無法移動下列項目。您必須將它們重新指派至來源客戶的聯絡人。</value>
  </data>
  <data name="lblHeader.Text" xml:space="preserve">
    <value>使用此頁面可在客戶之間移動聯絡人，以及移動或重新指派相關記錄。</value>
  </data>
  <data name="lblMoveFromLbl.Text" xml:space="preserve">
    <value>從</value>
  </data>
  <data name="lblMoveOptions.Text" xml:space="preserve">
    <value>選項</value>
  </data>
  <data name="lblMoveSourceLbl.Text" xml:space="preserve">
    <value>移動</value>
  </data>
  <data name="lblMoveTicketsReturnsContracts.Text" xml:space="preserve">
    <value>記錄單、退貨、合約及銷售訂單</value>
  </data>
  <data name="lblMoveToAcctLbl.Text" xml:space="preserve">
    <value>至</value>
  </data>
  <data name="lblReassign.Text" xml:space="preserve">
    <value>重新指派</value>
  </data>
  <data name="lblReassignClosedItems.Text" xml:space="preserve">
    <value>已結或完成的文宣要求與商機</value>
  </data>
  <data name="lblReassignInfo.Text" xml:space="preserve">
    <value>當您移動聯絡人時，必須連同下列項目一起移動，或將其重新指派至與舊客戶關聯的聯絡人。</value>
  </data>
  <data name="lblReassignOpenItems.Text" xml:space="preserve">
    <value>未結或作用中附件、文宣要求、商機及銷售訂單</value>
  </data>
  <data name="lblReassignToContact.Text" xml:space="preserve">
    <value>重新指派至聯絡人:</value>
  </data>
  <data name="lblSourceAccount.Text" xml:space="preserve">
    <value>客戶:</value>
  </data>
  <data name="lblSourceContact.Text" xml:space="preserve">
    <value>聯絡人:</value>
  </data>
  <data name="lblTargetAccount.Text" xml:space="preserve">
    <value>客戶:</value>
  </data>
  <data name="error_DuplicateTargetAccount.Text" xml:space="preserve">
    <value>請選取目標客戶 (不可與來源客戶相同)</value>
  </data>
  <data name="LookupPropertyAccount.Text" xml:space="preserve">
    <value>客戶</value>
  </data>
  <data name="LookupPropertyEmail.Text" xml:space="preserve">
    <value>電子郵件</value>
  </data>
  <data name="LookupPropertyFirstName.Text" xml:space="preserve">
    <value>名字</value>
  </data>
  <data name="LookupPropertyLastName.Text" xml:space="preserve">
    <value>姓氏</value>
  </data>
  <data name="LookupPropertyMainPhone.Text" xml:space="preserve">
    <value>主要電話</value>
  </data>
  <data name="LookupPropertyMobile.Text" xml:space="preserve">
    <value>行動電話</value>
  </data>
  <data name="LookupPropertyStatus.Text" xml:space="preserve">
    <value>狀態</value>
  </data>
  <data name="LookupPropertySubType.Text" xml:space="preserve">
    <value>子類型</value>
  </data>
  <data name="LookupPropertyType.Text" xml:space="preserve">
    <value>類型</value>
  </data>
  <data name="LookupPropertyWork.Text" xml:space="preserve">
    <value>公司</value>
  </data>
  <data name="rdgOptionsDoNotMoveActivtyInfo.Text" xml:space="preserve">
    <value>不要移動活動</value>
  </data>
  <data name="rdgOptionsDoNotMoveNotesHistory.Text" xml:space="preserve">
    <value>不要移動這些項目</value>
  </data>
  <data name="rdgOptionsMoveActivtyInfo.Text" xml:space="preserve">
    <value>將活動資訊移至新客戶</value>
  </data>
  <data name="rdgOptionsMoveNotesHistory.Text" xml:space="preserve">
    <value>將備註/歷程記錄資訊移至新客戶</value>
  </data>
  <data name="error_NoTargetAccount.Text" xml:space="preserve">
    <value>請選取一個目標客戶，才能繼續進行。</value>
  </data>
  <data name="lblSingleContact.Text" xml:space="preserve">
    <value>{0} 是目前唯一與 {1} 關聯的聯絡人。</value>
  </data>
  <data name="associationsExist.Text" xml:space="preserve">
    <value>抱歉，您無法移動此聯絡人，原因是其已受指派: {1}</value>
  </data>
  <data name="cmdCancel_Close.Text" xml:space="preserve">
    <value>關閉</value>
  </data>
  <data name="lblReassignSupportItems.Text" xml:space="preserve">
    <value>未結記錄單、退貨及合約</value>
  </data>
  <data name="error_ReassignValueDuplicate.Text" xml:space="preserve">
    <value>* 請選取與要移動的來源聯絡人不同的目標聯絡人。</value>
  </data>
  <data name="error_ReassignValueNotSpecified.Text" xml:space="preserve">
    <value>* 您必須指定重新指派聯絡人，才能繼續進行。</value>
  </data>
  <data name="ContactMove_ContactHasChanged" xml:space="preserve">
    <value>聯絡人已變更，您必須先儲存該聯絡人，才能將其移動到新客戶。</value>
  </data>
  <data name="chkAssignToSameContact.Caption" xml:space="preserve">
    <value>指派所有項目至相同聯絡人。</value>
  </data>
  <data name="lblAssignToSameContact.Text" xml:space="preserve">
    <value>聯絡人指派</value>
  </data>
</root>