<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="btnBack.Caption" xml:space="preserve">
    <value>&lt; 上一步</value>
  </data>
  <data name="btnCancel.Caption" xml:space="preserve">
    <value>取消</value>
  </data>
  <data name="btnNext.Caption" xml:space="preserve">
    <value>下一步 &gt;</value>
  </data>
  <data name="Dialog.Caption" xml:space="preserve">
    <value>連結到會計</value>
  </data>
  <data name="error_NoAccountSelected" xml:space="preserve">
    <value>您必須選取相符客戶，才能繼續進行。</value>
  </data>
  <data name="grdMatches.Account.ColumnHeading" xml:space="preserve">
    <value>客戶</value>
  </data>
  <data name="grdMatches.Status.ColumnHeading" xml:space="preserve">
    <value>狀態</value>
  </data>
  <data name="grdMatches.Type.ColumnHeading" xml:space="preserve">
    <value>類型</value>
  </data>
  <data name="lblCreateAccount.Caption" xml:space="preserve">
    <value>在 &lt;span class="boldtext"&gt;{0}&lt;/span&gt; 建立客戶客戶</value>
  </data>
  <data name="lblNoMatches.Caption" xml:space="preserve">
    <value>根據搜尋條件找不到相符項目。</value>
  </data>
  <data name="lblNoMatchesCreateNew.Caption" xml:space="preserve">
    <value>建立 &lt;span class="boldtext"&gt;{0}&lt;/span&gt; 的新客戶客戶</value>
  </data>
  <data name="lblResultsMsg.Caption" xml:space="preserve">
    <value>找到多個相符的客戶客戶。可以使用下列選項:</value>
  </data>
  <data name="lblSearchNoResults.Caption" xml:space="preserve">
    <value>搜尋結果</value>
  </data>
  <data name="lblSearchResults.Caption" xml:space="preserve">
    <value>&lt;span class="boldtext"&gt;{0}&lt;/span&gt; 的搜尋結果</value>
  </data>
  <data name="rdbCreateNew.Caption" xml:space="preserve">
    <value>在會計系統建立新客戶記錄</value>
  </data>
  <data name="rdbLinkAccount.Caption" xml:space="preserve">
    <value>將 &lt;span class="boldtext"&gt;{0}&lt;/span&gt; 連結到 &lt;span class="boldtext"&gt;{1}&lt;/span&gt;&lt;span class="italictext"&gt; (如果不是 100% 相符，就有必要合併)&lt;/span&gt;:</value>
  </data>
  <data name="rdbRefineSearch.Caption" xml:space="preserve">
    <value>精簡或延伸搜尋現有客戶</value>
  </data>
  <data name="MergeRecordsDialog_Differences.Caption" xml:space="preserve">
    <value>連結到會計 - 合併資料 - 發現差異</value>
  </data>
  <data name="MergeRecordsDialog_NoDifferences.Caption" xml:space="preserve">
    <value>連結到會計 - 合併資料 - 無差異</value>
  </data>
  <data name="Error_TradingAccount_Linked" xml:space="preserve">
    <value>選取的交易客戶已連結到 Saleslogix 客戶「{0}」。您可能無法將 Saleslogix 客戶連結到相同的交易客戶。</value>
  </data>
  <data name="Error_SDataRequest" xml:space="preserve">
    <value>透過 SData 擷取相符實體時發生錯誤。如需詳細資料，請向管理員徵詢。</value>
  </data>
</root>