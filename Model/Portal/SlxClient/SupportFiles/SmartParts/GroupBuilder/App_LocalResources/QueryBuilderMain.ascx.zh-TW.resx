<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="jsAddDataToLayoutGridMessage" xml:space="preserve">
    <value>這個欄位目前似乎在這個配置中。您要繼續嗎?</value>
  </data>
  <data name="jsAscending" xml:space="preserve">
    <value>遞增</value>
  </data>
  <data name="jsConditionDlgHeight" xml:space="preserve">
    <value>「250px」</value>
  </data>
  <data name="jsConditionDlgWidth" xml:space="preserve">
    <value>「495px」</value>
  </data>
  <data name="jsConfirmDeleteMessage" xml:space="preserve">
    <value>您確定要刪除目前的群組?</value>
  </data>
  <data name="jsCreateLocalJoinMessage" xml:space="preserve">
    <value>您必須先選取表格和欄位。</value>
  </data>
  <data name="jsDescending" xml:space="preserve">
    <value>遞減</value>
  </data>
  <data name="jsInvalidConditionStringMessage" xml:space="preserve">
    <value>錯誤: 無效的條件字串 -</value>
  </data>
  <data name="jsInvalidLayoutConditionStringMessage" xml:space="preserve">
    <value>錯誤: 無效的配置字串 -</value>
  </data>
  <data name="jsInvalidSortStringMessage" xml:space="preserve">
    <value>錯誤: 無效的排序字串 -</value>
  </data>
  <data name="jsLayoutDlgHeight" xml:space="preserve">
    <value>「225px」</value>
  </data>
  <data name="jsLayoutDlgWidth" xml:space="preserve">
    <value>「360px」</value>
  </data>
  <data name="jsNewQuery" xml:space="preserve">
    <value>新增查詢</value>
  </data>
  <data name="localizeAndOr.Text" xml:space="preserve">
    <value>和/或</value>
  </data>
  <data name="localizeAssignCondition.Text" xml:space="preserve">
    <value>指派條件</value>
  </data>
  <data name="localizeAssignQueryLayout.Text" xml:space="preserve">
    <value>指派查詢配置</value>
  </data>
  <data name="localizeCalc.Text" xml:space="preserve">
    <value>計算...</value>
  </data>
  <data name="localizeCancel.Text" xml:space="preserve">
    <value>取消</value>
  </data>
  <data name="localizeCaseSens.Text" xml:space="preserve">
    <value>區分大小寫</value>
  </data>
  <data name="localizeConditionInstructions.Text" xml:space="preserve">
    <value>按兩下上方清單中的欄位，欄位就會 顯示在下方資料格中，以做為選取記錄的條件。會按照在資料格中顯示的順序套用條件。使用“上移” 和“下移”按鈕來變更順序。</value>
  </data>
  <data name="localizeConditions.Text" xml:space="preserve">
    <value>條件</value>
  </data>
  <data name="localizeCreateLocalJoin.Text" xml:space="preserve">
    <value>建立本機聯結</value>
  </data>
  <data name="localizeDefaults.Text" xml:space="preserve">
    <value>預設</value>
  </data>
  <data name="localizeDelete.Text" xml:space="preserve">
    <value>刪除</value>
  </data>
  <data name="localizeDescription.Text" xml:space="preserve">
    <value>描述:</value>
  </data>
  <data name="localizeDisplayName.Text" xml:space="preserve">
    <value>顯示名稱:</value>
  </data>
  <data name="localizeEdit.Text" xml:space="preserve">
    <value>編輯</value>
  </data>
  <data name="localizeField.Text" xml:space="preserve">
    <value>欄位</value>
  </data>
  <data name="localizeGlobalJoins.Text" xml:space="preserve">
    <value>全域聯結...</value>
  </data>
  <data name="localizeGrdSortsDirection.Text" xml:space="preserve">
    <value>方向</value>
  </data>
  <data name="localizeGrdSortsOrder.Text" xml:space="preserve">
    <value>順序</value>
  </data>
  <data name="localizeGrdSortsSortBy.Text" xml:space="preserve">
    <value>排序依據</value>
  </data>
  <data name="localizeHelp.Text" xml:space="preserve">
    <value>說明</value>
  </data>
  <data name="localizeHideHiddenFields.Text" xml:space="preserve">
    <value>不顯示隱藏欄位</value>
  </data>
  <data name="localizeLayout.Text" xml:space="preserve">
    <value>配置</value>
  </data>
  <data name="localizeLayoutInstructions.Text" xml:space="preserve">
    <value>從上方檢視按兩下欄位，以將欄位放到下方資料格中。使用「左移」和「右移」按鈕來變更資料格中的欄位順序。</value>
  </data>
  <data name="localizeMoveDown.Text" xml:space="preserve">
    <value>下移</value>
  </data>
  <data name="localizeMoveUp.Text" xml:space="preserve">
    <value>上移</value>
  </data>
  <data name="localizeName.Text" xml:space="preserve">
    <value>名稱:</value>
  </data>
  <data name="localizeNot.Text" xml:space="preserve">
    <value>不是</value>
  </data>
  <data name="localizeOK.Text" xml:space="preserve">
    <value>確定</value>
  </data>
  <data name="localizeOperator.Text" xml:space="preserve">
    <value>運算子</value>
  </data>
  <data name="localizeProperties.Text" xml:space="preserve">
    <value>內容</value>
  </data>
  <data name="localizeReturnDistinct.Text" xml:space="preserve">
    <value>只傳回不同的列</value>
  </data>
  <data name="localizeSorting.Text" xml:space="preserve">
    <value>排序</value>
  </data>
  <data name="localizeSortInstructions.Text" xml:space="preserve">
    <value>從上方檢視按兩下欄位，以將欄位放到下方資料格中，然後使用欄位來排序傳回的資料。資料是根據資料格中的欄位順序排序。使用「上移」和「下移」按鈕來變更順序。</value>
  </data>
  <data name="localizeValue.Text" xml:space="preserve">
    <value>值</value>
  </data>
  <data name="localizeViewSQL.Text" xml:space="preserve">
    <value>檢視 SQL</value>
  </data>
  <data name="MoveDown" xml:space="preserve">
    <value>下移</value>
  </data>
  <data name="MoveLeft" xml:space="preserve">
    <value>左移</value>
  </data>
  <data name="MoveRight" xml:space="preserve">
    <value>右移</value>
  </data>
  <data name="MoveUp" xml:space="preserve">
    <value>上移</value>
  </data>
  <data name="jsCopyOf" xml:space="preserve">
    <value>複本屬於</value>
  </data>
  <data name="localizeColumn.Text" xml:space="preserve">
    <value>欄</value>
  </data>
  <data name="Collapse" xml:space="preserve">
    <value>摺疊</value>
  </data>
  <data name="Expand" xml:space="preserve">
    <value>展開</value>
  </data>
  <data name="PropertyListPopulationInstructions" xml:space="preserve">
    <value>請從樹狀結構中選取一個表格名稱。</value>
  </data>
</root>