<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="btnOK.Caption" xml:space="preserve">
    <value>确定</value>
  </data>
  <data name="btnCancel.Caption" xml:space="preserve">
    <value>取消</value>
  </data>
  <data name="error_Security_NoAccess" xml:space="preserve">
    <value>您没有访问所选记录所需的安全性访问权。</value>
  </data>
  <data name="lblMergeText_DifferencesFound.Text" xml:space="preserve">
    <value>合并数据 - 发现差异</value>
  </data>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="MergeRecords_ClientScript" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>MergeRecords_ClientScript.js;System.String, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089;Windows-1252</value>
  </data>
  <data name="lblMergeDetailDifferences.Caption" xml:space="preserve">
    <value>选择要在合并的记录中保留的数据。默认情况下，此列表中仅显示含不同值的字段。</value>
  </data>
  <data name="btnBack.Caption" xml:space="preserve">
    <value>&lt; 返回</value>
  </data>
  <data name="btnNext.Caption" xml:space="preserve">
    <value>下一步 &gt;</value>
  </data>
  <data name="lnkShowAll.Caption" xml:space="preserve">
    <value>显示所有</value>
  </data>
  <data name="lnkHideDups.Caption" xml:space="preserve">
    <value>隐藏重复项</value>
  </data>
  <data name="LinkToAccounting.Caption" xml:space="preserve">
    <value>链接到会计系统 - 合并联系人</value>
  </data>
  <data name="Source.Caption" xml:space="preserve">
    <value>来源</value>
  </data>
  <data name="Target.Caption" xml:space="preserve">
    <value>目标</value>
  </data>
  <data name="lblMergeDetailNoDifferences.Caption" xml:space="preserve">
    <value>所选记录不包含任何冲突数据，所以无需进行调解。</value>
  </data>
  <data name="lblMergeText_NoDifferences.Text" xml:space="preserve">
    <value>合并数据 - 无差异</value>
  </data>
  <data name="Header.Property.Caption" xml:space="preserve">
    <value>属性</value>
  </data>
  <data name="grdMerge.EmptyTableRowText" xml:space="preserve">
    <value>这些记录的信息完全相同。单击“显示所有字段”以查看每个字段的值。</value>
  </data>
  <data name="LinkToAccounting_SelectAccount.Caption" xml:space="preserve">
    <value>链接到会计系统 - 选择或创建客户</value>
  </data>
  <data name="LinkAddress.Caption" xml:space="preserve">
    <value>链接地址</value>
  </data>
  <data name="error_Promoted_Target" xml:space="preserve">
    <value>先前已升级源记录。无法合并到已升级的源记录中。</value>
  </data>
  <data name="merge_Caption" xml:space="preserve">
    <value>合并</value>
  </data>
</root>