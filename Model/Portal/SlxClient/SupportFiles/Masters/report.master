<%@ Master Language="C#" MasterPageFile="~/Masters/core.master" %>

<%@ Import Namespace="Sage.Platform" %>
<%@ Import Namespace="Sage.Platform.Application.Diagnostics" %>
<%@ Import Namespace="Sage.Platform.Application.Services" %>
<%@ Import Namespace="Sage.Platform.Diagnostics" %>
<%@ Import Namespace="Sage.Platform.WebPortal" %>
<%@ Import Namespace="Sage.Platform.Application.UI.Web" %>
<%@ Import Namespace="Sage.Platform.Application.UI" %>
<%@ Import Namespace="Sage.SalesLogix" %>
<%@ Import Namespace="Sage.Platform.Utility" %>
<%@ Import Namespace="Sage.Platform.Application" %>
<%@ Import Namespace="Sage.Platform.Security" %>
<%@ Import Namespace="Sage.Entity.Interfaces" %>
<%@ Register Assembly="Sage.SalesLogix.Client.GroupBuilder" Namespace="Sage.SalesLogix.Client.GroupBuilder" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.Platform.WebPortal" Namespace="Sage.Platform.WebPortal.SmartParts" TagPrefix="smartParts" %>
<%@ Register Assembly="Sage.Platform.WebPortal" Namespace="Sage.Platform.WebPortal.Workspaces" TagPrefix="workSpace" %>
<%@ Register Assembly="Sage.Platform.WebPortal" Namespace="Sage.Platform.WebPortal.Services" TagPrefix="Services" %>
<%@ Register Assembly="Sage.Platform.WebPortal" Namespace="Sage.Platform.WebPortal.Workspaces.Tab" TagPrefix="tws" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.PickList" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.Lookup" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.Timeline" TagPrefix="SalesLogix" %>
<%@ Register Assembly="Sage.SalesLogix.Web.Controls" Namespace="Sage.SalesLogix.Web.Controls.ScriptResourceProvider" TagPrefix="Saleslogix" %>
<%@ Register Assembly="System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" Namespace="System.Web.UI" TagPrefix="asp" %>


<script runat="server">

    public bool IncludeMiddlePane
    {
        get { return (this.Master.FindControl("ContentPlaceHolderMain").FindControl("TabControl") as TabWorkspace).IncludeMiddlePane; }
        set { (this.Master.FindControl("ContentPlaceHolderMain").FindControl("TabControl") as TabWorkspace).IncludeMiddlePane = value; }
    }

    public bool IncludeMoreTabsTab
    {
        get { return (this.Master.FindControl("ContentPlaceHolderMain").FindControl("TabControl") as TabWorkspace).IncludeMoreTabsTab; }
        set { (this.Master.FindControl("ContentPlaceHolderMain").FindControl("TabControl") as TabWorkspace).IncludeMoreTabsTab = value; }
    }

    public int DefaultVisibleTabCount
    {
        get { return (this.Master.FindControl("ContentPlaceHolderMain").FindControl("TabControl") as TabWorkspace).DefaultVisibleTabCount; }
        set { (this.Master.FindControl("ContentPlaceHolderMain").FindControl("TabControl") as TabWorkspace).DefaultVisibleTabCount = value; }
    }

    [System.ComponentModel.Editor("Sage.Platform.WebPortal.Design.UITypeEditors.SmartPartTypeEditor, Sage.Platform.WebPortal.Design", typeof(System.Drawing.Design.UITypeEditor))]
    public string OverrideActiveTab
    {
        get { return (this.Master.FindControl("ContentPlaceHolderMain").FindControl("TabControl") as TabWorkspace).OverrideActiveTab; }
        set { (this.Master.FindControl("ContentPlaceHolderMain").FindControl("TabControl") as TabWorkspace).OverrideActiveTab = value; }
    }

    private bool _includeCollapseBtn = true;
    public bool MainContentWorkspace_IncludeCollapseButton
    {
        get { return _includeCollapseBtn; }
        set { _includeCollapseBtn = value; }
    }

    public bool IncludeTaskPane
    {
        get { return this.Master.FindControl("ContentPlaceHolderMain").FindControl("TaskPane").Visible; }
        set { this.Master.FindControl("ContentPlaceHolderMain").FindControl("TaskPane").Visible = value; }
    }
    [System.ComponentModel.Browsable(false)]
    public override string ID
    {
        get { return base.ID; }
        set { base.ID = value; }
    }

    [System.ComponentModel.Browsable(false)]
    public override bool Visible
    {
        get { return base.Visible; }
        set { base.Visible = value; }
    }

    [System.ComponentModel.Browsable(false)]
    public new string MasterPageFile
    {
        get { return base.MasterPageFile; }
        set { base.MasterPageFile = value; }
    }

    private void AddLocalizedScript(string filePattern, string langCode, string fallbackLangCode)
    {
        string[] langCodes = new string[] { langCode, fallbackLangCode };

        foreach (string code in langCodes)
        {
            string path = string.Format(filePattern, code);
            string physPath = path.StartsWith("~") ? HttpContext.Current.Server.MapPath(path) : HttpContext.Current.Server.MapPath(string.Concat("~/", path));

            if (System.IO.File.Exists(physPath))
            {
                System.Web.UI.Page page = HttpContext.Current.Handler as System.Web.UI.Page;
                page.Header.Controls.Add(new System.Web.UI.LiteralControl(
                                             string.Format(
                                                 @"<script pin=""pin"" type=""text/javascript"" src=""{0}""><" +
                                                 @"/script>",
                                                 path)
                                             ));
                break;
            }
        }
    }

    protected void Page_Load(object sender, EventArgs e)
    {
        Page.Form.Controls.Add(new ClientGroupContextService());
        if (!Page.IsPostBack)
        {
            // Just used to create the Write menu now.
            Page.Header.Controls.Add(new Sage.SalesLogix.Client.MailMerge.MailMergeInitControl());
            Page.Form.Controls.Add(new ClientAppIdMappingService());
            AddTimelineLibrary();

        }
    }

    private void AddTimelineLibrary()
    {
        // Load this BEFORE jQuery libraries
        EntityPage epage = Page as EntityPage;
        if (epage != null)
        {
            if (epage.IsDetailMode)
            {
                var file = "timeline-all-min.js";
                if (HttpContext.Current.IsDebuggingEnabled)
                {
                    file = "timeline-api.js";
                }
                var src =
                    string.Format("jscript/timeline/api/{0}?i=0&timeline-use-local-resources=true&clientlocale={1}",
                                  file, System.Globalization.CultureInfo.CurrentUICulture.Name);
                Page.Header.Controls.AddAt(1, new LiteralControl(string.Format("<script pin=\"pin\" src=\"{0}\" type=\"text/javascript\"><" + "/script>", src)));
            }
        }
    }

    protected string GetSaveMsgSystemOption()
    {
        var systemInfo = Sage.Platform.Application.ApplicationContext.Current.Services.Get<Sage.SalesLogix.Services.ISystemOptionsService>(true);
        return systemInfo.SendSlxSaveMSGFiles ? "true" : "false";
    }
    [ThreadStatic]
    private static int? _maxRequestLength;
    protected string GetFileUploadOptions()
    {
        if (_maxRequestLength != null)
        {
            return string.Format("{{maxFileSize:{0}}}", _maxRequestLength);
        }
        int maxLength = 1000000;        
        var configSection = System.Web.Configuration.WebConfigurationManager.GetSection("system.web/httpRuntime") as System.Web.Configuration.HttpRuntimeSection;
        if (configSection != null)
        {
            maxLength = configSection.MaxRequestLength * 1024;
        }
        _maxRequestLength = maxLength;

        string options = "{" + string.Format("maxFileSize:{0}", maxLength) + "}";
        return options;
    }
    protected string GetDragDropOptions()
    {
        string allowDetailDragDrop = GetAllowDragDrop("Detail") ? "true" : "false";
        string allowListDragDrop = GetAllowDragDrop("List") ? "true" : "false";
        string options = "{" + string.Format("tabWorkSpaceID:'{0}',allowDetailDragDrop:{1}, allowListDragDrop:{2}", (this.Master.FindControl("ContentPlaceHolderMain").FindControl("TabControl") as TabWorkspace).ID, allowDetailDragDrop, allowListDragDrop) + "}";
        return options;
    }
    protected bool GetAllowDragDrop(string uiMode)
    {
        if (uiMode != null)
        {
            if (uiMode.ToUpper() == "DETAIL")
            {
                return true;
            }
            if (uiMode.ToUpper() == "LIST")
            {
                return false;
            }
        }
        return false;
    }

    protected string GetDefaultDropOptions()
    {
        var systemInfo = Sage.Platform.Application.ApplicationContext.Current.Services.Get<Sage.SalesLogix.Services.ISystemOptionsService>(true);
        string saveMsgFiles = systemInfo.SendSlxSaveMSGFiles ? "true" : "false";
        string options = "{" + string.Format("tabWorkspaceId:'{0}', saveMSGFiles:{1}", (this.Master.FindControl("ContentPlaceHolderMain").FindControl("TabControl") as TabWorkspace).ID, saveMsgFiles) + "}";
        return options;
    }
   

</script>
<asp:Content ContentPlaceHolderID="head" runat="Server">

    <script pin="pin" type="text/javascript">
        var localTitleTagId = '<%= localTitle.ClientID %>';
    </script>
</asp:Content>
<asp:Content ContentPlaceHolderID="layers" runat="Server">
    <%-- Built layers, comment out for development --%>
    <script pin="pin" type="text/javascript" src="jscript/Sage/nls/Report_<%# Global.Locale %>.js"></script>
    <script pin="pin" type="text/javascript" src="jscript/Sage/Report-Combined.js"></script>

    <%--Sage Platform (Uncomment to load for development
    <script pin="pin" src="Libraries/sdata/sdata-client-dependencies-debug.js" type="text/javascript"></script>
    <script pin="pin" src="jscript/sage-platform/sage-platform-servicecontainer.js" type="text/javascript"></script>
    <script pin="pin" src="jscript/sage-platform/gears_init.js" type="text/javascript"></script>
    <script pin="pin" src="jscript/sage-platform/sage-platform-maincontentworkspace.js" type="text/javascript"></script>
    <script pin="pin" src="jscript/sage-platform/sage-platform-objectconnectionservice.js" type="text/javascript"></script>
    <script pin="pin" src="jscript/sage-platform/sage-platform-integrationcontractservice.js" type="text/javascript"></script>)--%>

    <%-- Third Party Libs (Uncomment to load for development)
    <script pin="pin" src="Libraries/sdata/sdata-client-debug.js" type="text/javascript"></script>
    <script pin="pin" src="Libraries/dhtmlxScheduler_v30/dhtmlxscheduler.js" type="text/javascript"></script>
    <script pin="pin" src="Libraries/dhtmlxScheduler_v30/ext/dhtmlxscheduler_timeline.js" type="text/javascript"></script>
    <script pin="pin" src="Libraries/Simplate.js" type="text/javascript"></script>
    <script pin="pin" src="Libraries/jQuery/jquery.js" type="text/javascript"></script>--%>
</asp:Content>
<asp:Content ContentPlaceHolderID="ContentPlaceHolderScriptResource" runat="Server">

    <SalesLogix:ScriptResourceProvider ID="MasterPageLinks" runat="server">
        <Keys>
            <SalesLogix:ResourceKeyName Key="IdleMessage" />
            <SalesLogix:ResourceKeyName Key="LogoffMessage" />
            <SalesLogix:ResourceKeyName Key="Merge_Account_SelectionError" />
            <SalesLogix:ResourceKeyName Key="PromoteTitle" />
            <SalesLogix:ResourceKeyName Key="PromotionNotification" />
            <SalesLogix:ResourceKeyName Key="PromotePageNoneSelected" />  
            <SalesLogix:ResourceKeyName Key="Warning" />
            <SalesLogix:ResourceKeyName Key="PromoteDescription" />
            <SalesLogix:ResourceKeyName Key="PromotePageColumnHeader" />                
            <SalesLogix:ResourceKeyName Key="UnspecifiedError" />
        </Keys>
    </SalesLogix:ScriptResourceProvider>
</asp:Content>
<asp:Content ContentPlaceHolderID="ContentPlaceHolderMain" runat="Server">

    <div data-dojo-type="dijit.layout.BorderContainer" gutters="false" livesplitters="false" id="innerBorder" region="center" persist="true">
        <!-- inner bordercontainer top -->
        <div data-dojo-type="Sage.UI.TitleContentPane" id="titlePane" region="top" splitter="false">
            <asp:UpdatePanel runat="server" ID="localTitleUpdatePanel" ClientIDMode="Static">
                <ContentTemplate>
                    <div runat="server" id="localTitle" class="titlebar" clientidmode="Static"></div>
                </ContentTemplate>
            </asp:UpdatePanel>

            <div id="GroupsWrapper" style="clear: both;">
                <div id="GroupTabs" data-dojo-type="Sage.UI.GroupTabPane">
                </div>
            </div>

        </div>

        <div data-dojo-type="dijit.layout.BorderContainer" splitter="true" gutters="false" livesplitters="true" region="center" id="centerContent">
            <div data-dojo-type="Sage.Layout.MainContentDetailsPane" minsize="32" region="top" id="mainContentDetails" splitter="false">
                <!-- main work area? inner bordercontainer center content-->
                <asp:UpdatePanel runat="server" ID="mainformUpdatePanel" ChildrenAsTriggers="true" UpdateMode="conditional" ClientIDMode="Static">
                    <ContentTemplate>
                        <workSpace:MainContentWorkspace ID="MainContent" runat="server" SmartPartInfoStyle-CssClass="mainContentHeader" SmartPartContainerStyle-CssClass="mainContentContent" />
                    </ContentTemplate>
                </asp:UpdatePanel>
                <tws:TabWorkspace runat="server" ID="TabControl" UseUIStateService="true">
                    <MoreTabListTools>
                        <SalesLogix:PageLink ID="moreTabsHelp" runat="server" LinkType="HelpFileName" ToolTip="<%$ resources: Portal, Help_ToolTip %>" Target="MCWebHelp" NavigateUrl="moretabs.aspx" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=Help_16x16"></SalesLogix:PageLink>
                    </MoreTabListTools>
                </tws:TabWorkspace>
            </div>
        </div>
        <!-- end inner border container center -->

        <!-- inner bordercontainer right -->
        <workSpace:TaskPaneWorkspace runat="server" ID="TaskPane" ClientIDMode="Static">
            <Tools>
                <SalesLogix:PageLink ID="taskPaneHelp" runat="server" LinkType="HelpFileName" ToolTip="<%$ resources: Portal, Help_ToolTip %>" Target="MCWebHelp" NavigateUrl="taskpane.aspx" ImageUrl="~/ImageResource.axd?scope=global&type=Global_Images&key=Help_16x16"></SalesLogix:PageLink>
            </Tools>
        </workSpace:TaskPaneWorkspace>
    </div>
    <!-- end inner border container-->
</asp:Content>
<asp:Content ContentPlaceHolderID="JsScriptFooter" runat="Server">
    <script type="text/javascript">
        require([
            "dojo/_base/html",
            "dijit/_base/manager",
            "dijit/Toolbar",
            "dijit/layout/ContentPane",
            "dijit/layout/BorderContainer",
            "dijit/TitlePane",
            "dijit/form/ValidationTextBox",
            "dijit/form/SimpleTextarea",
            "dijit/form/CheckBox",
            "dijit/form/TextBox",
            "dijit/form/Select",
            "dojo/ready",
            "dojo/_base/fx",
            "dojo/dom",
            "dojo/dom-class",
            "dojo/has",
            "dojo/_base/sniff",
            "dojo/_base/window",
            "Sage/Utility/PickList",
            "Sage/Services/JobService",
            "Sage/Groups/GroupManager",
            "Sage/Groups/GroupNavigator", // all details
            "Sage/Layout/MainContentDetailsPane",
            "Sage/Layout/TabContainer", // Multi-Tab Controller
            "Sage/Link",
            "Sage/MailMerge/Loader",
            "Sage/Services/ActivityAction",
            "Sage/Services/ActivityActionProcessor",
            "Sage/Services/ActivityService",
            "Sage/Services/CalendarSecurityService",
            "Sage/Services/ClientBindingManagerService",
            "Sage/Services/ClientContextService",
            "Sage/Services/ClientEntityContext",
            "Sage/Services/RoleSecurityService",
            "Sage/Services/SelectionContextService",
            "Sage/Services/SystemOptions",
            "Sage/Services/UserOptions",
            "Sage/Services/ReportingService",
            "Sage/Services/JobService",
            "Sage/Services/_ServiceMixin",
            "Sage/UI/Alarms/AlarmButton",
            "Sage/UI/Controls/Currency",
            "Sage/UI/Controls/HelpMenu",
            "Sage/UI/Controls/LogOffButton",
            "Sage/UI/Controls/MultiTab",
            "Sage/UI/Controls/PickListAsText", // Summary Views
            "Sage/UI/Filters/FilterPanel",
            "Sage/UI/Filters/GroupFilterConfigurationProvider", // list
            "Sage/UI/GroupListConfigurationProvider",
            "Sage/UI/GroupTabPane",
            "Sage/UI/MenuBar",
            "Sage/UI/NavBar",
            "Sage/UI/NotesHistoryList", // notes/history tab
            "Sage/UI/SpeedSearch",
            "Sage/UI/SummaryDetailPane",
            "Sage/UI/TimeZoneItem",
            "Sage/UI/TitleContentPane",
            "Sage/Utility",
            "Sage/Utility/Activity",
            "Sage/Utility/SDataLookup", // insert opportunity (editable grid script)
            "Sage/Utility/Validate",
            "Sage/Utility/Groups",
            "Sage/Utility/File",
            "Sage/Utility/File/DragDropWatcher",
            "Sage/Utility/File/DefaultDropHandler",
            "Sage/TaskPane/ActivityTaskPaneActions",
            "Sage/UI/Alarms/JobNotificationButton"
        ],
        function (
            html,
            manager,
            Toolbar,
            ContentPane,
            BorderContainer,
            TitlePane,
            ValidationTextBox,
            SimpleTextArea,
            CheckBox,
            TextBox,
            Select,
            ready,
            fx,
            dom,
            domClass,
            has,
            sniff,
            window,
            PickListUtil) {
            ready(function () {
                initGears();
                if ((Sage) && (Sage.Utility.File) && (Sage.Utility.File.DragDropWatcher)) {
                    Sage.Utility.File.init(<%= GetFileUploadOptions() %>);
                    Sage.Utility.File.DragDropWatcher.init(<%= GetDragDropOptions() %>);
                    Sage.Utility.File.DefaultDropHandler.init(<%= GetDefaultDropOptions() %>);
                }

                // For IE8, which does not have Date.now()
                if (!Date.now) {
                    Date.now = function () {
                        return new Date().valueOf();
                    };
                }
                if (has("ie") == 10) {
                    domClass.add(window.body(), "ie10");
                }
                var loader = dom.byId("loader");
                fx.fadeOut({
                    node: loader,
                    duration: 1,
                    onEnd: function () {
                        loader.style.display = 'none';
                    }
                }).play();

                PickListUtil.checkStaleCache();
            });
        });
    </script>

</asp:Content>
