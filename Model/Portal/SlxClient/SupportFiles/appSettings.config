<?xml version="1.0" encoding="utf-8"?>
<appSettings>
  <!--
    The interServerUrl value defines the server to server (inter server) URL that is used for
    HTTP communication between the SlxClient portal server and the SlxWebRpt portal server.
    This allows for the use of an internal IP address in the URL rather than the external Web
    Reporting URL the Saleslogix Web Client uses; removing the requirement of opening the
    firewall for Web Reporting purposes. Example: http://127.0.0.1:3334/slxwebrpt
  -->
  <add key="sage.salesLogix.client.reports.interServerUrl" value="" />
  <add key="log4net.Config" value="log4net.Config" />
  <add key="nhibernate-logger" value="Sage.Platform.Log4NetLoggerFactory, Sage.Platform" />
  <add key="UseWindowsPrincipal" value="false" />
  <add key="LogoffRedirectUrl" value="~/logoff.aspx" />
  <add key="vs:EnableBrowserLink" value="false" />
  <add key="ValidationSettings:UnobtrusiveValidationMode" value="None" />
  <!--
    Disables the UseAutoLogoff user option.
  -->
  <add key="disableAutoLogoff" value="false" />
  <!--
    The AlarmPollInterval option specifies the number of minutes the browser should
    wait between times it polls the server to ask for alarms.

    The default is 1 minute if not set.
  -->
  <add key="AlarmPollInterval" value="1" />

  <!--
    The JobNotificationPollInterval option specifies the number of minutes the browser should
    wait between times it polls the job service to ask for the job executions.

    The default is 5 minute if not set.
  -->
  <add key="JobNotificationPollInterval" value="5" />
  <add key="DefaultHelpLanguage" value="en-us" />
  <add key="HelpCSHFilename" value="default.html" />
  <add key="ApplicationPortalName" value="webclient" />
  <add key="DefaultHelpDomainUrl" value="http://docs.infor.com/crm/8.4.x/" />

  <!--
    Setting the ShowBindingErrorsAtRuntime flag to "true" will display messages whenever there are
    exceptions during databinding.  A setting of "false" will not display messages to the user.
  -->
  <add key="ShowBindingErrorsAtRuntime" value="false" />

  <!--
    When set to true, ApplyFieldLevelSecurityOnInsert tells field-level security to use the security
    configuration when inserting an entity.  If this value is set to false, the user may set entity
    properties, regardless of how field-level security is configured for the user.  The default is false.
  -->
  <add key="ApplyFieldLevelSecurityOnInsert" value="false" />

  <!--
    Change the caching provider to the Memcached for distributed caching (specifically for the Virtual File System).
    This is critical for a web farm environment, as the HashtableCacheProvider is for a single process.
  -->

  <!--<add key="sage.platform.application.caching.cacheProvider" value="Sage.Platform.Application.Caching.HashtableCacheProvider, Sage.Platform.Application" />-->
  <add key="sage.platform.application.caching.cacheProvider" value="Sage.Platform.Caches.Memcached.CacheProvider, Sage.Platform.Caches.Memcached" />
  <add key="sage.scheduling.client.serverUrl" value="http://localhost:1895" />
  <add key="sage.platform.scheduling.tenantId" value="SlxJobService" />

  <!--
    Determines whether the current user (as identified by the Thread.CurrentPrincipal.Identity.Name)
    is listed as an SLXErrorLookupService user in the call to Sage.Platform.Diagnostics.ErrorHelper.IsSLXErrorLookupServiceUser().
    The IsSLXErrorLookupServiceUser() method determines if a user can retrieve event log data by calling the
    SLXErrorLookupService implemented in /SlxClient/SLXErrorLookupService.asmx.

    Example call: /SlxClient/SLXErrorLookupService.asmx/GetEventLogError?slxErrorId=SLX512BA83F6230C58F

    Note: If the user is a development user (e.g. IsDevelopmentUser()) the user can make calls into the SLXErrorLookupService without
    requiring their UserSecurity.UserCode to be included in the sage.saleslogix.web.diagnostics.slxErrorLookupService-administrativeUserCodes AppSettings value.
  -->
  <add key="sage.saleslogix.web.diagnostics.slxErrorLookupService-administrativeUserCodes" value="admin" />

  <!--
    Determines whether the current user (as identified by the Thread.CurrentPrincipal.Identity.Name)
    is included as a development user in the call to Sage.Platform.Diagnostics.ErrorHelper.IsDevelopmentUser().
    If the user is a development user they will see additional error information for AJAX exceptions
    handled using Sage.Utility.ErrorHandler.handleHttpError() in Sage/Utility/ErrorHandler.js.
    The additional information displayed includes StackTrace, TargetSite, and extended Source information.
    Note: The additional information is also displayed automatically if the compilation debug setting in
    web.config is set to true, or if a debugger is attached to the process, or if the request is from localhost.
  -->
  <add key="sage.platform.diagnostics.developmentContext-developerUserCodes" value="" />

  <!--
    Determines whether the current user (as identified by the Thread.CurrentPrincipal.Identity.Name)
    is excluded as a development user in the call to Sage.Platform.Diagnostics.ErrorHelper.IsDevelopmentUser().
    If the user is excluded the user will [not] see extended error information from AJAX errors. This allows
    a developer to experience what the user does when AJAX errors are handled in the call to
    Sage.Utility.ErrorHandler.handleHttpError() in Sage/Utility/ErrorHandler.js.
  -->
  <add key="sage.platform.diagnostics.developmentContext-nonDeveloperUserCodes" value="" />

  <!--
    Determines whether AJAX preemption error handling is enabled. The default value is true.
  -->
  <add key="sage.platform.diagnostics.ajaxPreemption-enabled" value="true" />

  <!--
    Determines whether AJAX preemption error handling can redirect HTTP requests that respond
    with a 575 status code to Login.aspx. The default value is true.
  -->
  <add key="sage.platform.diagnostics.ajaxPreemption-allowAuthRedirect" value="true" />

  <!--
    Determines the additional HTTP status codes that AJAX preemption error handling will handle and display
    an error message for. The default value for this setting is: 577,578,579,580,581,582
    • 577 - AjaxRoleAccessDeniedResponse (Sage.Platform.Security.RoleAccessDeniedException)
    • 578 - AjaxValidationResponse (Sage.Platform.Application.ValidationException)
    • 579 - AjaxUserObservableResponse (Sage.Platform.Security.UserObservableException)
    • 580 - AjaxHttpRequestValidationResponse (System.Web.HttpRequestValidationException)
    • 581 - AjaxStringOrBinaryDataWouldBeTruncatedResponse (System.Data.OleDb.OleDbException)
            • MSSQL: Used when the OleDbException.ErrorCode is DB_E_DATAOVERFLOW (0x80040E57).
            • Oracle: Used when the OleDbException.Message starts with "ORA-12899:".
    • 582 - AjaxAccessResponse (Sage.Platform.Application.AccessException)

    The following HTTP status codes are handled via other configuration settings:
    • 500 - sage.platform.diagnostics.ajaxPreemption-showInternalServerErrorMsg and
            sage.platform.diagnostics.ajaxPreemption-showUnhandledMessagingServiceExceptionMsg
    • 575 - sage.platform.diagnostics.ajaxPreemption-allowAuthRedirect
    • 576 - sage.platform.diagnostics.ajaxPreemption-showPreemptedErrorMsg
  -->
  <add key="sage.platform.diagnostics.ajaxPreemption-handledStatusCodes" value="577,578,579,580,581,582,584" />

  <!--
    Determines whether AJAX preemption error handling can display an error message for HTTP
    requests that respond with a 576 status code. The default value is false.
  -->
  <add key="sage.platform.diagnostics.ajaxPreemption-showPreemptedErrorMsg" value="false" />

  <!--
    Determines whether AJAX preemption error handling can display an error message for HTTP
    requests that respond with a 500 status code. The default value is false.
    Note: If the 500 status code is from Sage.Integration.Messaging.MessagingService see the
    sage.platform.diagnostics.ajaxPreemption-showUnhandledMessagingServiceExceptionMsg setting
    which overrides this setting.
  -->
  <add key="sage.platform.diagnostics.ajaxPreemption-showInternalServerErrorMsg" value="false" />

  <!--
    Determines whether AJAX preemption error handling can display an error message for HTTP requests processed by
    Sage.Integration.Messaging.MessagingService that respond with a 500 status code. The default value is true.
  -->
  <add key="sage.platform.diagnostics.ajaxPreemption-showUnhandledMessagingServiceExceptionMsg" value="true" />

  <!--
    Determines whether a trapped Exception of the type ValidationException, RoleAccessDeniedException, or
    UserObservableException should always be logged when handled by Sage.Platform.Diagnostics.ErrorHelper
    and the SLXEventLogAppender.
  -->
  <add key="sage.platform.diagnostics.errorHelper-alwaysLogExceptions" value="true" />

  <!--
    Determines whether an Exception message, as handled by Sage.Platform.Diagnostics.ErrorHelper, should always publish
    the original Exception message (for base exceptions) instead of the "We're sorry, you've encountered an error."
    error message.
  -->
  <add key="sage.platform.diagnostics.errorHelper-alwaysShowExceptionMsg" value="false" />

  <!--
    Determines whether a Sage.Platform.Security.RoleAccessDeniedException displays extended exception
    information (StackTrace, etc.) to the user (when applicable). This may be useful in a development
    scenario. The default value is false.
  -->
  <add key="sage.platform.diagnostics.errorHelper-showExtendedExceptionInfo-roleAccessDeniedException" value="false" />

  <!--
    Determines whether a Sage.Platform.Application.ValidationException displays extended exception
    information (StackTrace, etc.) to the user (when applicable). This may be useful in a development
    scenario. The default value is false.
  -->
  <add key="sage.platform.diagnostics.errorHelper-showExtendedExceptionInfo-validationException" value="false" />

  <!--
    Determines how much logging information is recorded in the Application event log when the
    Saleslogix Error Id is recorded along with exception details.

    0 = General. Best when log file size is a consideration.

    Includes: slxErrorId, mitigation, date, utc, message, source, type, stackTrace, targetSite, hashCode, pid, identity.name,
    identity.isAuthenticated, identity.authenticationType, request.looksLikeAjax, request.isLocal, request.method,
    request.url, request.referrer and other exception details for specific exceptions types (e.g. oledbException,
    webException, httpException, etc.).

    1 = Detailed.

    Includes: All of the above plus request.ipAddress, request.userAgent, request.userLanguages, browser.type,
    browser.name, browser.version, browser.majorVersion, browser.minorVersion, browser.platform, server.machineName,
    server.commandLine, server.versionString, server.is64BitOperatingSystem, host.siteName, host.applicationPhysicalPath,
    host.applicationVirtualPath, host.isDebuggingEnabled, host.isHosted, host.maxConcurrentRequestsPerCPU,
    host.maxConcurrentThreadsPerCPU, host.applicationId, logonUser.name, logonUser.authenticationType,
    logonUser.impersonationLevel, logonUser.isAnonymous, logonUser.isGuest, and logonUser.isSystem.

    2 = Verbose. Best for capturing details to be sent to Sage for analysis along with crash dumps (if applicable).

    Includes: All of the above plus process.sessionId, process.fileName, process.fileVersion,
    process.productVersion, process.basePriority, process.priorityClass, times.startTime, times.upTime,
    times.privilegedProcessorTime, times.totalProcessorTime, times.userProcessorTime, memory.maxWorkingSet,
    memory.minWorkingSet, memory.workingSet64, memory.peakWorkingSet64, memory.nonpagedSystemMemorySize64,
    memory.pagedMemorySize64, memory.pagedSystemMemorySize64, memory.peakPagedMemorySize64, memory.peakVirtualMemorySize64,
    memory.privateMemorySize64, memory.virtualMemorySize64, and memory.managedMemorySize.
  -->
  <add key="sage.platform.diagnostics.errorHelper-logLevel" value="1" />

  <!--
    Determines whether or not authentication failures that result in a redirect to Login.aspx (or Shutdown.axd) are logged.
    The default value is true if this setting is undefined.
  -->
  <add key="sage.platform.diagnostics.errorHelper-logAuthenticationRedirects" value="true" />

  <!--
    Determines the shutdown URL used during authentication redirects when Windows Authentication is enabled.
  -->
  <add key="sage.platform.diagnostics.errorHelper-shutdownUrl" value="Shutdown.axd" />
  <!--
    Determines whether or not the ReturnUrl query string is appended to an authentication login redirect. The default value is
    true if this setting is undefined.
  -->
  <add key="sage.platform.diagnostics.errorHelper-useAuthRedirectReturnUrl" value="true"/>
  <!--
    Determines if the usage of groups is tracked and stored in the GroupStats table. The default value is true if this setting is undefined.
  -->
  <add key="sage.saleslogix.client.groupbuilder.trackGroupUsage" value="true" />

  <!--
    Determines the number of seconds to cache the group filter results (e.g. range filter results). Valid values are 0 to 60.
    A value of 0 will effectively disable the cache. The default value is 30.
  -->
  <add key="sage.saleslogix.client.groupbuilder.adapter.basedataminer.cachedResultTimeout" value="30" />

  <!--
    Determines the number of seconds to cache the group count. Valid values are 0 to 60.
    A value of 0 will effectively disable the cache. The default value is 30.
  -->
  <add key="sage.saleslogix.client.groupbuilder.cachedCountTimeout" value="30" />

  <!--
    Defines the fail-safe log folder for storing logging information from SLXEventLogAppender that is too large to log to the application event log.
    If this value is undefined and the portal includes an App_Data folder, the fail-safe log folder (i.e. fslog) will be created as a subfolder of
    the App_Data folder. If the App_Data folder is undefined for a portal the fslog folder will be created as a subfolder of the root (e.g. PortalName\fslog).
  -->
  <add key="sage.saleslogix.web.slxeventlogappender.failSafeLogFolder" value="" />

  <!--
    Defines the settings for sending email
       mailHost: the server that will be used to send mail
       mailPort: the port for sending mail
       credentialUser: the user who's credentials will be used to sent the email (Example:John.Smith@infor.com or SalesLogix@infor.com)
       credentialPassword: the password of the 'credentialUser'
       fromEmailAddress: the email address of the user who will be used to send the email (Example: John.Smith@infor.com or SalesLogix@infor.com)
       fromName: the name you want displayed as the name the email came from (Example: John Smith or Saleslogix Customer Service)
  -->
  <add key="saleslogix.web.mailHost" value="" />
  <add key="saleslogix.web.mailPort" value="" />
  <add key="saleslogix.web.enableSsl" value="" />
  <add key="saleslogix.web.credentialUser" value="" />
  <add key="saleslogix.web.credentialPassword" value="" />
  <add key="saleslogix.web.fromEmailAddress" value="" />
  <add key="saleslogix.web.fromName" value="" />

  <!--
    Defines whether the 'Forgot My Username' and 'Forgot My Password' features are available
  -->
  <add key="saleslogix.web.forgotUserNameFeature" value="false" />
  <add key="saleslogix.web.forgotPasswordFeature" value="false" />

  <!--
    Defines whether the 'Password Change Confirmation' email will be sent
  -->
  <add key="saleslogix.web.sendPasswordResetEmail" value="false" />

  <!--
    Defines how many hours before the password reset link will expire
  -->
  <add key="saleslogix.web.passwordResetTokenExpiration" value="12" />

  <!--
    Defines whether audit logging is turned on
  -->
  <add key="saleslogix.web.auditLogEnabled" value="true" />

  <!--
    The fully qualified path and file name for windowsZones.xml from Unicode.org that will override the built-in version included in Sage.Platform and
    loaded by Sage.Platform.WindowsZones (i.e. Sage.Platform.Properties.Resources.windowsZones). The windowsZones.xml is used to map an IANA (Olson)
    time zone ID to a Microsoft Windows time zone ID. The latest windowsZones.xml is available from the Unicode CLDR Project‎ at http://cldr.unicode.org/index/downloads
    and is included in core.zip (e.g. http://unicode.org/Public/cldr/27.0.1/core.zip) in the common\supplemental folder. The trunk version, without
    the revision number or generation date, can be found at http://unicode.org/repos/cldr/trunk/common/supplemental/windowsZones.xml.
  -->
  <add key="sage.platform.windowsZones.source" value="" />

  <!--
    The fully qualified path and file name for the data file (JSON) containing the simple substring time zone information that will override the built-in version included
    in Sage.Platform and loaded by Sage.Platform.Utility.TimeZoneHelper (i.e. Sage.Platform.Properties.Resources.SimpleSubstringIdentifiers). The substring information
    consists of the contents of the string representation of a JavaScript Date (e.g. new Date().toString();) that exists between the parentheses of the string value
    (e.g. "Datumsgrenze Normalzeit" for "Tue Jun 30 2015 00:00:02 GMT-1200 (Datumsgrenze Normalzeit)"). Note that this additional time zone information is not available
    for all time zones, OS languages, or browsers; when the information is available and it is unique to all other substrings it may be used to help differentiate suspect
    time zones (i.e. usually time zones that all share the same daylight time and standard time rules). The following OS languages are currently handled: English, French,
    German, Russian, Italian, Portuguese (Brazil), Chinese (Simplified), and Chinese (Traditional).
  -->
  <add key="sage.platform.utility.timeZoneHelper.simpleSubstringInfos" value="" />

  <!--
    The fully qualified path and file name for the data file (JSON) containing the suspect time zone information that will override the built-in version included
    in Sage.Platform and loaded by Sage.Platform.Utility.TimeZoneHelper (i.e. Sage.Platform.Properties.Resources.SuspectTimeZones). The suspect time zone information
    includes the suspect IANA (Olson) time zone identifiers and a collection of Windows time zones associated with each. The "suspect" time zones are generally those
    that share the same daylight time and standard time rules that can only be differentiated using the substring time zone information (i.e.
    Sage.Platform.Properties.Resources.SimpleSubstringIdentifiers).
  -->
  <add key="sage.platform.utility.timeZoneHelper.suspectTimeZones" value="" />

  <!--
    The settings required to validate the SSO tenant and identify the user.
       tenantId: The tenant ID.
       tenantClaimName: The name of the claims attribute that identifies the tenant.
       identityClaimName: The name of the claims attribute that identifies the user.
  -->
  <add key="sage.saleslogix.web.sso.tenantId" value="" />
  <add key="sage.saleslogix.web.sso.tenantClaimName" value="http://schemas.infor.com/claims/Tenant" />
  <add key="sage.saleslogix.web.sso.identityClaimName" value="http://schemas.infor.com/claims/Identity2" />

  <add key="sage.saleslogix.web.sso.securityTokenServiceEndpoint" value=""/>
  <add key="sage.saleslogix.web.sso.requestSecurityTokenAppliesTo" value=""/>
  
  <!--
    The settings required to federate with a SAML based identity provider.
       identityProviderUrl: The URL of the identity provider.
       issuerUrl: The entity ID of this service provider.
  -->
  <add key="sage.saleslogix.web.saml.identityProviderUrl" value="" />
  <add key="sage.saleslogix.web.saml.issuerUrl" value="" />
  <!--
    The client certificate used to sign the SAML request.
    See https://msdn.microsoft.com/en-us/library/ms576346.aspx for more information on these values.
  -->
  <add key="sage.saleslogix.web.saml.clientCertStoreLocation" value="CurrentUser" />
  <add key="sage.saleslogix.web.saml.clientCertStoreName" value="My" />
  <add key="sage.saleslogix.web.saml.clientCertFindType" value="FindBySubjectName" />
  <add key="sage.saleslogix.web.saml.clientCertFindValue" value="" />
  <add key="sage.saleslogix.web.saml.clientCertData" value="" />
  <!--
    The server certificate used to validate the SAML response signature.
  -->
  <add key="sage.saleslogix.web.saml.serverCertStoreLocation" value="CurrentUser" />
  <add key="sage.saleslogix.web.saml.serverCertStoreName" value="My" />
  <add key="sage.saleslogix.web.saml.serverCertFindType" value="FindBySubjectName" />
  <add key="sage.saleslogix.web.saml.serverCertFindValue" value="" />
  <add key="sage.saleslogix.web.saml.serverCertData" value="" />
  <!--
    Determines whether or not the ReportCache folder (e.g. storeFolderName) can be purged by the portal when the ReportCache is initialized[1].
    Purging removes invalid Crystal Reports documents and metadata from the ReportCache (i.e. reports that do not have an identical Plugin.Id in the database).
    The default value is "true" if this setting is undefined or empty.
    [1] Note: The ReportCache is initialized once during the lifetime of an application pool instance.
  -->
  <add key="saleslogix.reporting.reportCache.canPurge" value="true" />
  <!--
    Defines the maximum number of retries the ReportCache will attempt file operations (e.g. create, copy, delete, etc.) if there is a failure.
    The default value is "5" if this setting is undefined or empty. Valid values are 0 to 10.
  -->
  <add key="saleslogix.reporting.reportCache.maxFileRetryCount" value="5" />
  <!--
    Defines the maximum number of milliseconds between reattempted file operations (e.g. create, copy, delete, etc.) if there is a failure.
    The default value is "750" (i.e. 3/4 second) if this setting is undefined or empty. Valid values are 0 to 2000 (i.e. 2 seconds).
  -->
  <add key="saleslogix.reporting.reportCache.maxFileRetryWait" value="750" />
  <!--
    Defines the fully qualified path where Crystal Reports documents and report metadata are stored for the ReportCache.
    The default value is one of the following if this setting is undefined or empty; it will be suffixed by \ReportCache\%SystemInfo.SiteCode%:
      A. The PathManager CachePath (e.g. %ALLUSERSPROFILE%\Application Data\SalesLogix\Cache).
      B. The %TEMP% folder if the PathManager CachePath cannot be created.
    Important: The application pool or service account user must have full control of this location.
  -->
  <add key="saleslogix.reporting.reportCache.storeFolderName" value="" />
  
  <add key="MingleLogicalID" value=""/>
  <add key="sage.saleslogix.web.ionapi.enabled" value="false"/>
  <add key="sage.saleslogix.web.ionapi.mingleApiEndpoint" value=""/>
  <add key="sage.saleslogix.web.ionapi.requestSecurityTokenLocalTokenType" value="oauth-v2:access:token:response|via|urn:ietf:params:oauth:grant-type:saml2-bearer"/>
  <add key="sage.saleslogix.web.ionapi.rootCrmApiEndpoint" value=""/>
  <add key="sage.saleslogix.web.mingle.lastActivityCookieDomain" value=""/>
  <add key="sage.saleslogix.web.mingle.lastActivityCookieName" value=""/>
  <!--
    A complete list of currency symbols delimited by pipe character.   
  -->
  <add key="currencySymbolObj" value="₽|₺|₼|₾|₹|$|$b|$U|£|¤|¥|₭|₩|₮|€|฿|₡|৳|៛|؋|₴|₪|₫|B/.|Br|Bs. F.|BZ$|C$|CHF|Din.|DZD|ETB|fr.|Fr.|Ft|Gs|HK$|J$|Kč|KM|kn|kr|kr.|L.|lei|Lek|m.|MOP|N|NT$|Php|PhP|Q|R|R$|RD$|RM|Rp|Rs|RWF|S|S/.|so'm|TT$|XOF|Z$|zł|ден.|Дин.|КМ|лв.|сом|сўм|Т|т.р.|դր.|ج.م.‏|د.ا.‏|د.إ.‏|د.ب.‏|د.ت.‏|د.ج.‏|د.ع.‏|د.ك.‏|د.ل.‏|د.م.‏|ر.س.‏|ر.ع.‏|ر.ق.‏|ر.ي.‏|ريال|ل.س.‏|ل.ل.‏|ރ.|रु|රු." />  
</appSettings>