<?xml version="1.0" encoding="utf-8"?>
<QuickFormDefinition Id="e52afb5c-d93e-4b32-a526-7eb70be99544" name="ReturnProductsGrid">
  <Properties>
    <Property name="EntityTypeName" type="System.String">ISalesOrder</Property>
    <Property name="DefaultNamespace" type="System.String">Sage.Entity.Interfaces</Property>
    <Property name="AssemblyName" type="System.String">Sage.Entity.Interfaces</Property>
    <Property name="UseEntityNameAsTitle" type="System.Boolean">True</Property>
    <Property name="ImagePath" type="System.String"></Property>
    <Property name="DefinitionType" type="System.String">Sage.Platform.QuickForms.QuickFormMainDetailViewDefinition, Sage.Platform.QuickForms</Property>
    <Property name="Columns" type="System.ComponentModel.BindingList`1[[System.Windows.Forms.ColumnStyle, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]], System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"><ArrayOfColumnStyle xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><ColumnStyle><SizeType>Percent</SizeType><Width>100</Width></ColumnStyle></ArrayOfColumnStyle></Property>
    <Property name="Rows" type="System.ComponentModel.BindingList`1[[System.Windows.Forms.RowStyle, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]], System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"><ArrayOfRowStyle xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><RowStyle><SizeType>Absolute</SizeType><Height>35</Height></RowStyle><RowStyle><SizeType>Absolute</SizeType><Height>35</Height></RowStyle></ArrayOfRowStyle></Property>
    <Property name="GeneratePrintView" type="System.Boolean">False</Property>
    <Property name="Description" type="System.String"></Property>
    <Property name="ActiveControl" type="System.String"></Property>
  </Properties>
  <LoadActions />
  <QuickFormElements>
    <QuickFormElement>
      <Properties>
        <Property name="EntityMappingType" type="System.String">None</Property>
      </Properties>
      <ControlDefinition>
        <Properties>
          <Property name="Control" type="Sage.SalesLogix.QuickForms.QFControls.SDataGrid.QFSDataGrid, Sage.SalesLogix.QuickForms.QFControls"><QFSDataGrid xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><Column>0</Column><Row>0</Row><IsReadOnly>false</IsReadOnly><HotKey>0</HotKey><TabIndex>0</TabIndex><ControlId>grdReturnProducts</ControlId><DataBindings /><ControlLabelPlacement>left</ControlLabelPlacement><CaptionAlignment>left</CaptionAlignment><StyleScheme /><GenerateMember>false</GenerateMember><ReadOnlyCondition>False</ReadOnlyCondition><AppliedSecurity /><RelateToPropertyName>SalesOrderItems</RelateToPropertyName><ResourceKind><Name>salesOrderItems</Name><GetPredicate /></ResourceKind><PathSegments /><Columns><QFSDataEditCol><StyleScheme /><DataField /><ColumnId>7bda5b32-431f-4165-b33b-68bdf4d2d392</ColumnId><HorizontalAlignment>left</HorizontalAlignment><HeaderAlignment>left</HeaderAlignment><IsSortable>false</IsSortable><MultiCurrencyDependent>false</MultiCurrencyDependent><DialogSpecs><SmartPart>EditSalesOrderItem</SmartPart><Height>400</Height><Width>600</Width><Top>0</Top><Left>0</Left><EntityType>SalesOrderItem</EntityType><ResourceKey>933eef96-011a-422e-8236-c30bb686a3a6</ResourceKey><CenterDialog>True</CenterDialog></DialogSpecs><AppliedSecurity /><HideCondition /><Width>3</Width></QFSDataEditCol><QFSDataNumericCol><StyleScheme /><DataField>LineNumber</DataField><ColumnId>a465fde5-63b4-473b-88ba-9320a0f20c6a</ColumnId><HorizontalAlignment>left</HorizontalAlignment><HeaderAlignment>left</HeaderAlignment><IsSortable>true</IsSortable><SortField>LineNumber</SortField><MultiCurrencyDependent>false</MultiCurrencyDependent><IsEditable>false</IsEditable><HideCondition /><Width>3</Width><DecimalDigits><Strict>false</Strict></DecimalDigits><FormatType>Number</FormatType></QFSDataNumericCol><QFEditableCol><StyleScheme /><DataField>UPC</DataField><ColumnId>cc846175-adbc-4f2e-be19-b4140fd36d74</ColumnId><HorizontalAlignment>left</HorizontalAlignment><HeaderAlignment>left</HeaderAlignment><IsSortable>true</IsSortable><SortField>UPC</SortField><MultiCurrencyDependent>false</MultiCurrencyDependent><IsEditable>false</IsEditable><HideCondition /><Width>8</Width></QFEditableCol><QFEditableCol><StyleScheme /><DataField>ActualID</DataField><ColumnId>1c424c34-d254-49cc-b418-155fd3cdd681</ColumnId><HorizontalAlignment>left</HorizontalAlignment><HeaderAlignment>left</HeaderAlignment><IsSortable>true</IsSortable><SortField>ActualID</SortField><MultiCurrencyDependent>false</MultiCurrencyDependent><IsEditable>false</IsEditable><HideCondition /><Width>8</Width></QFEditableCol><QFEditableCol><StyleScheme /><DataField>Description</DataField><ColumnId>3315ed5b-9392-44ef-89f9-2e374911890c</ColumnId><HorizontalAlignment>left</HorizontalAlignment><HeaderAlignment>left</HeaderAlignment><IsSortable>false</IsSortable><SortField>Description</SortField><MultiCurrencyDependent>false</MultiCurrencyDependent><IsEditable>false</IsEditable><HideCondition /><Width>25</Width></QFEditableCol><QFEditableCol><StyleScheme /><DataField>Quantity</DataField><ColumnId>7b222066-d55f-4ac0-ad43-9c2e0064b382</ColumnId><HorizontalAlignment>left</HorizontalAlignment><HeaderAlignment>left</HeaderAlignment><IsSortable>true</IsSortable><SortField>Quantity</SortField><MultiCurrencyDependent>false</MultiCurrencyDependent><IsEditable>true</IsEditable><HideCondition /><Width>4</Width></QFEditableCol><QFSDataCurrencyCol><StyleScheme /><DataField>Price</DataField><ColumnId>3ff7ace1-0818-472e-a765-9a7b2c784199</ColumnId><HorizontalAlignment>left</HorizontalAlignment><HeaderAlignment>left</HeaderAlignment><IsSortable>true</IsSortable><SortField>Price</SortField><MultiCurrencyDependent>false</MultiCurrencyDependent><IsEditable>false</IsEditable><HideCondition /><Width>4</Width><CurrentCode /><ExchangeRate /><ExchangeRateType>BaseRate</ExchangeRateType><DecimalDigits>-1</DecimalDigits></QFSDataCurrencyCol><QFSDataNumericCol><StyleScheme /><DataField>Discount</DataField><ColumnId>6bc3c27a-8585-4bec-b813-4fb79bbaff57</ColumnId><HorizontalAlignment>left</HorizontalAlignment><HeaderAlignment>left</HeaderAlignment><IsSortable>true</IsSortable><SortField>Discount</SortField><MultiCurrencyDependent>false</MultiCurrencyDependent><IsEditable>false</IsEditable><HideCondition /><Width>4</Width><DecimalDigits><Strict>false</Strict></DecimalDigits><FormatType>Percent</FormatType></QFSDataNumericCol><QFSDataCurrencyCol><StyleScheme /><DataField>OrigProductPrice</DataField><ColumnId>bf6f89c5-351d-49cd-8fc0-1816afba60f0</ColumnId><HorizontalAlignment>left</HorizontalAlignment><HeaderAlignment>left</HeaderAlignment><IsSortable>true</IsSortable><SortField>OrigProductPrice</SortField><MultiCurrencyDependent>false</MultiCurrencyDependent><IsEditable>false</IsEditable><HideCondition /><Width>4</Width><CurrentCode /><ExchangeRate /><ExchangeRateType>BaseRate</ExchangeRateType><DecimalDigits>-1</DecimalDigits></QFSDataCurrencyCol><QFSDataNumericCol><StyleScheme /><DataField>OrigProductDiscount</DataField><ColumnId>2f17bdc1-efcb-4966-b6e9-57515d172144</ColumnId><HorizontalAlignment>left</HorizontalAlignment><HeaderAlignment>left</HeaderAlignment><IsSortable>true</IsSortable><SortField>OrigProductDiscount</SortField><MultiCurrencyDependent>false</MultiCurrencyDependent><IsEditable>false</IsEditable><HideCondition /><Width>4</Width><DecimalDigits><Strict>false</Strict></DecimalDigits><FormatType>Percent</FormatType></QFSDataNumericCol><QFSDataCurrencyCol><StyleScheme /><DataField>CalculatedPrice</DataField><ColumnId>325202b9-8f57-4c40-8a3b-cec6d458ce5b</ColumnId><HorizontalAlignment>left</HorizontalAlignment><HeaderAlignment>left</HeaderAlignment><IsSortable>true</IsSortable><SortField>CalculatedPrice</SortField><MultiCurrencyDependent>false</MultiCurrencyDependent><IsEditable>false</IsEditable><HideCondition /><Width>4</Width><CurrentCode /><ExchangeRate /><ExchangeRateType>BaseRate</ExchangeRateType><DecimalDigits>-1</DecimalDigits></QFSDataCurrencyCol><QFSDataCurrencyCol><StyleScheme /><DataField>ExtendedPrice</DataField><ColumnId>e1f047a6-fbcc-4e72-9eac-7a3f94469c82</ColumnId><HorizontalAlignment>left</HorizontalAlignment><HeaderAlignment>left</HeaderAlignment><IsSortable>true</IsSortable><SortField>ExtendedPrice</SortField><MultiCurrencyDependent>false</MultiCurrencyDependent><IsEditable>false</IsEditable><HideCondition /><Width>4</Width><CurrentCode /><ExchangeRate /><ExchangeRateType>BaseRate</ExchangeRateType><DecimalDigits>-1</DecimalDigits></QFSDataCurrencyCol><QFEditableCol><StyleScheme /><DataField>Product.WarehouseID</DataField><ColumnId>9982ebaa-3fb8-4886-aead-6a022ba56422</ColumnId><HorizontalAlignment>left</HorizontalAlignment><HeaderAlignment>left</HeaderAlignment><IsSortable>true</IsSortable><SortField>Product.WarehouseID</SortField><MultiCurrencyDependent>false</MultiCurrencyDependent><IsEditable>false</IsEditable><HideCondition /><Width>-1</Width></QFEditableCol></Columns><ConditionalWhere>function() { return 'SalesOrder.Id eq "' + Sage.Utility.getCurrentEntityId() + '"'; }</ConditionalWhere><Select><string>Id</string><string>Product.Id</string><string>SalesOrder.CurrencyCode</string><string>SalesOrder.OperatingCompany.Id</string><string>SalesOrder.SlxPriceList.Id</string></Select><Include><string>SalesOrder</string></Include><FeedCategory>InternalAppEntities</FeedCategory><OnGetMappingId /><ParentRelationshipPropertyName>SalesOrder</ParentRelationshipPropertyName><ChildRelationshipPropertyName>Product</ChildRelationshipPropertyName><OnDataChange>function (entity, attribute, oldValue, newValue) {
    if (oldValue === newValue) {
        return;
    }
    if (attribute === 'Discount') {
        entity.CalculatedPrice = entity.Price - (entity.Price * entity.Discount);
    } else if (attribute === 'CalculatedPrice') {
      var calculated = 0;
      if (entity.Price &gt; 0) {
          calculated = (entity.Price - entity.CalculatedPrice) / entity.Price;
      }
      entity.Discount = Math.round(calculated * 10000) / 10000;
    }
    if ((attribute === 'Discount') || (attribute === 'CalculatedPrice') || (attribute === 'Quantity')) {
        //entity.ExtendedPrice = entity.CalculatedPrice * entity.Quantity;
        //entity.ExtendedPrice = (entity.Price - (entity.Price * entity.Discount)) * entity.Quantity;
	entity.ExtendedPrice = ((entity.OrigProductPrice - (entity.OrigProductPrice * entity.OrigProductDiscount)) - (entity.Price - (entity.Price * entity.Discount))) * entity.Quantity;
    }
    if (attribute === 'Program') {
        if (!entity.Product || typeof entity.Product.$key === 'undefined') {
            /* Custom product (FreeText). */
            entity.Program = null;          
            return;
        }
        var sUrl = String.format("slxdata.ashx/slx/dynamic/-/productPrograms?select=Price&amp;where=Product.Id eq '{0}' and Program eq '{1}'&amp;format=json&amp;_t={2}",
                    entity.Product.$key, newValue, new Date().getTime().toString());
        $.ajax({
            type: "GET",
            async: false,
            contentType: "application/json",
            url: sUrl,
            dataType: 'json',
            success: function (programPrice) {
                if (programPrice.$resources != null &amp;&amp; programPrice.$resources.length == 1) {
                    entity.Price = programPrice.$resources[0].Price;
                    entity.CalculatedPrice = entity.Price - (entity.Price * entity.Discount);
                    entity.ExtendedPrice = entity.CalculatedPrice * entity.Quantity;
                }
            },
            data: {},
            error: function (request, status, error) {
                var sError = String.format("There was an error opening {0}. StatusText: {1}; StatusCode: {2}.", sUrl, request.statusText, request.status);
                if (dojo.isString(request.responseText)) {
                    if ((request.responseText.indexOf("[", 0) == 0) &amp;&amp; (request.responseText.lastIndexOf("]") == request.responseText.length - 1)) {
                        var oSDataError = dojo.fromJson(request.responseText);
                        if (dojo.isArray(oSDataError)) {
                            sError = String.format("There was an error opening {0}. Severity: {1}; SDataCode: {2}; Message: {3}; ApplicationCode: {4}; StatusText: {5}; StatusCode: {6}.",
                                        sUrl, oSDataError[0].severity, oSDataError[0].sdataCode, oSDataError[0].message, oSDataError[0].applicationCode, request.statusText, request.status);
                        }
                    }
                }
                Ext.Msg.show({
                    title: "Sage SalesLogix",
                    msg: sError,
                    buttons: Ext.Msg.OK,
                    icon: Ext.MessageBox.ERROR
                });
            }
        })
    }
    if (attribute === 'UnitOfMeasure') {
        if (!isIntegrationContractEnabled()) return;
        if (!entity.Product) return;
        var sUrl = String.format("slxdata.ashx/slx/dynamic/-/slxPrices?select=Price,Currency&amp;where=UnitOfMeasure.Id eq '{0}' and AppId eq '{1}' and Product.Id eq '{2}' and SlxPriceList.Id eq '{3}' and ActiveFlag = true&amp;format=json&amp;_t={4}",
                        newValue.$key, entity.SalesOrder.OperatingCompany.$key, entity.Product.$key, entity.SalesOrder.SlxPriceList.$key, (new Date().getTime().toString()));
        $.ajax({
            type: "GET",
            async: false,
            contentType: "application/json",
            url: sUrl,
            dataType: 'json',
            success: function (slxPrice) {
                if (slxPrice.$resources != null &amp;&amp; slxPrice.$resources.length == 1) {
                    entity.Price = slxPrice.$resources[0].Price;
                    entity.CalculatedPrice = entity.Price - (entity.Price * entity.Discount);
                    entity.ExtendedPrice = entity.CalculatedPrice * entity.Quantity;
                }
                else {
                    entity.Price = 0;
                    entity.CalculatedPrice = 0;
                    entity.ExtendedPrice = 0;
                }
            },
            data: {},
            error: function (request, status, error) {
                var sError = String.format("There was an error opening {0}. StatusText: {1}; StatusCode: {2}.", sUrl, request.statusText, request.status);
                if (dojo.isString(request.responseText)) {
                    if ((request.responseText.indexOf("[", 0) == 0) &amp;&amp; (request.responseText.lastIndexOf("]") == request.responseText.length - 1)) {
                        var oSDataError = dojo.fromJson(request.responseText);
                        if (dojo.isArray(oSDataError)) {
                            sError = String.format("There was an error opening {0}. Severity: {1}; SDataCode: {2}; Message: {3}; ApplicationCode: {4}; StatusText: {5}; StatusCode: {6}.",
                                sUrl, oSDataError[0].severity, oSDataError[0].sdataCode, oSDataError[0].message, oSDataError[0].applicationCode, request.statusText, request.status);
                        }
                    }
                }
                Ext.Msg.show({
                    title: "Sage SalesLogix",
                    msg: sError,
                    buttons: Ext.Msg.OK,
                    icon: Ext.MessageBox.ERROR
                });
            } 
        })
    } 
}</OnDataChange><OnAdd /><Tools><SDataGridSaveTool><Name>Save</Name><Image>[Localization!Global_Images:Save_16x16]</Image><OnClick>function () { if (Sage.Utility.getModeId() !== 'insert') { __doPostBack('MainContent', ''); } }</OnClick><StyleScheme /><AppliedSecurity>Entities/SalesOrder/Edit</AppliedSecurity></SDataGridSaveTool><SDataGridCancelTool><Name>Cancel</Name><Image>[Localization!Global_Images:Reset_16x16]</Image><OnClick>//default Cancel behavior</OnClick><StyleScheme /><AppliedSecurity /></SDataGridCancelTool><SDataGridDeleteTool><Name>Delete</Name><Image>[Localization!Global_Images:Delete_16x16]</Image><OnClick>function () { if (Sage.Utility.getModeId() !== 'insert') { __doPostBack('MainContent', ''); } }</OnClick><StyleScheme /><AppliedSecurity>Entities/SalesOrder/Delete</AppliedSecurity></SDataGridDeleteTool></Tools></QFSDataGrid></Property>
        </Properties>
      </ControlDefinition>
    </QuickFormElement>
    <QuickFormElement>
      <Properties>
        <Property name="EntityMappingType" type="System.String">None</Property>
      </Properties>
      <ControlDefinition>
        <Properties>
          <Property name="Control" type="Sage.Platform.QuickForms.QFControls.QFDataSource, Sage.Platform.QuickForms.QFControls"><QFDataSource xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><Column>0</Column><Row>1</Row><IsReadOnly>false</IsReadOnly><Visible>false</Visible><HotKey>48</HotKey><TabIndex>0</TabIndex><ControlId>dsSalesOrderItems</ControlId><DataBindings /><ControlLabelPlacement>none</ControlLabelPlacement><CaptionAlignment>left</CaptionAlignment><StyleScheme /><EntityTypeName>SalesOrderItem</EntityTypeName><GetByMethod /><GetByProperty>SalesOrderItems</GetByProperty><UseSmartSelection>false</UseSmartSelection><DataOptional>false</DataOptional></QFDataSource></Property>
        </Properties>
      </ControlDefinition>
    </QuickFormElement>
  </QuickFormElements>
  <QuickFormToolElements>
    <QuickFormElement>
      <Properties>
        <Property name="EntityMappingType" type="System.String">None</Property>
      </Properties>
      <ControlDefinition>
        <Properties>
          <Property name="Control" type="Sage.Platform.QuickForms.Controls.QFElementSpacer, Sage.Platform.QuickForms"><QFElementSpacer xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><Column>0</Column><Row>0</Row><IsReadOnly>false</IsReadOnly><HotKey>0</HotKey><TabIndex>0</TabIndex><ControlId /><DataBindings /><ControlLabelPlacement>left</ControlLabelPlacement><CaptionAlignment>left</CaptionAlignment><StyleScheme /></QFElementSpacer></Property>
        </Properties>
      </ControlDefinition>
    </QuickFormElement>
    <QuickFormElement>
      <Properties>
        <Property name="EntityMappingType" type="System.String">None</Property>
      </Properties>
      <ControlDefinition>
        <Properties>
          <Property name="Control" type="Sage.Platform.QuickForms.Controls.QFElementSpacer, Sage.Platform.QuickForms"><QFElementSpacer xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><Column>0</Column><Row>0</Row><IsReadOnly>false</IsReadOnly><HotKey>0</HotKey><TabIndex>0</TabIndex><ControlId /><DataBindings /><ControlLabelPlacement>left</ControlLabelPlacement><CaptionAlignment>left</CaptionAlignment><StyleScheme /></QFElementSpacer></Property>
        </Properties>
      </ControlDefinition>
    </QuickFormElement>
    <QuickFormElement>
      <Properties>
        <Property name="EntityMappingType" type="System.String">None</Property>
      </Properties>
      <ControlDefinition>
        <Properties>
          <Property name="Control" type="Sage.Platform.QuickForms.Controls.QFButton, Sage.Platform.QuickForms"><QFButton xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><Column>0</Column><Row>0</Row><IsReadOnly>false</IsReadOnly><HotKey>0</HotKey><TabIndex>0</TabIndex><ControlId>cmdAddProduct</ControlId><DataBindings /><ControlLabelPlacement>none</ControlLabelPlacement><CaptionAlignment>left</CaptionAlignment><StyleScheme /><ButtonType>Icon</ButtonType><Image>[Localization!Global_Images:plus_16x16]</Image><OnClientClick /><OnClickAction><ResourceKey>cmdAddProduct</ResourceKey><RootActionName>CSharpSnippetAction</RootActionName><Action><CSharpCodeSnippet><![CDATA[    //Add Return Products
    Sage.Entity.Interfaces.ISalesOrderItem _entity = BindingSource.Current as Sage.Entity.Interfaces.ISalesOrderItem;
    if (_entity != null) {
        object _parent = GetParentEntity();
        if (DialogService.ChildInsertInfo != null) {
            if (_parent != null) {
                if (DialogService.ChildInsertInfo.ParentReferenceProperty != null) {
                    DialogService.ChildInsertInfo.ParentReferenceProperty.SetValue(_entity, _parent, null);
                }
            }
        }
    }
    
    
    if (DialogService != null)
{
  // InsertChildDialogActionItem
  DialogService.SetSpecs(400, 600, "AddReturnProducts", GetLocalResourceObject("c4ec7b6b-4bb4-43dc-89ef-13c430bbf9bd.DialogTitleOverride").ToString() );
  DialogService.EntityType = typeof(Sage.Entity.Interfaces.ISalesOrderItem); 
  DialogService.SetChildIsertInfo(
    typeof(Sage.Entity.Interfaces.ISalesOrderItem),
    typeof(Sage.Entity.Interfaces.ISalesOrder),
    typeof(Sage.Entity.Interfaces.ISalesOrderItem).GetProperty("SalesOrder"),
    typeof(Sage.Entity.Interfaces.ISalesOrder).GetProperty("SalesOrderItems"));
  DialogService.ShowDialog();
}
  //Sage.Platform.WebPortal.Services.IPanelRefreshService refresher = PageWorkItem.Services.Get<Sage.Platform.WebPortal.Services.IPanelRefreshService>();
  //  if (refresher != null) {
  //    refresher.RefreshAll();
  //  }
  //  else {  
  //    Response.Redirect(Request.Url.ToString());
  //  }]]></CSharpCodeSnippet></Action><IsDialogCloseAction>False</IsDialogCloseAction><RunOnEveryRePaint>False</RunOnEveryRePaint><DialogActionResult>NoResult</DialogActionResult><PerformsUpdate>True</PerformsUpdate><AppliedSecurity>ENTITIES/SALESORDER/ADD</AppliedSecurity><RefreshData>True</RefreshData></OnClickAction></QFButton></Property>
        </Properties>
      </ControlDefinition>
    </QuickFormElement>
  </QuickFormToolElements>
</QuickFormDefinition>