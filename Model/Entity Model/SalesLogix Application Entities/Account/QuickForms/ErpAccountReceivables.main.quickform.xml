<?xml version="1.0"?>
<QuickForm xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" id="33c2d3a5-f0b9-4363-b3e8-f28e33324000" DefinitionType="Sage.Platform.QuickForms.QuickFormMainDetailViewDefinition, Sage.Platform.QuickForms" lastModifiedUtc="2017-07-19T09:59:34.2166137Z">
  <ActiveControl />
  <ImagePath />
  <LoadActions>
    <FormActionDefinition>
      <ResourceKey>47834a47-07dd-4c00-8bec-9168e21cdaf0</ResourceKey>
      <Action typeName="Sage.Platform.QuickForms.ActionItems.CSharpSnippetActionItem, Sage.Platform.QuickForms">
        <CSharpSnippetActionItem>
          <MethodName>quickformload0</MethodName>
          <CSharpCodeSnippet>var clientContextService = PageWorkItem.Services.Get&lt;Sage.Platform.SData.IAppIdMappingService&gt;();
if(clientContextService!=null &amp;&amp; clientContextService.IsMasterDataConsolidationEnabled())
{
	var mapping = BindingSource.Current as IAccount;
	cboAccountingEntity.Items.Clear(); 
	cboAccountingEntity.Items.Add(new ListItem { Text = "", Value = "" });
	if(mapping!=null &amp;&amp; mapping.AccountAccountingEntities.Count&gt;0) 
	{
		foreach (Sage.Entity.Interfaces.IAccountAccountingEntity item in mapping.AccountAccountingEntities) 
		{
			if (item.BackOfficeAcctEntity!=null &amp;&amp; !cboAccountingEntity.Items.Contains(new ListItem { Text = item.BackOfficeAcctEntity.AcctEntityExtId, Value = item.BackOfficeAcctEntity.AcctEntityExtId }))
			{
				cboAccountingEntity.Items.Add(new ListItem { Text = item.BackOfficeAcctEntity.AcctEntityExtId, Value = item.BackOfficeAcctEntity.AcctEntityExtId });
			}
		}		     
	}
}
pklStatus.PickListValue = string.Empty;
cboAccountingEntity.SelectedValue = string.Empty;
var clientContextServiceFilter = PageWorkItem.Services.Get&lt;Sage.Platform.WebPortal.Services.ClientContextService&gt;();
if (clientContextServiceFilter == null)
    return;

if (clientContextServiceFilter.CurrentContext.ContainsKey("Filter"))
{
    clientContextServiceFilter.CurrentContext.Remove("Filter");
}
</CSharpCodeSnippet>
        </CSharpSnippetActionItem>
      </Action>
      <IsDialogCloseAction>False</IsDialogCloseAction>
      <RunOnEveryRePaint>False</RunOnEveryRePaint>
      <DialogActionResult>NoResult</DialogActionResult>
      <PerformsUpdate>False</PerformsUpdate>
      <AppliedSecurity />
      <RefreshData>False</RefreshData>
    </FormActionDefinition>
  </LoadActions>
  <Name>ErpAccountReceivables</Name>
  <ClientScriptIncludes />
  <ClientResourceKeys />
  <ExtendedProperties />
  <HelpFile />
  <ReadOnly>false</ReadOnly>
  <GeneratePrintView>false</GeneratePrintView>
  <Controls>
    <Control typeName="Sage.Platform.QuickForms.QFControls.QFListBox, Sage.Platform.QuickForms.QFControls">
      <QFListBox>
        <Column>0</Column>
        <Row>0</Row>
        <Visible>false</Visible>
        <HotKey>0</HotKey>
        <TabIndex>0</TabIndex>
        <ControlId>cboAccountingEntity</ControlId>
        <DataBindings />
        <ControlLabelPlacement>left</ControlLabelPlacement>
        <ExtendedProperties />
        <CaptionAlignment>left</CaptionAlignment>
        <StyleScheme />
        <SelectedIndex>-1</SelectedIndex>
        <Items />
        <OnChangeAction>
          <ResourceKey>cboAccountingEntity</ResourceKey>
          <Action typeName="Sage.Platform.QuickForms.ActionItems.NoActionActionItem, Sage.Platform.QuickForms">
            <NoActionActionItem>
              <MethodName />
            </NoActionActionItem>
          </Action>
          <IsDialogCloseAction>False</IsDialogCloseAction>
          <RunOnEveryRePaint>False</RunOnEveryRePaint>
          <DialogActionResult>NoResult</DialogActionResult>
          <PerformsUpdate>False</PerformsUpdate>
          <AppliedSecurity />
          <RefreshData>False</RefreshData>
        </OnChangeAction>
        <DataSource />
        <TextField />
        <ValueField />
        <MultiSelect>false</MultiSelect>
        <MaxHeight>200</MaxHeight>
      </QFListBox>
    </Control>
    <Control typeName="Sage.SalesLogix.QuickForms.QFControls.SDataGrid.QFSDataGrid, Sage.SalesLogix.QuickForms.QFControls">
      <QFSDataGrid>
        <ColumnSpan>3</ColumnSpan>
        <Column>0</Column>
        <Row>1</Row>
        <HotKey>0</HotKey>
        <TabIndex>0</TabIndex>
        <ControlId>grdReceivables</ControlId>
        <DataBindings />
        <ControlLabelPlacement>left</ControlLabelPlacement>
        <ExtendedProperties />
        <CaptionAlignment>left</CaptionAlignment>
        <StyleScheme />
        <GenerateMember>false</GenerateMember>
        <ReadOnlyCondition>False</ReadOnlyCondition>
        <AppliedSecurity />
        <RelateToPropertyName />
        <PreviewField />
        <ResourceKind>
          <Name>erpReceivables</Name>
          <GetPredicate />
        </ResourceKind>
        <PathSegments />
        <Columns>
          <QFSDataLinkCol>
            <StyleScheme />
            <DataField>ErpExtId</DataField>
            <ColumnId>d7dc069d-081f-4cb5-a0b9-614447dd4b93</ColumnId>
            <HorizontalAlignment>left</HorizontalAlignment>
            <HeaderAlignment>left</HeaderAlignment>
            <SortDirection>None</SortDirection>
            <IsSortable>true</IsSortable>
            <SortField>ReceivableNumber</SortField>
            <MultiCurrencyDependent>false</MultiCurrencyDependent>
            <Destination />
            <Image />
            <EntityIdField>Id</EntityIdField>
            <EntityTypeName>ERPReceivable</EntityTypeName>
            <Target />
            <AppliedSecurity />
            <HideCondition />
            <Width>-1</Width>
          </QFSDataLinkCol>
          <QFEditableCol>
            <StyleScheme />
            <DataField>ErpAccountingEntityId</DataField>
            <ColumnId>e27a4642-83b7-4db5-96d8-52532d00276a</ColumnId>
            <HorizontalAlignment>left</HorizontalAlignment>
            <HeaderAlignment>left</HeaderAlignment>
            <SortDirection>None</SortDirection>
            <IsSortable>false</IsSortable>
            <MultiCurrencyDependent>false</MultiCurrencyDependent>
            <IsEditable>False</IsEditable>
            <HideCondition />
            <Width>-1</Width>
            <CustomFormatter />
            <AbbreviationLength>0</AbbreviationLength>
          </QFEditableCol>
          <QFSDataPickListCol>
            <StyleScheme />
            <DataField>ErpStatus</DataField>
            <ColumnId>aa49dfb4-e09a-474d-a0d2-c45c53568493</ColumnId>
            <HorizontalAlignment>left</HorizontalAlignment>
            <HeaderAlignment>left</HeaderAlignment>
            <SortDirection>None</SortDirection>
            <IsSortable>true</IsSortable>
            <SortField>ErpStatus</SortField>
            <MultiCurrencyDependent>false</MultiCurrencyDependent>
            <IsEditable>false</IsEditable>
            <HideCondition />
            <Width>-1</Width>
            <CustomFormatter />
            <AbbreviationLength>0</AbbreviationLength>
            <PickListName>ErpReceivableStatus</PickListName>
            <DisplayMode>AsText</DisplayMode>
            <StorageMode>Code</StorageMode>
          </QFSDataPickListCol>
          <QFEditableCol>
            <StyleScheme />
            <DataField>ErpPaymentTermId</DataField>
            <ColumnId>e0cc4dc7-be22-4981-9204-92e684a32bd4</ColumnId>
            <HorizontalAlignment>left</HorizontalAlignment>
            <HeaderAlignment>left</HeaderAlignment>
            <SortDirection>None</SortDirection>
            <IsSortable>true</IsSortable>
            <SortField>ErpPaymentTermId</SortField>
            <MultiCurrencyDependent>false</MultiCurrencyDependent>
            <IsEditable>false</IsEditable>
            <HideCondition />
            <Width>-1</Width>
            <CustomFormatter />
            <AbbreviationLength>0</AbbreviationLength>
          </QFEditableCol>
          <QFSDataDateTimeCol>
            <StyleScheme />
            <DataField>ErpDocumentDate</DataField>
            <ColumnId>3a9638e2-94a1-4737-bf52-5472ca8c2353</ColumnId>
            <HorizontalAlignment>left</HorizontalAlignment>
            <HeaderAlignment>left</HeaderAlignment>
            <SortDirection>None</SortDirection>
            <IsSortable>true</IsSortable>
            <SortField>ErpDocumentDate</SortField>
            <MultiCurrencyDependent>false</MultiCurrencyDependent>
            <IsEditable>false</IsEditable>
            <HideCondition />
            <Width>-1</Width>
            <CustomFormatter />
            <AbbreviationLength>0</AbbreviationLength>
            <DateOnly>true</DateOnly>
          </QFSDataDateTimeCol>
          <QFSDataCurrencyCol>
            <StyleScheme />
            <DataField>ReceivableAmount</DataField>
            <ColumnId>80e8dae7-8ee3-46d1-8e49-04178ffa8f4f</ColumnId>
            <HorizontalAlignment>right</HorizontalAlignment>
            <HeaderAlignment>left</HeaderAlignment>
            <SortDirection>None</SortDirection>
            <IsSortable>true</IsSortable>
            <SortField>ReceivableAmount</SortField>
            <MultiCurrencyDependent>false</MultiCurrencyDependent>
            <IsEditable>false</IsEditable>
            <HideCondition />
            <Width>-1</Width>
            <CustomFormatter />
            <AbbreviationLength>0</AbbreviationLength>
            <CurrentCode>CurrencyCode</CurrentCode>
            <ExchangeRate />
            <ExchangeRateType>EntityRate</ExchangeRateType>
            <DecimalDigits>4</DecimalDigits>
          </QFSDataCurrencyCol>
        </Columns>
        <ConditionalWhere>function () {
    var clientContextService = Sage.Services.getService("ClientContextService");
    if (clientContextService.containsKey("Filter")) {
        var indexOfFilter = clientContextService._indexOf("Filter");
        var filterValue = clientContextService._items[indexOfFilter].itemVal;
        if (filterValue !== "")
            return dojo.string.substitute("Account.Id eq '${0}' and ${1}", [Sage.Utility.getCurrentEntityId(),  filterValue]);
    }
    return dojo.string.substitute("Account.Id eq '${0}'", [Sage.Utility.getCurrentEntityId()]);
}</ConditionalWhere>
        <Select>
          <string>CurrencyCode</string>
        </Select>
        <Include />
        <FeedCategory>InternalAppEntities</FeedCategory>
        <OnGetMappingId />
        <ParentRelationshipPropertyName>Account</ParentRelationshipPropertyName>
        <ChildRelationshipPropertyName />
        <OnDataChange />
        <OnAdd />
        <Tools />
      </QFSDataGrid>
    </Control>
    <Control typeName="Sage.SalesLogix.QuickForms.QFControls.QFSLXPickList, Sage.SalesLogix.QuickForms.QFControls">
      <QFSLXPickList>
        <Column>1</Column>
        <Row>0</Row>
        <Visible>false</Visible>
        <HotKey>0</HotKey>
        <TabIndex>0</TabIndex>
        <ControlId>pklStatus</ControlId>
        <DataBindings />
        <ControlLabelPlacement>left</ControlLabelPlacement>
        <ExtendedProperties />
        <CaptionAlignment>left</CaptionAlignment>
        <StyleScheme>NegativeNumber</StyleScheme>
        <MaxLength>64</MaxLength>
        <OnChangeAction>
          <ResourceKey>pklStatus</ResourceKey>
          <Action typeName="Sage.Platform.QuickForms.ActionItems.NoActionActionItem, Sage.Platform.QuickForms">
            <NoActionActionItem>
              <MethodName />
            </NoActionActionItem>
          </Action>
          <IsDialogCloseAction>False</IsDialogCloseAction>
          <RunOnEveryRePaint>False</RunOnEveryRePaint>
          <DialogActionResult>NoResult</DialogActionResult>
          <PerformsUpdate>False</PerformsUpdate>
          <AppliedSecurity />
          <RefreshData>False</RefreshData>
        </OnChangeAction>
        <Required>false</Required>
        <AutoPostBack>false</AutoPostBack>
        <PickListName>ErpReceivableStatus</PickListName>
        <StorageMode>Code</StorageMode>
        <NameFormatString />
        <AllowMultiples>false</AllowMultiples>
        <AlphaSort>false</AlphaSort>
        <CanEditText>false</CanEditText>
        <MustExistInList>false</MustExistInList>
        <NoneEditable>false</NoneEditable>
        <PickListId />
        <PickListFilter />
        <ValueStoredAsText>false</ValueStoredAsText>
      </QFSLXPickList>
    </Control>
    <Control typeName="Sage.Platform.QuickForms.QFControls.QFControlsList, Sage.Platform.QuickForms.QFControls">
      <QFControlsList>
        <Column>2</Column>
        <Row>0</Row>
        <Visible>false</Visible>
        <HotKey>0</HotKey>
        <TabIndex>0</TabIndex>
        <ControlId>QFControlsList</ControlId>
        <DataBindings />
        <ControlLabelPlacement>left</ControlLabelPlacement>
        <ExtendedProperties />
        <CaptionAlignment>left</CaptionAlignment>
        <StyleScheme />
        <Caption />
        <Controls>
          <ControlsCollection>
            <Control TypeName="Sage.Platform.QuickForms.Controls.QFButton, Sage.Platform.QuickForms">
              <QFButton>
                <Column>0</Column>
                <Row>0</Row>
                <HotKey>0</HotKey>
                <TabIndex>0</TabIndex>
                <ControlId>btnApply</ControlId>
                <DataBindings />
                <ControlLabelPlacement>none</ControlLabelPlacement>
                <ExtendedProperties />
                <CaptionAlignment>left</CaptionAlignment>
                <StyleScheme>Bevel</StyleScheme>
                <ButtonType>StandardButton</ButtonType>
                <Image />
                <OnClientClick />
                <OnClickAction>
                  <ResourceKey>btnApply</ResourceKey>
                  <Action typeName="Sage.Platform.QuickForms.ActionItems.CSharpSnippetActionItem, Sage.Platform.QuickForms">
                    <CSharpSnippetActionItem>
                      <MethodName>btnApply_ClickAction</MethodName>
                      <CSharpCodeSnippet>
var filter = new System.Collections.Generic.List&lt;string&gt;();
if (!string.IsNullOrEmpty(pklStatus.PickListValue))
{
    filter.Add(string.Format("ErpStatus eq '{0}'", pklStatus.PickListValue));
}
if (!string.IsNullOrEmpty(cboAccountingEntity.SelectedValue))
{
 filter.Add(string.Format("ErpAccountingEntityId eq '{0}'", cboAccountingEntity.SelectedValue));
}


var clientContextService = PageWorkItem.Services.Get&lt;Sage.Platform.WebPortal.Services.ClientContextService&gt;();
if (clientContextService == null)
    return;

if (clientContextService.CurrentContext.ContainsKey("Filter"))
{
    if (filter.Count == 0)
    {
        clientContextService.CurrentContext.Remove("Filter");
    }
    else
    {
        clientContextService.CurrentContext["Filter"] = string.Join(" and ", filter);
    }
}
else if (filter.Count &gt; 0)
{
    clientContextService.CurrentContext.Add("Filter", string.Join(" and ", filter));
}</CSharpCodeSnippet>
                    </CSharpSnippetActionItem>
                  </Action>
                  <IsDialogCloseAction>False</IsDialogCloseAction>
                  <RunOnEveryRePaint>False</RunOnEveryRePaint>
                  <DialogActionResult>NoResult</DialogActionResult>
                  <PerformsUpdate>False</PerformsUpdate>
                  <AppliedSecurity />
                  <RefreshData>False</RefreshData>
                </OnClickAction>
              </QFButton>
            </Control>
            <Control TypeName="Sage.Platform.QuickForms.Controls.QFButton, Sage.Platform.QuickForms">
              <QFButton>
                <Column>0</Column>
                <Row>0</Row>
                <HotKey>0</HotKey>
                <TabIndex>0</TabIndex>
                <ControlId>btnReset</ControlId>
                <DataBindings />
                <ControlLabelPlacement>none</ControlLabelPlacement>
                <ExtendedProperties />
                <CaptionAlignment>left</CaptionAlignment>
                <StyleScheme />
                <ButtonType>StandardButton</ButtonType>
                <Image />
                <OnClientClick />
                <OnClickAction>
                  <ResourceKey>btnReset</ResourceKey>
                  <Action typeName="Sage.Platform.QuickForms.ActionItems.CSharpSnippetActionItem, Sage.Platform.QuickForms">
                    <CSharpSnippetActionItem>
                      <MethodName>btnReset_ClickAction</MethodName>
                      <CSharpCodeSnippet>pklStatus.PickListValue = string.Empty;
cboAccountingEntity.SelectedValue = string.Empty;


var clientContextService = PageWorkItem.Services.Get&lt;Sage.Platform.WebPortal.Services.ClientContextService&gt;();
if (clientContextService == null)
    return;

if (clientContextService.CurrentContext.ContainsKey("Filter"))
{
    clientContextService.CurrentContext.Remove("Filter");
}
</CSharpCodeSnippet>
                    </CSharpSnippetActionItem>
                  </Action>
                  <IsDialogCloseAction>False</IsDialogCloseAction>
                  <RunOnEveryRePaint>False</RunOnEveryRePaint>
                  <DialogActionResult>NoResult</DialogActionResult>
                  <PerformsUpdate>False</PerformsUpdate>
                  <AppliedSecurity />
                  <RefreshData>False</RefreshData>
                </OnClickAction>
              </QFButton>
            </Control>
          </ControlsCollection>
        </Controls>
      </QFControlsList>
    </Control>
  </Controls>
  <ToolControls>
    <Control typeName="Sage.Platform.QuickForms.Controls.QFElementSpacer, Sage.Platform.QuickForms">
      <QFElementSpacer>
        <Column>0</Column>
        <Row>0</Row>
        <HotKey>0</HotKey>
        <TabIndex>0</TabIndex>
        <ControlId>e334c6654356ae4c4de32d531778</ControlId>
        <DataBindings />
        <ControlLabelPlacement>left</ControlLabelPlacement>
        <ExtendedProperties />
        <CaptionAlignment>left</CaptionAlignment>
        <StyleScheme />
      </QFElementSpacer>
    </Control>
    <Control typeName="Sage.Platform.QuickForms.Controls.QFElementSpacer, Sage.Platform.QuickForms">
      <QFElementSpacer>
        <Column>0</Column>
        <Row>0</Row>
        <HotKey>0</HotKey>
        <TabIndex>0</TabIndex>
        <ControlId>aab3cf11a6418ab7ca69d288bca6e3</ControlId>
        <DataBindings />
        <ControlLabelPlacement>left</ControlLabelPlacement>
        <ExtendedProperties />
        <CaptionAlignment>left</CaptionAlignment>
        <StyleScheme />
      </QFElementSpacer>
    </Control>
    <Control typeName="Sage.Platform.QuickForms.Controls.QFButton, Sage.Platform.QuickForms">
      <QFButton>
        <Column>0</Column>
        <Row>0</Row>
        <HotKey>0</HotKey>
        <TabIndex>0</TabIndex>
        <ControlId>tbrButton</ControlId>
        <DataBindings />
        <ControlLabelPlacement>none</ControlLabelPlacement>
        <ExtendedProperties />
        <CaptionAlignment>left</CaptionAlignment>
        <StyleScheme />
        <ButtonType>Icon</ButtonType>
        <Image>[Localization!Global_Images:Filter_16x16]</Image>
        <OnClientClick />
        <OnClickAction>
          <ResourceKey>tbrButton</ResourceKey>
          <Action typeName="Sage.Platform.QuickForms.ActionItems.CSharpSnippetActionItem, Sage.Platform.QuickForms">
            <CSharpSnippetActionItem>
              <MethodName>tbrButton_ClickAction</MethodName>
              <CSharpCodeSnippet>var clientContextService = PageWorkItem.Services.Get&lt;Sage.Platform.SData.IAppIdMappingService&gt;();
if(clientContextService!=null &amp;&amp; clientContextService.IsMasterDataConsolidationEnabled())
{
	if(cboAccountingEntity.Visible==false)
	{
		cboAccountingEntity.Visible=true;
		cboAccountingEntity_lbl.Visible=true;
	}
	else{
		cboAccountingEntity.Visible=false;
		cboAccountingEntity_lbl.Visible=false;	
	}
}
if(pklStatus.Visible==false)
{
	pklStatus.Visible=true;
	pklStatus_lbl.Visible=true;
	QFControlsList.Visible=true;
}
else{
	pklStatus.Visible=false;
	pklStatus_lbl.Visible=false;	
	QFControlsList.Visible=false;
}</CSharpCodeSnippet>
            </CSharpSnippetActionItem>
          </Action>
          <IsDialogCloseAction>False</IsDialogCloseAction>
          <RunOnEveryRePaint>False</RunOnEveryRePaint>
          <DialogActionResult>NoResult</DialogActionResult>
          <PerformsUpdate>False</PerformsUpdate>
          <AppliedSecurity />
          <RefreshData>False</RefreshData>
        </OnClickAction>
      </QFButton>
    </Control>
  </ToolControls>
  <Columns>
    <ColumnStyle>
      <SizeType>Percent</SizeType>
      <Width>45</Width>
    </ColumnStyle>
    <ColumnStyle>
      <SizeType>Percent</SizeType>
      <Width>35</Width>
    </ColumnStyle>
    <ColumnStyle>
      <SizeType>Percent</SizeType>
      <Width>20</Width>
    </ColumnStyle>
  </Columns>
  <Rows>
    <RowStyle>
      <SizeType>Absolute</SizeType>
      <Height>25</Height>
    </RowStyle>
    <RowStyle>
      <SizeType>Absolute</SizeType>
      <Height>35</Height>
    </RowStyle>
  </Rows>
  <Description />
  <UseEntityNameAsTitle>false</UseEntityNameAsTitle>
  <EntityTypeName>IAccount</EntityTypeName>
  <DefaultNamespace>Sage.Entity.Interfaces</DefaultNamespace>
  <AssemblyName>Sage.Entity.Interfaces</AssemblyName>
</QuickForm>